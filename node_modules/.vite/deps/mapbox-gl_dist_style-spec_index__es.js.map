{
  "version": 3,
  "sources": ["../../node_modules/json-stringify-pretty-compact/index.js", "../../mapbox-gl/dist/format.js", "../../node_modules/url/node_modules/punycode/punycode.js", "../../node_modules/url/util.js", "../../node_modules/querystring/decode.js", "../../node_modules/querystring/encode.js", "../../node_modules/querystring/index.js", "../../node_modules/url/url.js", "../../mapbox-gl/dist/visit.js", "../../mapbox-gl/dist/migrate/v8.js", "../../mapbox-gl/dist/util/extend.js", "../../mapbox-gl/dist/expression/parsing_error.js", "../../mapbox-gl/dist/expression/scope.js", "../../mapbox-gl/dist/expression/types.js", "../../node_modules/csscolorparser/csscolorparser.js", "../../mapbox-gl/dist/util/color.js", "../../mapbox-gl/dist/expression/types/collator.js", "../../mapbox-gl/dist/expression/types/formatted.js", "../../mapbox-gl/dist/expression/types/resolved_image.js", "../../mapbox-gl/dist/expression/values.js", "../../mapbox-gl/dist/expression/definitions/literal.js", "../../mapbox-gl/dist/expression/runtime_error.js", "../../mapbox-gl/dist/expression/definitions/assertion.js", "../../mapbox-gl/dist/expression/definitions/format.js", "../../mapbox-gl/dist/expression/definitions/image.js", "../../mapbox-gl/dist/expression/definitions/coercion.js", "../../mapbox-gl/dist/expression/evaluation_context.js", "../../mapbox-gl/dist/expression/compound_expression.js", "../../mapbox-gl/dist/expression/definitions/collator.js", "../../mapbox-gl/dist/expression/definitions/within.js", "../../mapbox-gl/dist/expression/is_constant.js", "../../mapbox-gl/dist/expression/definitions/var.js", "../../mapbox-gl/dist/expression/parsing_context.js", "../../mapbox-gl/dist/expression/stops.js", "../../mapbox-gl/dist/expression/definitions/step.js", "../../node_modules/@mapbox/unitbezier/index.js", "../../mapbox-gl/dist/util/interpolate.js", "../../mapbox-gl/dist/util/color_spaces.js", "../../mapbox-gl/dist/expression/definitions/interpolate.js", "../../mapbox-gl/dist/expression/definitions/coalesce.js", "../../mapbox-gl/dist/expression/definitions/let.js", "../../mapbox-gl/dist/expression/definitions/at.js", "../../mapbox-gl/dist/expression/definitions/in.js", "../../mapbox-gl/dist/expression/definitions/index_of.js", "../../mapbox-gl/dist/expression/definitions/match.js", "../../mapbox-gl/dist/expression/definitions/case.js", "../../mapbox-gl/dist/expression/definitions/slice.js", "../../mapbox-gl/dist/expression/definitions/comparison.js", "../../mapbox-gl/dist/expression/definitions/number_format.js", "../../mapbox-gl/dist/expression/definitions/length.js", "../../mapbox-gl/dist/expression/definitions/index.js", "../../mapbox-gl/dist/util/result.js", "../../mapbox-gl/dist/util/properties.js", "../../mapbox-gl/dist/util/get_type.js", "../../mapbox-gl/dist/function/index.js", "../../mapbox-gl/dist/expression/index.js", "../../mapbox-gl/dist/function/convert.js", "../../mapbox-gl/dist/util/unbundle_jsonlint.js", "../../mapbox-gl/dist/feature_filter/index.js", "../../mapbox-gl/dist/feature_filter/convert.js", "../../mapbox-gl/dist/migrate/expressions.js", "../../mapbox-gl/dist/migrate.js", "../../mapbox-gl/dist/composite.js", "../../mapbox-gl/dist/util/ref_properties.js", "../../mapbox-gl/dist/deref.js", "../../mapbox-gl/dist/util/deep_equal.js", "../../mapbox-gl/dist/diff.js", "../../mapbox-gl/dist/error/validation_error.js", "../../mapbox-gl/dist/error/parsing_error.js", "../../mapbox-gl/dist/validate/validate_object.js", "../../mapbox-gl/dist/validate/validate_array.js", "../../mapbox-gl/dist/validate/validate_number.js", "../../mapbox-gl/dist/validate/validate_function.js", "../../mapbox-gl/dist/validate/validate_expression.js", "../../mapbox-gl/dist/validate/validate_boolean.js", "../../mapbox-gl/dist/validate/validate_color.js", "../../mapbox-gl/dist/validate/validate_enum.js", "../../mapbox-gl/dist/validate/validate_filter.js", "../../mapbox-gl/dist/validate/validate_property.js", "../../mapbox-gl/dist/validate/validate_paint_property.js", "../../mapbox-gl/dist/validate/validate_layout_property.js", "../../mapbox-gl/dist/validate/validate_layer.js", "../../mapbox-gl/dist/validate/validate_string.js", "../../mapbox-gl/dist/validate/validate_source.js", "../../mapbox-gl/dist/validate/validate_light.js", "../../mapbox-gl/dist/validate/validate_terrain.js", "../../mapbox-gl/dist/validate/validate_fog.js", "../../mapbox-gl/dist/validate/validate_formatted.js", "../../mapbox-gl/dist/validate/validate_image.js", "../../mapbox-gl/dist/validate/validate_projection.js", "../../mapbox-gl/dist/validate/validate.js", "../../mapbox-gl/dist/validate/validate_glyphs_url.js", "../../mapbox-gl/dist/validate_style.min.js", "../../node_modules/@mapbox/jsonlint-lines-primitives/lib/jsonlint.js", "../../mapbox-gl/dist/read_style.js", "../../mapbox-gl/dist/validate_style.js", "../../mapbox-gl/dist/validate_mapbox_api_supported.js", "../../mapbox-gl/dist/style-spec.js"],
  "sourcesContent": ["// Note: This regex matches even invalid JSON strings, but since we’re\n// working on the output of `JSON.stringify` we know that only valid strings\n// are present (unless the user supplied a weird `options.indent` but in\n// that case we don’t care since the output would be invalid anyway).\nconst stringOrChar = /(\"(?:[^\\\\\"]|\\\\.)*\")|[:,]/g;\n\nexport default function stringify(passedObj, options = {}) {\n  const indent = JSON.stringify(\n    [1],\n    undefined,\n    options.indent === undefined ? 2 : options.indent\n  ).slice(2, -3);\n\n  const maxLength =\n    indent === \"\"\n      ? Infinity\n      : options.maxLength === undefined\n      ? 80\n      : options.maxLength;\n\n  let { replacer } = options;\n\n  return (function _stringify(obj, currentIndent, reserved) {\n    if (obj && typeof obj.toJSON === \"function\") {\n      obj = obj.toJSON();\n    }\n\n    const string = JSON.stringify(obj, replacer);\n\n    if (string === undefined) {\n      return string;\n    }\n\n    const length = maxLength - currentIndent.length - reserved;\n\n    if (string.length <= length) {\n      const prettified = string.replace(\n        stringOrChar,\n        (match, stringLiteral) => {\n          return stringLiteral || `${match} `;\n        }\n      );\n      if (prettified.length <= length) {\n        return prettified;\n      }\n    }\n\n    if (replacer != null) {\n      obj = JSON.parse(string);\n      replacer = undefined;\n    }\n\n    if (typeof obj === \"object\" && obj !== null) {\n      const nextIndent = currentIndent + indent;\n      const items = [];\n      let index = 0;\n      let start;\n      let end;\n\n      if (Array.isArray(obj)) {\n        start = \"[\";\n        end = \"]\";\n        const { length } = obj;\n        for (; index < length; index++) {\n          items.push(\n            _stringify(obj[index], nextIndent, index === length - 1 ? 0 : 1) ||\n              \"null\"\n          );\n        }\n      } else {\n        start = \"{\";\n        end = \"}\";\n        const keys = Object.keys(obj);\n        const { length } = keys;\n        for (; index < length; index++) {\n          const key = keys[index];\n          const keyPart = `${JSON.stringify(key)}: `;\n          const value = _stringify(\n            obj[key],\n            nextIndent,\n            keyPart.length + (index === length - 1 ? 0 : 1)\n          );\n          if (value !== undefined) {\n            items.push(keyPart + value);\n          }\n        }\n      }\n\n      if (items.length > 0) {\n        return [start, indent + items.join(`,\\n${nextIndent}`), end].join(\n          `\\n${currentIndent}`\n        );\n      }\n    }\n\n    return string;\n  })(passedObj, \"\", 0);\n}\n", "\nimport reference from './reference/latest.js';\nimport stringifyPretty from 'json-stringify-pretty-compact';\n\nfunction sortKeysBy(obj, reference) {\n    const result = {};\n    for (const key in reference) {\n        if (obj[key] !== undefined) {\n            result[key] = obj[key];\n        }\n    }\n    for (const key in obj) {\n        if (result[key] === undefined) {\n            result[key] = obj[key];\n        }\n    }\n    return result;\n}\n\n/**\n * Format a Mapbox GL Style.  Returns a stringified style with its keys\n * sorted in the same order as the reference style.\n *\n * The optional `space` argument is passed to\n * [`JSON.stringify`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify)\n * to generate formatted output.\n *\n * If `space` is unspecified, a default of `2` spaces will be used.\n *\n * @private\n * @param {Object} style a Mapbox GL Style\n * @param {number} [space] space argument to pass to `JSON.stringify`\n * @returns {string} stringified formatted JSON\n * @example\n * var fs = require('fs');\n * var format = require('mapbox-gl-style-spec').format;\n * var style = fs.readFileSync('./source.json', 'utf8');\n * fs.writeFileSync('./dest.json', format(style));\n * fs.writeFileSync('./dest.min.json', format(style, 0));\n */\nfunction format(style, space = 2) {\n    style = sortKeysBy(style, reference.$root);\n\n    if (style.layers) {\n        style.layers = style.layers.map((layer) => sortKeysBy(layer, reference.layer));\n    }\n\n    return stringifyPretty(style, {indent: space});\n}\n\nexport default format;\n", "/*! https://mths.be/punycode v1.3.2 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * http://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.3.2',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) { // in Node.js or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else { // in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else { // in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n", "'use strict';\n\nmodule.exports = {\n  isString: function(arg) {\n    return typeof(arg) === 'string';\n  },\n  isObject: function(arg) {\n    return typeof(arg) === 'object' && arg !== null;\n  },\n  isNull: function(arg) {\n    return arg === null;\n  },\n  isNullOrUndefined: function(arg) {\n    return arg == null;\n  }\n};\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n// If obj.hasOwnProperty has been overridden, then calling\n// obj.hasOwnProperty(prop) will break.\n// See: https://github.com/joyent/node/issues/1707\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nmodule.exports = function(qs, sep, eq, options) {\n  sep = sep || '&';\n  eq = eq || '=';\n  var obj = {};\n\n  if (typeof qs !== 'string' || qs.length === 0) {\n    return obj;\n  }\n\n  var regexp = /\\+/g;\n  qs = qs.split(sep);\n\n  var maxKeys = 1000;\n  if (options && typeof options.maxKeys === 'number') {\n    maxKeys = options.maxKeys;\n  }\n\n  var len = qs.length;\n  // maxKeys <= 0 means that we should not limit keys count\n  if (maxKeys > 0 && len > maxKeys) {\n    len = maxKeys;\n  }\n\n  for (var i = 0; i < len; ++i) {\n    var x = qs[i].replace(regexp, '%20'),\n        idx = x.indexOf(eq),\n        kstr, vstr, k, v;\n\n    if (idx >= 0) {\n      kstr = x.substr(0, idx);\n      vstr = x.substr(idx + 1);\n    } else {\n      kstr = x;\n      vstr = '';\n    }\n\n    k = decodeURIComponent(kstr);\n    v = decodeURIComponent(vstr);\n\n    if (!hasOwnProperty(obj, k)) {\n      obj[k] = v;\n    } else if (Array.isArray(obj[k])) {\n      obj[k].push(v);\n    } else {\n      obj[k] = [obj[k], v];\n    }\n  }\n\n  return obj;\n};\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar stringifyPrimitive = function(v) {\n  switch (typeof v) {\n    case 'string':\n      return v;\n\n    case 'boolean':\n      return v ? 'true' : 'false';\n\n    case 'number':\n      return isFinite(v) ? v : '';\n\n    default:\n      return '';\n  }\n};\n\nmodule.exports = function(obj, sep, eq, name) {\n  sep = sep || '&';\n  eq = eq || '=';\n  if (obj === null) {\n    obj = undefined;\n  }\n\n  if (typeof obj === 'object') {\n    return Object.keys(obj).map(function(k) {\n      var ks = encodeURIComponent(stringifyPrimitive(k)) + eq;\n      if (Array.isArray(obj[k])) {\n        return obj[k].map(function(v) {\n          return ks + encodeURIComponent(stringifyPrimitive(v));\n        }).join(sep);\n      } else {\n        return ks + encodeURIComponent(stringifyPrimitive(obj[k]));\n      }\n    }).join(sep);\n\n  }\n\n  if (!name) return '';\n  return encodeURIComponent(stringifyPrimitive(name)) + eq +\n         encodeURIComponent(stringifyPrimitive(obj));\n};\n", "'use strict';\n\nexports.decode = exports.parse = require('./decode');\nexports.encode = exports.stringify = require('./encode');\n", "// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n", "// @flow\n\nimport Reference from './reference/v8.json';\nimport type {StylePropertySpecification} from './style-spec.js';\nimport type {\n    StyleSpecification,\n    SourceSpecification,\n    LayerSpecification,\n    PropertyValueSpecification,\n    DataDrivenPropertyValueSpecification\n} from './types.js';\n\nfunction getPropertyReference(propertyName): StylePropertySpecification {\n    for (let i = 0; i < Reference.layout.length; i++) {\n        for (const key in Reference[Reference.layout[i]]) {\n            if (key === propertyName) return (Reference[Reference.layout[i]][key]: any);\n        }\n    }\n    for (let i = 0; i < Reference.paint.length; i++) {\n        for (const key in Reference[Reference.paint[i]]) {\n            if (key === propertyName) return (Reference[Reference.paint[i]][key]: any);\n        }\n    }\n\n    return (null: any);\n}\n\nexport function eachSource(style: StyleSpecification, callback: (_: SourceSpecification) => void) {\n    for (const k in style.sources) {\n        callback(style.sources[k]);\n    }\n}\n\nexport function eachLayer(style: StyleSpecification, callback: (_: LayerSpecification) => void) {\n    for (const layer of style.layers) {\n        callback(layer);\n    }\n}\n\ntype PropertyCallback = ({\n    path: [string, 'paint' | 'layout', string], // [layerid, paint/layout, property key]\n    key: string,\n    value: PropertyValueSpecification<mixed> | DataDrivenPropertyValueSpecification<mixed>,\n    reference: StylePropertySpecification,\n    set: (PropertyValueSpecification<mixed> | DataDrivenPropertyValueSpecification<mixed>) => void\n}) => void;\n\nexport function eachProperty(\n    style: StyleSpecification,\n    options: {paint?: boolean, layout?: boolean},\n    callback: PropertyCallback\n) {\n    function inner(layer, propertyType: 'paint' | 'layout') {\n        const properties = (layer[propertyType]: any);\n        if (!properties) return;\n        Object.keys(properties).forEach((key) => {\n            callback({\n                path: [layer.id, propertyType, key],\n                key,\n                value: properties[key],\n                reference: getPropertyReference(key),\n                set(x) {\n                    properties[key] = x;\n                }\n            });\n        });\n    }\n\n    eachLayer(style, (layer) => {\n        if (options.paint) {\n            inner(layer, 'paint');\n        }\n        if (options.layout) {\n            inner(layer, 'layout');\n        }\n    });\n}\n", "\nimport URL from 'url';\nimport {eachSource, eachLayer, eachProperty} from '../visit.js';\n\nfunction eachLayout(layer, callback) {\n    for (const k in layer) {\n        if (k.indexOf('layout') === 0) {\n            callback(layer[k], k);\n        }\n    }\n}\n\nfunction eachPaint(layer, callback) {\n    for (const k in layer) {\n        if (k.indexOf('paint') === 0) {\n            callback(layer[k], k);\n        }\n    }\n}\n\nfunction resolveConstant(style, value) {\n    if (typeof value === 'string' && value[0] === '@') {\n        return resolveConstant(style, style.constants[value]);\n    } else {\n        return value;\n    }\n}\n\nfunction isFunction(value) {\n    return Array.isArray(value.stops);\n}\n\nfunction renameProperty(obj, from, to) {\n    obj[to] = obj[from]; delete obj[from];\n}\n\nexport default function(style) {\n    style.version = 8;\n\n    // Rename properties, reverse coordinates in source and layers\n    eachSource(style, (source) => {\n        if (source.type === 'video' && source.url !== undefined) {\n            renameProperty(source, 'url', 'urls');\n        }\n        if (source.type === 'video') {\n            source.coordinates.forEach((coord) => {\n                return coord.reverse();\n            });\n        }\n    });\n\n    eachLayer(style, (layer) => {\n        eachLayout(layer, (layout) => {\n            if (layout['symbol-min-distance'] !== undefined) {\n                renameProperty(layout, 'symbol-min-distance', 'symbol-spacing');\n            }\n        });\n\n        eachPaint(layer, (paint) => {\n            if (paint['background-image'] !== undefined) {\n                renameProperty(paint, 'background-image', 'background-pattern');\n            }\n            if (paint['line-image'] !== undefined) {\n                renameProperty(paint, 'line-image', 'line-pattern');\n            }\n            if (paint['fill-image'] !== undefined) {\n                renameProperty(paint, 'fill-image', 'fill-pattern');\n            }\n        });\n    });\n\n    // Inline Constants\n    eachProperty(style, {paint: true, layout: true}, (property) => {\n        const value = resolveConstant(style, property.value);\n\n        if (isFunction(value)) {\n            value.stops.forEach((stop) => {\n                stop[1] = resolveConstant(style, stop[1]);\n            });\n        }\n\n        property.set(value);\n    });\n    delete style.constants;\n\n    eachLayer(style, (layer) => {\n        // get rid of text-max-size, icon-max-size\n        // turn text-size, icon-size into layout properties\n        // https://github.com/mapbox/mapbox-gl-style-spec/issues/255\n\n        eachLayout(layer, (layout) => {\n            delete layout['text-max-size'];\n            delete layout['icon-max-size'];\n        });\n\n        eachPaint(layer, (paint) => {\n            if (paint['text-size']) {\n                if (!layer.layout) layer.layout = {};\n                layer.layout['text-size'] = paint['text-size'];\n                delete paint['text-size'];\n            }\n\n            if (paint['icon-size']) {\n                if (!layer.layout) layer.layout = {};\n                layer.layout['icon-size'] = paint['icon-size'];\n                delete paint['icon-size'];\n            }\n        });\n    });\n\n    function migrateFontstackURL(input) {\n        const inputParsed = URL.parse(input);\n        const inputPathnameParts = inputParsed.pathname.split('/');\n\n        if (inputParsed.protocol !== 'mapbox:') {\n            return input;\n\n        } else if (inputParsed.hostname === 'fontstack') {\n            assert(decodeURI(inputParsed.pathname) === '/{fontstack}/{range}.pbf');\n            return 'mapbox://fonts/mapbox/{fontstack}/{range}.pbf';\n\n        } else if (inputParsed.hostname === 'fonts') {\n            assert(inputPathnameParts[1] === 'v1');\n            assert(decodeURI(inputPathnameParts[3]) === '{fontstack}');\n            assert(decodeURI(inputPathnameParts[4]) === '{range}.pbf');\n            return `mapbox://fonts/${inputPathnameParts[2]}/{fontstack}/{range}.pbf`;\n\n        } else {\n            assert(false);\n        }\n\n        function assert(predicate) {\n            if (!predicate) {\n                throw new Error(`Invalid font url: \"${input}\"`);\n            }\n        }\n    }\n\n    if (style.glyphs) {\n        style.glyphs = migrateFontstackURL(style.glyphs);\n    }\n\n    function migrateFontStack(font) {\n        function splitAndTrim(string) {\n            return string.split(',').map((s) => {\n                return s.trim();\n            });\n        }\n\n        if (Array.isArray(font)) {\n            // Assume it's a previously migrated font-array.\n            return font;\n\n        } else if (typeof font === 'string') {\n            return splitAndTrim(font);\n\n        } else if (typeof font === 'object') {\n            font.stops.forEach((stop) => {\n                stop[1] = splitAndTrim(stop[1]);\n            });\n            return font;\n\n        } else {\n            throw new Error(\"unexpected font value\");\n        }\n    }\n\n    eachLayer(style, (layer) => {\n        eachLayout(layer, (layout) => {\n            if (layout['text-font']) {\n                layout['text-font'] = migrateFontStack(layout['text-font']);\n            }\n        });\n    });\n\n    // Reverse order of symbol layers. This is an imperfect migration.\n    //\n    // The order of a symbol layer in the layers list affects two things:\n    // - how it is drawn relative to other layers (like oneway arrows below bridges)\n    // - the placement priority compared to other layers\n    //\n    // It's impossible to reverse the placement priority without breaking the draw order\n    // in some cases. This migration only reverses the order of symbol layers that\n    // are above all other types of layers.\n    //\n    // Symbol layers that are at the top of the map preserve their priority.\n    // Symbol layers that are below another type (line, fill) of layer preserve their draw order.\n\n    let firstSymbolLayer = 0;\n    for (let i = style.layers.length - 1; i >= 0; i--) {\n        const layer = style.layers[i];\n        if (layer.type !== 'symbol') {\n            firstSymbolLayer = i + 1;\n            break;\n        }\n    }\n\n    const symbolLayers = style.layers.splice(firstSymbolLayer);\n    symbolLayers.reverse();\n    style.layers = style.layers.concat(symbolLayers);\n\n    return style;\n}\n", "// @flow\n\nexport default function (output: any, ...inputs: Array<any>): any {\n    for (const input of inputs) {\n        for (const k in input) {\n            output[k] = input[k];\n        }\n    }\n    return output;\n}\n", "// @flow\n\nclass ParsingError extends Error {\n    key: string;\n    message: string;\n    constructor(key: string, message: string) {\n        super(message);\n        this.message = message;\n        this.key = key;\n    }\n}\n\nexport default ParsingError;\n", "// @flow\n\nimport type {Expression} from './expression.js';\n\n/**\n * Tracks `let` bindings during expression parsing.\n * @private\n */\nclass Scope {\n    parent: ?Scope;\n    bindings: {[_: string]: Expression};\n    constructor(parent?: Scope, bindings: Array<[string, Expression]> = []) {\n        this.parent = parent;\n        this.bindings = {};\n        for (const [name, expression] of bindings) {\n            this.bindings[name] = expression;\n        }\n    }\n\n    concat(bindings: Array<[string, Expression]>): Scope {\n        return new Scope(this, bindings);\n    }\n\n    get(name: string): Expression {\n        if (this.bindings[name]) { return this.bindings[name]; }\n        if (this.parent) { return this.parent.get(name); }\n        throw new Error(`${name} not found in scope.`);\n    }\n\n    has(name: string): boolean {\n        if (this.bindings[name]) return true;\n        return this.parent ? this.parent.has(name) : false;\n    }\n}\n\nexport default Scope;\n", "// @flow\n\nexport type NullTypeT = { kind: 'null' };\nexport type NumberTypeT = { kind: 'number' };\nexport type StringTypeT = { kind: 'string' };\nexport type BooleanTypeT = { kind: 'boolean' };\nexport type ColorTypeT = { kind: 'color' };\nexport type ObjectTypeT = { kind: 'object' };\nexport type ValueTypeT = { kind: 'value' };\nexport type ErrorTypeT = { kind: 'error' };\nexport type CollatorTypeT = { kind: 'collator' };\nexport type FormattedTypeT = { kind: 'formatted' };\nexport type ResolvedImageTypeT = { kind: 'resolvedImage' };\n\nexport type EvaluationKind = 'constant' | 'source' | 'camera' | 'composite';\n\nexport type Type =\n    NullTypeT |\n    NumberTypeT |\n    StringTypeT |\n    BooleanTypeT |\n    ColorTypeT |\n    ObjectTypeT |\n    ValueTypeT |\n    ArrayType | // eslint-disable-line no-use-before-define\n    ErrorTypeT |\n    CollatorTypeT |\n    FormattedTypeT |\n    ResolvedImageTypeT\n\nexport type ArrayType = {\n    kind: 'array',\n    itemType: Type,\n    N: ?number\n}\n\nexport type NativeType = 'number' | 'string' | 'boolean' | 'null' | 'array' | 'object'\n\nexport const NullType = {kind: 'null'};\nexport const NumberType = {kind: 'number'};\nexport const StringType = {kind: 'string'};\nexport const BooleanType = {kind: 'boolean'};\nexport const ColorType = {kind: 'color'};\nexport const ObjectType = {kind: 'object'};\nexport const ValueType = {kind: 'value'};\nexport const ErrorType = {kind: 'error'};\nexport const CollatorType = {kind: 'collator'};\nexport const FormattedType = {kind: 'formatted'};\nexport const ResolvedImageType = {kind: 'resolvedImage'};\n\nexport function array(itemType: Type, N: ?number): ArrayType {\n    return {\n        kind: 'array',\n        itemType,\n        N\n    };\n}\n\nexport function toString(type: Type): string {\n    if (type.kind === 'array') {\n        const itemType = toString(type.itemType);\n        return typeof type.N === 'number' ?\n            `array<${itemType}, ${type.N}>` :\n            type.itemType.kind === 'value' ? 'array' : `array<${itemType}>`;\n    } else {\n        return type.kind;\n    }\n}\n\nconst valueMemberTypes = [\n    NullType,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    FormattedType,\n    ObjectType,\n    array(ValueType),\n    ResolvedImageType\n];\n\n/**\n * Returns null if `t` is a subtype of `expected`; otherwise returns an\n * error message.\n * @private\n */\nexport function checkSubtype(expected: Type, t: Type): ?string {\n    if (t.kind === 'error') {\n        // Error is a subtype of every type\n        return null;\n    } else if (expected.kind === 'array') {\n        if (t.kind === 'array' &&\n            ((t.N === 0 && t.itemType.kind === 'value') || !checkSubtype(expected.itemType, t.itemType)) &&\n            (typeof expected.N !== 'number' || expected.N === t.N)) {\n            return null;\n        }\n    } else if (expected.kind === t.kind) {\n        return null;\n    } else if (expected.kind === 'value') {\n        for (const memberType of valueMemberTypes) {\n            if (!checkSubtype(memberType, t)) {\n                return null;\n            }\n        }\n    }\n\n    return `Expected ${toString(expected)} but found ${toString(t)} instead.`;\n}\n\nexport function isValidType(provided: Type, allowedTypes: Array<Type>): boolean {\n    return allowedTypes.some(t => t.kind === provided.kind);\n}\n\nexport function isValidNativeType(provided: any, allowedTypes: Array<NativeType>): boolean {\n    return allowedTypes.some(t => {\n        if (t === 'null') {\n            return provided === null;\n        } else if (t === 'array') {\n            return Array.isArray(provided);\n        } else if (t === 'object') {\n            return provided && !Array.isArray(provided) && typeof provided === 'object';\n        } else {\n            return t === typeof provided;\n        }\n    });\n}\n", "// (c) Dean McNamee <dean@gmail.com>, 2012.\n//\n// https://github.com/deanm/css-color-parser-js\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n// FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n// IN THE SOFTWARE.\n\n// http://www.w3.org/TR/css3-color/\nvar kCSSColorTable = {\n  \"transparent\": [0,0,0,0], \"aliceblue\": [240,248,255,1],\n  \"antiquewhite\": [250,235,215,1], \"aqua\": [0,255,255,1],\n  \"aquamarine\": [127,255,212,1], \"azure\": [240,255,255,1],\n  \"beige\": [245,245,220,1], \"bisque\": [255,228,196,1],\n  \"black\": [0,0,0,1], \"blanchedalmond\": [255,235,205,1],\n  \"blue\": [0,0,255,1], \"blueviolet\": [138,43,226,1],\n  \"brown\": [165,42,42,1], \"burlywood\": [222,184,135,1],\n  \"cadetblue\": [95,158,160,1], \"chartreuse\": [127,255,0,1],\n  \"chocolate\": [210,105,30,1], \"coral\": [255,127,80,1],\n  \"cornflowerblue\": [100,149,237,1], \"cornsilk\": [255,248,220,1],\n  \"crimson\": [220,20,60,1], \"cyan\": [0,255,255,1],\n  \"darkblue\": [0,0,139,1], \"darkcyan\": [0,139,139,1],\n  \"darkgoldenrod\": [184,134,11,1], \"darkgray\": [169,169,169,1],\n  \"darkgreen\": [0,100,0,1], \"darkgrey\": [169,169,169,1],\n  \"darkkhaki\": [189,183,107,1], \"darkmagenta\": [139,0,139,1],\n  \"darkolivegreen\": [85,107,47,1], \"darkorange\": [255,140,0,1],\n  \"darkorchid\": [153,50,204,1], \"darkred\": [139,0,0,1],\n  \"darksalmon\": [233,150,122,1], \"darkseagreen\": [143,188,143,1],\n  \"darkslateblue\": [72,61,139,1], \"darkslategray\": [47,79,79,1],\n  \"darkslategrey\": [47,79,79,1], \"darkturquoise\": [0,206,209,1],\n  \"darkviolet\": [148,0,211,1], \"deeppink\": [255,20,147,1],\n  \"deepskyblue\": [0,191,255,1], \"dimgray\": [105,105,105,1],\n  \"dimgrey\": [105,105,105,1], \"dodgerblue\": [30,144,255,1],\n  \"firebrick\": [178,34,34,1], \"floralwhite\": [255,250,240,1],\n  \"forestgreen\": [34,139,34,1], \"fuchsia\": [255,0,255,1],\n  \"gainsboro\": [220,220,220,1], \"ghostwhite\": [248,248,255,1],\n  \"gold\": [255,215,0,1], \"goldenrod\": [218,165,32,1],\n  \"gray\": [128,128,128,1], \"green\": [0,128,0,1],\n  \"greenyellow\": [173,255,47,1], \"grey\": [128,128,128,1],\n  \"honeydew\": [240,255,240,1], \"hotpink\": [255,105,180,1],\n  \"indianred\": [205,92,92,1], \"indigo\": [75,0,130,1],\n  \"ivory\": [255,255,240,1], \"khaki\": [240,230,140,1],\n  \"lavender\": [230,230,250,1], \"lavenderblush\": [255,240,245,1],\n  \"lawngreen\": [124,252,0,1], \"lemonchiffon\": [255,250,205,1],\n  \"lightblue\": [173,216,230,1], \"lightcoral\": [240,128,128,1],\n  \"lightcyan\": [224,255,255,1], \"lightgoldenrodyellow\": [250,250,210,1],\n  \"lightgray\": [211,211,211,1], \"lightgreen\": [144,238,144,1],\n  \"lightgrey\": [211,211,211,1], \"lightpink\": [255,182,193,1],\n  \"lightsalmon\": [255,160,122,1], \"lightseagreen\": [32,178,170,1],\n  \"lightskyblue\": [135,206,250,1], \"lightslategray\": [119,136,153,1],\n  \"lightslategrey\": [119,136,153,1], \"lightsteelblue\": [176,196,222,1],\n  \"lightyellow\": [255,255,224,1], \"lime\": [0,255,0,1],\n  \"limegreen\": [50,205,50,1], \"linen\": [250,240,230,1],\n  \"magenta\": [255,0,255,1], \"maroon\": [128,0,0,1],\n  \"mediumaquamarine\": [102,205,170,1], \"mediumblue\": [0,0,205,1],\n  \"mediumorchid\": [186,85,211,1], \"mediumpurple\": [147,112,219,1],\n  \"mediumseagreen\": [60,179,113,1], \"mediumslateblue\": [123,104,238,1],\n  \"mediumspringgreen\": [0,250,154,1], \"mediumturquoise\": [72,209,204,1],\n  \"mediumvioletred\": [199,21,133,1], \"midnightblue\": [25,25,112,1],\n  \"mintcream\": [245,255,250,1], \"mistyrose\": [255,228,225,1],\n  \"moccasin\": [255,228,181,1], \"navajowhite\": [255,222,173,1],\n  \"navy\": [0,0,128,1], \"oldlace\": [253,245,230,1],\n  \"olive\": [128,128,0,1], \"olivedrab\": [107,142,35,1],\n  \"orange\": [255,165,0,1], \"orangered\": [255,69,0,1],\n  \"orchid\": [218,112,214,1], \"palegoldenrod\": [238,232,170,1],\n  \"palegreen\": [152,251,152,1], \"paleturquoise\": [175,238,238,1],\n  \"palevioletred\": [219,112,147,1], \"papayawhip\": [255,239,213,1],\n  \"peachpuff\": [255,218,185,1], \"peru\": [205,133,63,1],\n  \"pink\": [255,192,203,1], \"plum\": [221,160,221,1],\n  \"powderblue\": [176,224,230,1], \"purple\": [128,0,128,1],\n  \"rebeccapurple\": [102,51,153,1],\n  \"red\": [255,0,0,1], \"rosybrown\": [188,143,143,1],\n  \"royalblue\": [65,105,225,1], \"saddlebrown\": [139,69,19,1],\n  \"salmon\": [250,128,114,1], \"sandybrown\": [244,164,96,1],\n  \"seagreen\": [46,139,87,1], \"seashell\": [255,245,238,1],\n  \"sienna\": [160,82,45,1], \"silver\": [192,192,192,1],\n  \"skyblue\": [135,206,235,1], \"slateblue\": [106,90,205,1],\n  \"slategray\": [112,128,144,1], \"slategrey\": [112,128,144,1],\n  \"snow\": [255,250,250,1], \"springgreen\": [0,255,127,1],\n  \"steelblue\": [70,130,180,1], \"tan\": [210,180,140,1],\n  \"teal\": [0,128,128,1], \"thistle\": [216,191,216,1],\n  \"tomato\": [255,99,71,1], \"turquoise\": [64,224,208,1],\n  \"violet\": [238,130,238,1], \"wheat\": [245,222,179,1],\n  \"white\": [255,255,255,1], \"whitesmoke\": [245,245,245,1],\n  \"yellow\": [255,255,0,1], \"yellowgreen\": [154,205,50,1]}\n\nfunction clamp_css_byte(i) {  // Clamp to integer 0 .. 255.\n  i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n  return i < 0 ? 0 : i > 255 ? 255 : i;\n}\n\nfunction clamp_css_float(f) {  // Clamp to float 0.0 .. 1.0.\n  return f < 0 ? 0 : f > 1 ? 1 : f;\n}\n\nfunction parse_css_int(str) {  // int or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_byte(parseFloat(str) / 100 * 255);\n  return clamp_css_byte(parseInt(str));\n}\n\nfunction parse_css_float(str) {  // float or percentage.\n  if (str[str.length - 1] === '%')\n    return clamp_css_float(parseFloat(str) / 100);\n  return clamp_css_float(parseFloat(str));\n}\n\nfunction css_hue_to_rgb(m1, m2, h) {\n  if (h < 0) h += 1;\n  else if (h > 1) h -= 1;\n\n  if (h * 6 < 1) return m1 + (m2 - m1) * h * 6;\n  if (h * 2 < 1) return m2;\n  if (h * 3 < 2) return m1 + (m2 - m1) * (2/3 - h) * 6;\n  return m1;\n}\n\nfunction parseCSSColor(css_str) {\n  // Remove all whitespace, not compliant, but should just be more accepting.\n  var str = css_str.replace(/ /g, '').toLowerCase();\n\n  // Color keywords (and transparent) lookup.\n  if (str in kCSSColorTable) return kCSSColorTable[str].slice();  // dup.\n\n  // #abc and #abc123 syntax.\n  if (str[0] === '#') {\n    if (str.length === 4) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xfff)) return null;  // Covers NaN.\n      return [((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n              (iv & 0xf0) | ((iv & 0xf0) >> 4),\n              (iv & 0xf) | ((iv & 0xf) << 4),\n              1];\n    } else if (str.length === 7) {\n      var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n      if (!(iv >= 0 && iv <= 0xffffff)) return null;  // Covers NaN.\n      return [(iv & 0xff0000) >> 16,\n              (iv & 0xff00) >> 8,\n              iv & 0xff,\n              1];\n    }\n\n    return null;\n  }\n\n  var op = str.indexOf('('), ep = str.indexOf(')');\n  if (op !== -1 && ep + 1 === str.length) {\n    var fname = str.substr(0, op);\n    var params = str.substr(op+1, ep-(op+1)).split(',');\n    var alpha = 1;  // To allow case fallthrough.\n    switch (fname) {\n      case 'rgba':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'rgb':\n        if (params.length !== 3) return null;\n        return [parse_css_int(params[0]),\n                parse_css_int(params[1]),\n                parse_css_int(params[2]),\n                alpha];\n      case 'hsla':\n        if (params.length !== 4) return null;\n        alpha = parse_css_float(params.pop());\n        // Fall through.\n      case 'hsl':\n        if (params.length !== 3) return null;\n        var h = (((parseFloat(params[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parse_css_float(params[1]);\n        var l = parse_css_float(params[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n        return [clamp_css_byte(css_hue_to_rgb(m1, m2, h+1/3) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h) * 255),\n                clamp_css_byte(css_hue_to_rgb(m1, m2, h-1/3) * 255),\n                alpha];\n      default:\n        return null;\n    }\n  }\n\n  return null;\n}\n\ntry { exports.parseCSSColor = parseCSSColor } catch(e) { }\n", "// @flow\n\nimport {parseCSSColor} from 'csscolorparser';\n\n/**\n * An RGBA color value. Create instances from color strings using the static\n * method `Color.parse`. The constructor accepts RGB channel values in the range\n * `[0, 1]`, premultiplied by A.\n *\n * @param {number} r The red channel.\n * @param {number} g The green channel.\n * @param {number} b The blue channel.\n * @param {number} a The alpha channel.\n * @private\n */\nclass Color {\n    r: number;\n    g: number;\n    b: number;\n    a: number;\n\n    constructor(r: number, g: number, b: number, a: number = 1) {\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n\n    static black: Color;\n    static white: Color;\n    static transparent: Color;\n    static red: Color;\n    static blue: Color;\n\n    /**\n     * Parses valid CSS color strings and returns a `Color` instance.\n     * @returns A `Color` instance, or `undefined` if the input is not a valid color string.\n     */\n    static parse(input?: string | Color | null): Color | void {\n        if (!input) {\n            return undefined;\n        }\n\n        if (input instanceof Color) {\n            return input;\n        }\n\n        if (typeof input !== 'string') {\n            return undefined;\n        }\n\n        const rgba = parseCSSColor(input);\n        if (!rgba) {\n            return undefined;\n        }\n\n        return new Color(\n            rgba[0] / 255 * rgba[3],\n            rgba[1] / 255 * rgba[3],\n            rgba[2] / 255 * rgba[3],\n            rgba[3]\n        );\n    }\n\n    /**\n     * Returns an RGBA string representing the color value.\n     *\n     * @returns An RGBA string.\n     * @example\n     * var purple = new Color.parse('purple');\n     * purple.toString; // = \"rgba(128,0,128,1)\"\n     * var translucentGreen = new Color.parse('rgba(26, 207, 26, .73)');\n     * translucentGreen.toString(); // = \"rgba(26,207,26,0.73)\"\n     */\n    toString(): string {\n        const [r, g, b, a] = this.toArray();\n        return `rgba(${Math.round(r)},${Math.round(g)},${Math.round(b)},${a})`;\n    }\n\n    /**\n     * Returns an RGBA array of values representing the color, unpremultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 255].\n     */\n    toArray(): [number, number, number, number] {\n        const {r, g, b, a} = this;\n        return a === 0 ? [0, 0, 0, 0] : [\n            r * 255 / a,\n            g * 255 / a,\n            b * 255 / a,\n            a\n        ];\n    }\n\n    /**\n     * Returns a RGBA array of float values representing the color, unpremultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01(): [number, number, number, number] {\n        const {r, g, b, a} = this;\n        return a === 0 ? [0, 0, 0, 0] : [\n            r / a,\n            g / a,\n            b / a,\n            a\n        ];\n    }\n\n    /**\n     * Returns an RGBA array of values representing the color, premultiplied by A.\n     *\n     * @returns An array of RGBA color values in the range [0, 1].\n     */\n    toArray01PremultipliedAlpha(): [number, number, number, number] {\n        const {r, g, b, a} = this;\n        return [\n            r,\n            g,\n            b,\n            a\n        ];\n    }\n}\n\nColor.black = new Color(0, 0, 0, 1);\nColor.white = new Color(1, 1, 1, 1);\nColor.transparent = new Color(0, 0, 0, 0);\nColor.red = new Color(1, 0, 0, 1);\nColor.blue = new Color(0, 0, 1, 1);\n\nexport default Color;\n", "// @flow\n\n// Flow type declarations for Intl cribbed from\n// https://github.com/facebook/flow/issues/1270\n\ndeclare var Intl: {\n    Collator: Class<Intl$Collator>\n};\n\ndeclare class Intl$Collator {\n    constructor (\n        locales?: string | string[],\n        options?: CollatorOptions\n    ): Intl$Collator;\n\n    static (\n        locales?: string | string[],\n        options?: CollatorOptions\n    ): Intl$Collator;\n\n    compare (a: string, b: string): number;\n\n    resolvedOptions(): any;\n}\n\ntype CollatorOptions = {\n    localeMatcher?: 'lookup' | 'best fit',\n    usage?: 'sort' | 'search',\n    sensitivity?: 'base' | 'accent' | 'case' | 'variant',\n    ignorePunctuation?: boolean,\n    numeric?: boolean,\n    caseFirst?: 'upper' | 'lower' | 'false'\n}\n\nexport default class Collator {\n    locale: string | null;\n    sensitivity: 'base' | 'accent' | 'case' | 'variant';\n    collator: Intl$Collator;\n\n    constructor(caseSensitive: boolean, diacriticSensitive: boolean, locale: string | null) {\n        if (caseSensitive)\n            this.sensitivity = diacriticSensitive ? 'variant' : 'case';\n        else\n            this.sensitivity = diacriticSensitive ? 'accent' : 'base';\n\n        this.locale = locale;\n        this.collator = new Intl.Collator(this.locale ? this.locale : [],\n            {sensitivity: this.sensitivity, usage: 'search'});\n    }\n\n    compare(lhs: string, rhs: string): number {\n        return this.collator.compare(lhs, rhs);\n    }\n\n    resolvedLocale(): string {\n        // We create a Collator without \"usage: search\" because we don't want\n        // the search options encoded in our result (e.g. \"en-u-co-search\")\n        return new Intl.Collator(this.locale ? this.locale : [])\n            .resolvedOptions().locale;\n    }\n}\n", "// @flow\nimport type Color from '../../util/color.js';\nimport type ResolvedImage from '../types/resolved_image.js';\n\nexport class FormattedSection {\n    text: string;\n    image: ResolvedImage | null;\n    scale: number | null;\n    fontStack: string | null;\n    textColor: Color | null;\n\n    constructor(text: string, image: ResolvedImage | null, scale: number | null, fontStack: string | null, textColor: Color | null) {\n        // combine characters so that diacritic marks are not separate code points\n        this.text = text.normalize ? text.normalize() : text;\n        this.image = image;\n        this.scale = scale;\n        this.fontStack = fontStack;\n        this.textColor = textColor;\n    }\n}\n\nexport default class Formatted {\n    sections: Array<FormattedSection>;\n\n    constructor(sections: Array<FormattedSection>) {\n        this.sections = sections;\n    }\n\n    static fromString(unformatted: string): Formatted {\n        return new Formatted([new FormattedSection(unformatted, null, null, null, null)]);\n    }\n\n    isEmpty(): boolean {\n        if (this.sections.length === 0) return true;\n        return !this.sections.some(section => section.text.length !== 0 ||\n                                             (section.image && section.image.name.length !== 0));\n    }\n\n    static factory(text: Formatted | string): Formatted {\n        if (text instanceof Formatted) {\n            return text;\n        } else {\n            return Formatted.fromString(text);\n        }\n    }\n\n    toString(): string {\n        if (this.sections.length === 0) return '';\n        return this.sections.map(section => section.text).join('');\n    }\n\n    serialize(): Array<mixed> {\n        const serialized: Array<mixed> = [\"format\"];\n        for (const section of this.sections) {\n            if (section.image) {\n                serialized.push([\"image\", section.image.name]);\n                continue;\n            }\n            serialized.push(section.text);\n            const options: { [key: string]: mixed } = {};\n            if (section.fontStack) {\n                options[\"text-font\"] = [\"literal\", section.fontStack.split(',')];\n            }\n            if (section.scale) {\n                options[\"font-scale\"] = section.scale;\n            }\n            if (section.textColor) {\n                options[\"text-color\"] = ([\"rgba\"]: Array<mixed>).concat(section.textColor.toArray());\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n", "// @flow\n\nexport type ResolvedImageOptions = {\n    name: string,\n    available: boolean\n};\n\nexport default class ResolvedImage {\n    name: string;\n    available: boolean;\n\n    constructor(options: ResolvedImageOptions) {\n        this.name = options.name;\n        this.available = options.available;\n    }\n\n    toString(): string {\n        return this.name;\n    }\n\n    static fromString(name: string): ResolvedImage | null {\n        if (!name) return null; // treat empty values as no image\n        return new ResolvedImage({name, available: false});\n    }\n\n    serialize(): Array<string> {\n        return [\"image\", this.name];\n    }\n}\n", "// @flow\n\nimport assert from 'assert';\n\nimport Color from '../util/color.js';\nimport Collator from './types/collator.js';\nimport Formatted from './types/formatted.js';\nimport ResolvedImage from './types/resolved_image.js';\nimport {NullType, NumberType, StringType, BooleanType, ColorType, ObjectType, ValueType, CollatorType, FormattedType, ResolvedImageType, array} from './types.js';\n\nimport type {Type} from './types.js';\n\nexport function validateRGBA(r: mixed, g: mixed, b: mixed, a?: mixed): string | null {\n    if (!(\n        typeof r === 'number' && r >= 0 && r <= 255 &&\n        typeof g === 'number' && g >= 0 && g <= 255 &&\n        typeof b === 'number' && b >= 0 && b <= 255\n    )) {\n        const value = typeof a === 'number' ? [r, g, b, a] : [r, g, b];\n        return `Invalid rgba value [${value.join(', ')}]: 'r', 'g', and 'b' must be between 0 and 255.`;\n    }\n\n    if (!(\n        typeof a === 'undefined' || (typeof a === 'number' && a >= 0 && a <= 1)\n    )) {\n        return `Invalid rgba value [${[r, g, b, a].join(', ')}]: 'a' must be between 0 and 1.`;\n    }\n\n    return null;\n}\n\nexport type Value = null | string | boolean | number | Color | Collator | Formatted | ResolvedImage | $ReadOnlyArray<Value> | { +[string]: Value }\n\nexport function isValue(mixed: mixed): boolean {\n    if (mixed === null) {\n        return true;\n    } else if (typeof mixed === 'string') {\n        return true;\n    } else if (typeof mixed === 'boolean') {\n        return true;\n    } else if (typeof mixed === 'number') {\n        return true;\n    } else if (mixed instanceof Color) {\n        return true;\n    } else if (mixed instanceof Collator) {\n        return true;\n    } else if (mixed instanceof Formatted) {\n        return true;\n    } else if (mixed instanceof ResolvedImage) {\n        return true;\n    } else if (Array.isArray(mixed)) {\n        for (const item of mixed) {\n            if (!isValue(item)) {\n                return false;\n            }\n        }\n        return true;\n    } else if (typeof mixed === 'object') {\n        for (const key in mixed) {\n            if (!isValue(mixed[key])) {\n                return false;\n            }\n        }\n        return true;\n    } else {\n        return false;\n    }\n}\n\nexport function typeOf(value: Value): Type {\n    if (value === null) {\n        return NullType;\n    } else if (typeof value === 'string') {\n        return StringType;\n    } else if (typeof value === 'boolean') {\n        return BooleanType;\n    } else if (typeof value === 'number') {\n        return NumberType;\n    } else if (value instanceof Color) {\n        return ColorType;\n    } else if (value instanceof Collator) {\n        return CollatorType;\n    } else if (value instanceof Formatted) {\n        return FormattedType;\n    } else if (value instanceof ResolvedImage) {\n        return ResolvedImageType;\n    } else if (Array.isArray(value)) {\n        const length = value.length;\n        let itemType: Type | typeof undefined;\n\n        for (const item of value) {\n            const t = typeOf(item);\n            if (!itemType) {\n                itemType = t;\n            } else if (itemType === t) {\n                continue;\n            } else {\n                itemType = ValueType;\n                break;\n            }\n        }\n\n        return array(itemType || ValueType, length);\n    } else {\n        assert(typeof value === 'object');\n        return ObjectType;\n    }\n}\n\nexport function toString(value: Value): string {\n    const type = typeof value;\n    if (value === null) {\n        return '';\n    } else if (type === 'string' || type === 'number' || type === 'boolean') {\n        return String(value);\n    } else if (value instanceof Color || value instanceof Formatted || value instanceof ResolvedImage) {\n        return value.toString();\n    } else {\n        return JSON.stringify(value);\n    }\n}\n\nexport {Color, Collator};\n", "// @flow\n\nimport assert from 'assert';\nimport {isValue, typeOf, Color} from '../values.js';\nimport Formatted from '../types/formatted.js';\n\nimport type {Type} from '../types.js';\nimport type {Value}  from '../values.js';\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\n\nclass Literal implements Expression {\n    type: Type;\n    value: Value;\n\n    constructor(type: Type, value: Value) {\n        this.type = type;\n        this.value = value;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): void | Literal {\n        if (args.length !== 2)\n            return context.error(`'literal' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n\n        if (!isValue(args[1]))\n            return context.error(`invalid value`);\n\n        const value = (args[1]: any);\n        let type = typeOf(value);\n\n        // special case: infer the item type if possible for zero-length arrays\n        const expected = context.expectedType;\n        if (\n            type.kind === 'array' &&\n            type.N === 0 &&\n            expected &&\n            expected.kind === 'array' &&\n            (typeof expected.N !== 'number' || expected.N === 0)\n        ) {\n            type = expected;\n        }\n\n        return new Literal(type, value);\n    }\n\n    evaluate(): Value {\n        return this.value;\n    }\n\n    eachChild() {}\n\n    outputDefined(): boolean {\n        return true;\n    }\n\n    serialize(): SerializedExpression {\n        if (this.type.kind === 'array' || this.type.kind === 'object') {\n            return [\"literal\", this.value];\n        } else if (this.value instanceof Color) {\n            // Constant-folding can generate Literal expressions that you\n            // couldn't actually generate with a \"literal\" expression,\n            // so we have to implement an equivalent serialization here\n            return [\"rgba\"].concat(this.value.toArray());\n        } else if (this.value instanceof Formatted) {\n            // Same as Color\n            return this.value.serialize();\n        } else {\n            assert(this.value === null ||\n                typeof this.value === 'string' ||\n                typeof this.value === 'number' ||\n                typeof this.value === 'boolean');\n            return (this.value: any);\n        }\n    }\n}\n\nexport default Literal;\n", "// @flow\n\nclass RuntimeError {\n    name: string;\n    message: string;\n\n    constructor(message: string) {\n        this.name = 'ExpressionEvaluationError';\n        this.message = message;\n    }\n\n    toJSON(): string {\n        return this.message;\n    }\n}\n\nexport default RuntimeError;\n", "// @flow\n\nimport assert from 'assert';\n\nimport {\n    ObjectType,\n    ValueType,\n    StringType,\n    NumberType,\n    BooleanType,\n    checkSubtype,\n    toString,\n    array\n} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nconst types = {\n    string: StringType,\n    number: NumberType,\n    boolean: BooleanType,\n    object: ObjectType\n};\n\nclass Assertion implements Expression {\n    type: Type;\n    args: Array<Expression>;\n\n    constructor(type: Type, args: Array<Expression>) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n\n        let i = 1;\n        let type;\n\n        const name: string = (args[0]: any);\n        if (name === 'array') {\n            let itemType;\n            if (args.length > 2) {\n                const type = args[1];\n                if (typeof type !== 'string' || !(type in types) || type === 'object')\n                    return context.error('The item type argument of \"array\" must be one of string, number, boolean', 1);\n                itemType = types[type];\n                i++;\n            } else {\n                itemType = ValueType;\n            }\n\n            let N;\n            if (args.length > 3) {\n                if (args[2] !== null &&\n                    (typeof args[2] !== 'number' ||\n                        args[2] < 0 ||\n                        args[2] !== Math.floor(args[2]))\n                ) {\n                    return context.error('The length argument to \"array\" must be a positive integer literal', 2);\n                }\n                N = args[2];\n                i++;\n            }\n\n            type = array(itemType, N);\n        } else {\n            assert(types[name], name);\n            type = types[name];\n        }\n\n        const parsed = [];\n        for (; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input) return null;\n            parsed.push(input);\n        }\n\n        return new Assertion(type, parsed);\n    }\n\n    evaluate(ctx: EvaluationContext): any | null {\n        for (let i = 0; i < this.args.length; i++) {\n            const value = this.args[i].evaluate(ctx);\n            const error = checkSubtype(this.type, typeOf(value));\n            if (!error) {\n                return value;\n            } else if (i === this.args.length - 1) {\n                throw new RuntimeError(`Expected value to be of type ${toString(this.type)}, but found ${toString(typeOf(value))} instead.`);\n            }\n        }\n\n        assert(false);\n        return null;\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined(): boolean {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize(): SerializedExpression {\n        const type = this.type;\n        const serialized = [type.kind];\n        if (type.kind === 'array') {\n            const itemType = type.itemType;\n            if (itemType.kind === 'string' ||\n                itemType.kind === 'number' ||\n                itemType.kind === 'boolean') {\n                serialized.push(itemType.kind);\n                const N = type.N;\n                if (typeof N === 'number' || this.args.length > 1) {\n                    serialized.push(N);\n                }\n            }\n        }\n        return serialized.concat(this.args.map(arg => arg.serialize()));\n    }\n}\n\nexport default Assertion;\n", "// @flow\n\nimport {NumberType, ValueType, FormattedType, array, StringType, ColorType, ResolvedImageType} from '../types.js';\nimport Formatted, {FormattedSection} from '../types/formatted.js';\nimport {toString, typeOf} from '../values.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type {Type} from '../types.js';\n\ntype FormattedSectionExpression = {\n    // Content of a section may be Image expression or other\n    // type of expression that is coercable to 'string'.\n    content: Expression,\n    scale: Expression | null;\n    font: Expression | null;\n    textColor: Expression | null;\n}\n\nexport default class FormatExpression implements Expression {\n    type: Type;\n    sections: Array<FormattedSectionExpression>;\n\n    constructor(sections: Array<FormattedSectionExpression>) {\n        this.type = FormattedType;\n        this.sections = sections;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        if (args.length < 2) {\n            return context.error(`Expected at least one argument.`);\n        }\n\n        const firstArg = args[1];\n        if (!Array.isArray(firstArg) && typeof firstArg === 'object')  {\n            return context.error(`First argument must be an image or text section.`);\n        }\n\n        const sections: Array<FormattedSectionExpression> = [];\n        let nextTokenMayBeObject = false;\n        for (let i = 1; i <= args.length - 1; ++i) {\n            const arg = (args[i]: any);\n\n            if (nextTokenMayBeObject && typeof arg === \"object\" && !Array.isArray(arg)) {\n                nextTokenMayBeObject = false;\n\n                let scale = null;\n                if (arg['font-scale']) {\n                    scale = context.parse(arg['font-scale'], 1, NumberType);\n                    if (!scale) return null;\n                }\n\n                let font = null;\n                if (arg['text-font']) {\n                    font = context.parse(arg['text-font'], 1, array(StringType));\n                    if (!font) return null;\n                }\n\n                let textColor = null;\n                if (arg['text-color']) {\n                    textColor = context.parse(arg['text-color'], 1, ColorType);\n                    if (!textColor) return null;\n                }\n\n                const lastExpression = sections[sections.length - 1];\n                lastExpression.scale = scale;\n                lastExpression.font = font;\n                lastExpression.textColor = textColor;\n            } else {\n                const content = context.parse(args[i], 1, ValueType);\n                if (!content) return null;\n\n                const kind = content.type.kind;\n                if (kind !== 'string' && kind !== 'value' && kind !== 'null' && kind !== 'resolvedImage')\n                    return context.error(`Formatted text type must be 'string', 'value', 'image' or 'null'.`);\n\n                nextTokenMayBeObject = true;\n                sections.push({content, scale: null, font: null, textColor: null});\n            }\n        }\n\n        return new FormatExpression(sections);\n    }\n\n    evaluate(ctx: EvaluationContext): Formatted {\n        const evaluateSection = section => {\n            const evaluatedContent = section.content.evaluate(ctx);\n            if (typeOf(evaluatedContent) === ResolvedImageType) {\n                return new FormattedSection('', evaluatedContent, null, null, null);\n            }\n\n            return new FormattedSection(\n                    toString(evaluatedContent),\n                    null,\n                    section.scale ? section.scale.evaluate(ctx) : null,\n                    section.font ? section.font.evaluate(ctx).join(',') : null,\n                    section.textColor ? section.textColor.evaluate(ctx) : null\n            );\n        };\n\n        return new Formatted(this.sections.map(evaluateSection));\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        for (const section of this.sections) {\n            fn(section.content);\n            if (section.scale) {\n                fn(section.scale);\n            }\n            if (section.font) {\n                fn(section.font);\n            }\n            if (section.textColor) {\n                fn(section.textColor);\n            }\n        }\n    }\n\n    outputDefined(): boolean {\n        // Technically the combinatoric set of all children\n        // Usually, this.text will be undefined anyway\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        const serialized = [\"format\"];\n        for (const section of this.sections) {\n            serialized.push(section.content.serialize());\n            const options = {};\n            if (section.scale) {\n                options['font-scale'] = section.scale.serialize();\n            }\n            if (section.font) {\n                options['text-font'] = section.font.serialize();\n            }\n            if (section.textColor) {\n                options['text-color'] = section.textColor.serialize();\n            }\n            serialized.push(options);\n        }\n        return serialized;\n    }\n}\n", "// @flow\n\nimport {ResolvedImageType, StringType} from '../types.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type {Type} from '../types.js';\n\nexport default class ImageExpression implements Expression {\n    type: Type;\n    input: Expression;\n\n    constructor(input: Expression) {\n        this.type = ResolvedImageType;\n        this.input = input;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        if (args.length !== 2) {\n            return context.error(`Expected two arguments.`);\n        }\n\n        const name = context.parse(args[1], 1, StringType);\n        if (!name) return context.error(`No image name provided.`);\n\n        return new ImageExpression(name);\n    }\n\n    evaluate(ctx: EvaluationContext): null | ResolvedImage {\n        const evaluatedImageName = this.input.evaluate(ctx);\n\n        const value = ResolvedImage.fromString(evaluatedImageName);\n        if (value && ctx.availableImages) value.available = ctx.availableImages.indexOf(evaluatedImageName) > -1;\n\n        return value;\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n    }\n\n    outputDefined(): boolean {\n        // The output of image is determined by the list of available images in the evaluation context\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        return [\"image\", this.input.serialize()];\n    }\n}\n", "// @flow\n\nimport assert from 'assert';\n\nimport {BooleanType, ColorType, NumberType, StringType, ValueType} from '../types.js';\nimport {Color, toString as valueToString, validateRGBA} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\nimport Formatted from '../types/formatted.js';\nimport FormatExpression from '../definitions/format.js';\nimport ImageExpression from '../definitions/image.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nconst types = {\n    'to-boolean': BooleanType,\n    'to-color': ColorType,\n    'to-number': NumberType,\n    'to-string': StringType\n};\n\n/**\n * Special form for error-coalescing coercion expressions \"to-number\",\n * \"to-color\".  Since these coercions can fail at runtime, they accept multiple\n * arguments, only evaluating one at a time until one succeeds.\n *\n * @private\n */\nclass Coercion implements Expression {\n    type: Type;\n    args: Array<Expression>;\n\n    constructor(type: Type, args: Array<Expression>) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        if (args.length < 2)\n            return context.error(`Expected at least one argument.`);\n\n        const name: string = (args[0]: any);\n        assert(types[name], name);\n\n        if ((name === 'to-boolean' || name === 'to-string') && args.length !== 2)\n            return context.error(`Expected one argument.`);\n\n        const type = types[name];\n\n        const parsed = [];\n        for (let i = 1; i < args.length; i++) {\n            const input = context.parse(args[i], i, ValueType);\n            if (!input) return null;\n            parsed.push(input);\n        }\n\n        return new Coercion(type, parsed);\n    }\n\n    evaluate(ctx: EvaluationContext): null | boolean | number | string | Color | Formatted | ResolvedImage {\n        if (this.type.kind === 'boolean') {\n            return Boolean(this.args[0].evaluate(ctx));\n        } else if (this.type.kind === 'color') {\n            let input;\n            let error;\n            for (const arg of this.args) {\n                input = arg.evaluate(ctx);\n                error = null;\n                if (input instanceof Color) {\n                    return input;\n                } else if (typeof input === 'string') {\n                    const c = ctx.parseColor(input);\n                    if (c) return c;\n                } else if (Array.isArray(input)) {\n                    if (input.length < 3 || input.length > 4) {\n                        error = `Invalid rbga value ${JSON.stringify(input)}: expected an array containing either three or four numeric values.`;\n                    } else {\n                        error = validateRGBA(input[0], input[1], input[2], input[3]);\n                    }\n                    if (!error) {\n                        return new Color((input[0]: any) / 255, (input[1]: any) / 255, (input[2]: any) / 255, (input[3]: any));\n                    }\n                }\n            }\n            throw new RuntimeError(error || `Could not parse color from value '${typeof input === 'string' ? input : String(JSON.stringify(input))}'`);\n        } else if (this.type.kind === 'number') {\n            let value = null;\n            for (const arg of this.args) {\n                value = arg.evaluate(ctx);\n                if (value === null) return 0;\n                const num = Number(value);\n                if (isNaN(num)) continue;\n                return num;\n            }\n            throw new RuntimeError(`Could not convert ${JSON.stringify(value)} to number.`);\n        } else if (this.type.kind === 'formatted') {\n            // There is no explicit 'to-formatted' but this coercion can be implicitly\n            // created by properties that expect the 'formatted' type.\n            return Formatted.fromString(valueToString(this.args[0].evaluate(ctx)));\n        } else if (this.type.kind === 'resolvedImage') {\n            return ResolvedImage.fromString(valueToString(this.args[0].evaluate(ctx)));\n        } else {\n            return valueToString(this.args[0].evaluate(ctx));\n        }\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined(): boolean {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize(): SerializedExpression {\n        if (this.type.kind === 'formatted') {\n            return new FormatExpression([{content: this.args[0], scale: null, font: null, textColor: null}]).serialize();\n        }\n\n        if (this.type.kind === 'resolvedImage') {\n            return new ImageExpression(this.args[0]).serialize();\n        }\n\n        const serialized = [`to-${this.type.kind}`];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Coercion;\n", "// @flow\n\nimport {Color} from './values.js';\n\nimport type Point from '@mapbox/point-geometry';\nimport type {FormattedSection} from './types/formatted.js';\nimport type {GlobalProperties, Feature, FeatureState} from './index.js';\nimport type {CanonicalTileID} from '../../source/tile_id.js';\nimport type {FeatureDistanceData} from '../feature_filter/index.js';\n\nconst geometryTypes = ['Unknown', 'Point', 'LineString', 'Polygon'];\n\nclass EvaluationContext {\n    globals: GlobalProperties;\n    feature: ?Feature;\n    featureState: ?FeatureState;\n    formattedSection: ?FormattedSection;\n    availableImages: ?Array<string>;\n    canonical: null | CanonicalTileID;\n    featureTileCoord: ?Point;\n    featureDistanceData: ?FeatureDistanceData;\n\n    _parseColorCache: {[_: string]: ?Color};\n\n    constructor() {\n        this.globals = (null: any);\n        this.feature = null;\n        this.featureState = null;\n        this.formattedSection = null;\n        this._parseColorCache = {};\n        this.availableImages = null;\n        this.canonical = null;\n        this.featureTileCoord = null;\n        this.featureDistanceData = null;\n    }\n\n    id(): number | null {\n        return this.feature && this.feature.id !== undefined ? this.feature.id : null;\n    }\n\n    geometryType(): null | string {\n        return this.feature ? typeof this.feature.type === 'number' ? geometryTypes[this.feature.type] : this.feature.type : null;\n    }\n\n    geometry(): ?Array<Array<Point>> {\n        return this.feature && 'geometry' in this.feature ? this.feature.geometry : null;\n    }\n\n    canonicalID(): null | CanonicalTileID {\n        return this.canonical;\n    }\n\n    properties(): {[string]: any} {\n        return (this.feature && this.feature.properties) || {};\n    }\n\n    distanceFromCenter(): number {\n        if (this.featureTileCoord && this.featureDistanceData) {\n\n            const c = this.featureDistanceData.center;\n            const scale = this.featureDistanceData.scale;\n            const {x, y} = this.featureTileCoord;\n\n            // Calculate the distance vector `d` (left handed)\n            const dX = x * scale - c[0];\n            const dY = y * scale - c[1];\n\n            // The bearing vector `b` (left handed)\n            const bX = this.featureDistanceData.bearing[0];\n            const bY = this.featureDistanceData.bearing[1];\n\n            // Distance is calculated as `dot(d, v)`\n            const dist = (bX * dX + bY * dY);\n            return dist;\n        }\n\n        return 0;\n    }\n\n    parseColor(input: string): ?Color {\n        let cached = this._parseColorCache[input];\n        if (!cached) {\n            cached = this._parseColorCache[input] = Color.parse(input);\n        }\n        return cached;\n    }\n}\n\nexport default EvaluationContext;\n", "// @flow\n\nimport {toString} from './types.js';\n\nimport ParsingContext from './parsing_context.js';\nimport EvaluationContext from './evaluation_context.js';\nimport assert from 'assert';\n\nimport type {Expression, ExpressionRegistry} from './expression.js';\nimport type {Type} from './types.js';\nimport type {Value} from './values.js';\n\nexport type Varargs = {| type: Type |};\ntype Signature = Array<Type> | Varargs;\ntype Evaluate = (EvaluationContext, Array<Expression>) => Value;\ntype Definition = [Type, Signature, Evaluate] |\n    {|type: Type, overloads: Array<[Signature, Evaluate]>|};\n\nclass CompoundExpression implements Expression {\n    name: string;\n    type: Type;\n    _evaluate: Evaluate;\n    args: Array<Expression>;\n\n    static definitions: {[_: string]: Definition };\n\n    constructor(name: string, type: Type, evaluate: Evaluate, args: Array<Expression>) {\n        this.name = name;\n        this.type = type;\n        this._evaluate = evaluate;\n        this.args = args;\n    }\n\n    evaluate(ctx: EvaluationContext): Value {\n        return this._evaluate(ctx, this.args);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): Array<mixed> {\n        return [this.name].concat(this.args.map(arg => arg.serialize()));\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        const op: string = (args[0]: any);\n        const definition = CompoundExpression.definitions[op];\n        if (!definition) {\n            return context.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        }\n\n        // Now check argument types against each signature\n        const type = Array.isArray(definition) ?\n            definition[0] : definition.type;\n\n        const availableOverloads = Array.isArray(definition) ?\n            [[definition[1], definition[2]]] :\n            definition.overloads;\n\n        const overloads = availableOverloads.filter(([signature]) => (\n            !Array.isArray(signature) || // varags\n            signature.length === args.length - 1 // correct param count\n        ));\n\n        let signatureContext: ParsingContext = (null: any);\n\n        for (const [params, evaluate] of overloads) {\n            // Use a fresh context for each attempted signature so that, if\n            // we eventually succeed, we haven't polluted `context.errors`.\n            signatureContext = new ParsingContext(context.registry, context.path, null, context.scope);\n\n            // First parse all the args, potentially coercing to the\n            // types expected by this overload.\n            const parsedArgs: Array<Expression> = [];\n            let argParseFailed = false;\n            for (let i = 1; i < args.length; i++) {\n                const arg = args[i];\n                const expectedType = Array.isArray(params) ?\n                    params[i - 1] :\n                    params.type;\n\n                const parsed = signatureContext.parse(arg, 1 + parsedArgs.length, expectedType);\n                if (!parsed) {\n                    argParseFailed = true;\n                    break;\n                }\n                parsedArgs.push(parsed);\n            }\n            if (argParseFailed) {\n                // Couldn't coerce args of this overload to expected type, move\n                // on to next one.\n                continue;\n            }\n\n            if (Array.isArray(params)) {\n                if (params.length !== parsedArgs.length) {\n                    signatureContext.error(`Expected ${params.length} arguments, but found ${parsedArgs.length} instead.`);\n                    continue;\n                }\n            }\n\n            for (let i = 0; i < parsedArgs.length; i++) {\n                const expected = Array.isArray(params) ? params[i] : params.type;\n                const arg = parsedArgs[i];\n                signatureContext.concat(i + 1).checkSubtype(expected, arg.type);\n            }\n\n            if (signatureContext.errors.length === 0) {\n                return new CompoundExpression(op, type, evaluate, parsedArgs);\n            }\n        }\n\n        assert(!signatureContext || signatureContext.errors.length > 0);\n\n        if (overloads.length === 1) {\n            context.errors.push(...signatureContext.errors);\n        } else {\n            const expected = overloads.length ? overloads : availableOverloads;\n            const signatures = expected\n                .map(([params]) => stringifySignature(params))\n                .join(' | ');\n\n            const actualTypes = [];\n            // For error message, re-parse arguments without trying to\n            // apply any coercions\n            for (let i = 1; i < args.length; i++) {\n                const parsed = context.parse(args[i], 1 + actualTypes.length);\n                if (!parsed) return null;\n                actualTypes.push(toString(parsed.type));\n            }\n            context.error(`Expected arguments of type ${signatures}, but found (${actualTypes.join(', ')}) instead.`);\n        }\n\n        return null;\n    }\n\n    static register(\n        registry: ExpressionRegistry,\n        definitions: {[_: string]: Definition }\n    ) {\n        assert(!CompoundExpression.definitions);\n        CompoundExpression.definitions = definitions;\n        for (const name in definitions) {\n            registry[name] = CompoundExpression;\n        }\n    }\n}\n\nfunction stringifySignature(signature: Signature): string {\n    if (Array.isArray(signature)) {\n        return `(${signature.map(toString).join(', ')})`;\n    } else {\n        return `(${toString(signature.type)}...)`;\n    }\n}\n\nexport default CompoundExpression;\n", "// @flow\n\nimport {StringType, BooleanType, CollatorType} from '../types.js';\nimport Collator from '../types/collator.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type {Type} from '../types.js';\n\nexport default class CollatorExpression implements Expression {\n    type: Type;\n    caseSensitive: Expression;\n    diacriticSensitive: Expression;\n    locale: Expression | null;\n\n    constructor(caseSensitive: Expression, diacriticSensitive: Expression, locale: Expression | null) {\n        this.type = CollatorType;\n        this.locale = locale;\n        this.caseSensitive = caseSensitive;\n        this.diacriticSensitive = diacriticSensitive;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        if (args.length !== 2)\n            return context.error(`Expected one argument.`);\n\n        const options = (args[1]: any);\n        if (typeof options !== \"object\" || Array.isArray(options))\n            return context.error(`Collator options argument must be an object.`);\n\n        const caseSensitive = context.parse(\n            options['case-sensitive'] === undefined ? false : options['case-sensitive'], 1, BooleanType);\n        if (!caseSensitive) return null;\n\n        const diacriticSensitive = context.parse(\n            options['diacritic-sensitive'] === undefined ? false : options['diacritic-sensitive'], 1, BooleanType);\n        if (!diacriticSensitive) return null;\n\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale) return null;\n        }\n\n        return new CollatorExpression(caseSensitive, diacriticSensitive, locale);\n    }\n\n    evaluate(ctx: EvaluationContext): Collator {\n        return new Collator(this.caseSensitive.evaluate(ctx), this.diacriticSensitive.evaluate(ctx), this.locale ? this.locale.evaluate(ctx) : null);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.caseSensitive);\n        fn(this.diacriticSensitive);\n        if (this.locale) {\n            fn(this.locale);\n        }\n    }\n\n    outputDefined(): boolean {\n        // Technically the set of possible outputs is the combinatoric set of Collators produced\n        // by all possible outputs of locale/caseSensitive/diacriticSensitive\n        // But for the primary use of Collators in comparison operators, we ignore the Collator's\n        // possible outputs anyway, so we can get away with leaving this false for now.\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        const options = {};\n        options['case-sensitive'] = this.caseSensitive.serialize();\n        options['diacritic-sensitive'] = this.diacriticSensitive.serialize();\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        return [\"collator\", options];\n    }\n}\n", "// @flow\n\nimport {isValue} from '../values.js';\nimport type {Type} from '../types.js';\nimport {BooleanType} from '../types.js';\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {GeoJSON, GeoJSONPolygon, GeoJSONMultiPolygon} from '@mapbox/geojson-types';\nimport type {CanonicalTileID} from '../../../source/tile_id.js';\n\ntype GeoJSONPolygons =| GeoJSONPolygon | GeoJSONMultiPolygon;\n\n// minX, minY, maxX, maxY\ntype BBox = [number, number, number, number];\nconst EXTENT = 8192;\n\nfunction updateBBox(bbox: BBox, coord: [number, number]) {\n    bbox[0] = Math.min(bbox[0], coord[0]);\n    bbox[1] = Math.min(bbox[1], coord[1]);\n    bbox[2] = Math.max(bbox[2], coord[0]);\n    bbox[3] = Math.max(bbox[3], coord[1]);\n}\n\nfunction mercatorXfromLng(lng: number) {\n    return (180 + lng) / 360;\n}\n\nfunction mercatorYfromLat(lat: number) {\n    return (180 - (180 / Math.PI * Math.log(Math.tan(Math.PI / 4 + lat * Math.PI / 360)))) / 360;\n}\n\nfunction boxWithinBox(bbox1: BBox, bbox2: BBox) {\n    if (bbox1[0] <= bbox2[0]) return false;\n    if (bbox1[2] >= bbox2[2]) return false;\n    if (bbox1[1] <= bbox2[1]) return false;\n    if (bbox1[3] >= bbox2[3]) return false;\n    return true;\n}\n\nfunction getTileCoordinates(p, canonical: CanonicalTileID) {\n    const x = mercatorXfromLng(p[0]);\n    const y = mercatorYfromLat(p[1]);\n    const tilesAtZoom = Math.pow(2, canonical.z);\n    return [Math.round(x * tilesAtZoom * EXTENT), Math.round(y * tilesAtZoom * EXTENT)];\n}\n\nfunction onBoundary(p, p1, p2) {\n    const x1 = p[0] - p1[0];\n    const y1 = p[1] - p1[1];\n    const x2 = p[0] - p2[0];\n    const y2 = p[1] - p2[1];\n    return (x1 * y2 - x2 * y1 === 0) && (x1 * x2 <= 0) && (y1 * y2 <= 0);\n}\n\nfunction rayIntersect(p, p1, p2) {\n    return ((p1[1] > p[1]) !== (p2[1] > p[1])) && (p[0] < (p2[0] - p1[0]) * (p[1] - p1[1]) / (p2[1] - p1[1]) + p1[0]);\n}\n\n// ray casting algorithm for detecting if point is in polygon\nfunction pointWithinPolygon(point, rings) {\n    let inside = false;\n    for (let i = 0, len = rings.length; i < len; i++) {\n        const ring = rings[i];\n        for (let j = 0, len2 = ring.length; j < len2 - 1; j++) {\n            if (onBoundary(point, ring[j], ring[j + 1])) return false;\n            if (rayIntersect(point, ring[j], ring[j + 1])) inside = !inside;\n        }\n    }\n    return inside;\n}\n\nfunction pointWithinPolygons(point, polygons) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (pointWithinPolygon(point, polygons[i])) return true;\n    }\n    return false;\n}\n\nfunction perp(v1, v2) {\n    return (v1[0] * v2[1] - v1[1] * v2[0]);\n}\n\n// check if p1 and p2 are in different sides of line segment q1->q2\nfunction  twoSided(p1, p2, q1, q2) {\n    // q1->p1 (x1, y1), q1->p2 (x2, y2), q1->q2 (x3, y3)\n    const x1 = p1[0] - q1[0];\n    const y1 = p1[1] - q1[1];\n    const x2 = p2[0] - q1[0];\n    const y2 = p2[1] - q1[1];\n    const x3 = q2[0] - q1[0];\n    const y3 = q2[1] - q1[1];\n    const det1 = (x1 * y3 - x3 * y1);\n    const det2 =  (x2 * y3 - x3 * y2);\n    if ((det1 > 0 && det2 < 0) || (det1 < 0 && det2 > 0)) return true;\n    return false;\n}\n// a, b are end points for line segment1, c and d are end points for line segment2\nfunction lineIntersectLine(a, b, c, d) {\n    // check if two segments are parallel or not\n    // precondition is end point a, b is inside polygon, if line a->b is\n    // parallel to polygon edge c->d, then a->b won't intersect with c->d\n    const vectorP = [b[0] - a[0], b[1] - a[1]];\n    const vectorQ = [d[0] - c[0], d[1] - c[1]];\n    if (perp(vectorQ, vectorP) === 0) return false;\n\n    // If lines are intersecting with each other, the relative location should be:\n    // a and b lie in different sides of segment c->d\n    // c and d lie in different sides of segment a->b\n    if (twoSided(a, b, c, d) && twoSided(c, d, a, b)) return true;\n    return false;\n}\n\nfunction lineIntersectPolygon(p1, p2, polygon) {\n    for (const ring of polygon) {\n        // loop through every edge of the ring\n        for (let j = 0; j < ring.length - 1; ++j) {\n            if (lineIntersectLine(p1, p2, ring[j], ring[j + 1])) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\nfunction lineStringWithinPolygon(line, polygon) {\n    // First, check if geometry points of line segments are all inside polygon\n    for (let i = 0; i < line.length; ++i) {\n        if (!pointWithinPolygon(line[i], polygon)) {\n            return false;\n        }\n    }\n\n    // Second, check if there is line segment intersecting polygon edge\n    for (let i = 0; i < line.length - 1; ++i) {\n        if (lineIntersectPolygon(line[i], line[i + 1], polygon)) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction lineStringWithinPolygons(line, polygons) {\n    for (let i = 0; i < polygons.length; i++) {\n        if (lineStringWithinPolygon(line, polygons[i])) return true;\n    }\n    return false;\n}\n\nfunction getTilePolygon(coordinates, bbox: BBox, canonical: CanonicalTileID) {\n    const polygon = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const ring = [];\n        for (let j = 0; j < coordinates[i].length; j++) {\n            const coord = getTileCoordinates(coordinates[i][j], canonical);\n            updateBBox(bbox, coord);\n            ring.push(coord);\n        }\n        polygon.push(ring);\n    }\n    return polygon;\n}\n\nfunction getTilePolygons(coordinates, bbox, canonical: CanonicalTileID) {\n    const polygons = [];\n    for (let i = 0; i < coordinates.length; i++) {\n        const polygon = getTilePolygon(coordinates[i], bbox, canonical);\n        polygons.push(polygon);\n    }\n    return polygons;\n}\n\nfunction updatePoint(p, bbox, polyBBox, worldSize) {\n    if (p[0] < polyBBox[0] || p[0] > polyBBox[2]) {\n        const halfWorldSize = worldSize * 0.5;\n        let shift = (p[0] - polyBBox[0] > halfWorldSize) ? -worldSize : (polyBBox[0] - p[0] > halfWorldSize) ? worldSize : 0;\n        if (shift === 0) {\n            shift = (p[0] - polyBBox[2] > halfWorldSize) ? -worldSize : (polyBBox[2] - p[0] > halfWorldSize) ? worldSize : 0;\n        }\n        p[0] += shift;\n    }\n    updateBBox(bbox, p);\n}\n\nfunction resetBBox(bbox) {\n    bbox[0] = bbox[1] = Infinity;\n    bbox[2] = bbox[3] = -Infinity;\n}\n\nfunction getTilePoints(geometry, pointBBox, polyBBox, canonical: CanonicalTileID) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tilePoints = [];\n    if (!geometry) return tilePoints;\n    for (const points of geometry) {\n        for (const point of points) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updatePoint(p, pointBBox, polyBBox, worldSize);\n            tilePoints.push(p);\n        }\n    }\n    return tilePoints;\n}\n\nfunction getTileLines(geometry, lineBBox, polyBBox, canonical: CanonicalTileID) {\n    const worldSize = Math.pow(2, canonical.z) * EXTENT;\n    const shifts = [canonical.x * EXTENT, canonical.y * EXTENT];\n    const tileLines = [];\n    if (!geometry) return tileLines;\n    for (const line of geometry) {\n        const tileLine = [];\n        for (const point of line) {\n            const p = [point.x + shifts[0], point.y + shifts[1]];\n            updateBBox(lineBBox, p);\n            tileLine.push(p);\n        }\n        tileLines.push(tileLine);\n    }\n    if (lineBBox[2] - lineBBox[0] <= worldSize / 2) {\n        resetBBox(lineBBox);\n        for (const line of tileLines) {\n            for (const p of line) {\n                updatePoint(p, lineBBox, polyBBox, worldSize);\n            }\n        }\n    }\n    return tileLines;\n}\n\nfunction pointsWithinPolygons(ctx: EvaluationContext, polygonGeometry: GeoJSONPolygons) {\n    const pointBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n\n    const canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox)) return false;\n\n        for (const point of tilePoints) {\n            if (!pointWithinPolygon(point, tilePolygon)) return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tilePoints = getTilePoints(ctx.geometry(), pointBBox, polyBBox, canonical);\n        if (!boxWithinBox(pointBBox, polyBBox)) return false;\n\n        for (const point of tilePoints) {\n            if (!pointWithinPolygons(point, tilePolygons)) return false;\n        }\n    }\n\n    return true;\n}\n\nfunction linesWithinPolygons(ctx: EvaluationContext, polygonGeometry: GeoJSONPolygons) {\n    const lineBBox = [Infinity, Infinity, -Infinity, -Infinity];\n    const polyBBox = [Infinity, Infinity, -Infinity, -Infinity];\n\n    const canonical = ctx.canonicalID();\n    if (!canonical) {\n        return false;\n    }\n\n    if (polygonGeometry.type === 'Polygon') {\n        const tilePolygon = getTilePolygon(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox)) return false;\n\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygon(line, tilePolygon)) return false;\n        }\n    }\n    if (polygonGeometry.type === 'MultiPolygon') {\n        const tilePolygons = getTilePolygons(polygonGeometry.coordinates, polyBBox, canonical);\n        const tileLines = getTileLines(ctx.geometry(), lineBBox, polyBBox, canonical);\n        if (!boxWithinBox(lineBBox, polyBBox)) return false;\n\n        for (const line of tileLines) {\n            if (!lineStringWithinPolygons(line, tilePolygons)) return false;\n        }\n    }\n    return true;\n}\n\nclass Within implements Expression {\n    type: Type;\n    geojson: GeoJSON\n    geometries: GeoJSONPolygons;\n\n    constructor(geojson: GeoJSON, geometries: GeoJSONPolygons) {\n        this.type = BooleanType;\n        this.geojson = geojson;\n        this.geometries = geometries;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Within {\n        if (args.length !== 2)\n            return context.error(`'within' expression requires exactly one argument, but found ${args.length - 1} instead.`);\n        if (isValue(args[1])) {\n            const geojson = (args[1]: Object);\n            if (geojson.type === 'FeatureCollection') {\n                for (let i = 0; i < geojson.features.length; ++i) {\n                    const type = geojson.features[i].geometry.type;\n                    if (type === 'Polygon' || type === 'MultiPolygon') {\n                        return new Within(geojson, geojson.features[i].geometry);\n                    }\n                }\n            } else if (geojson.type === 'Feature') {\n                const type = geojson.geometry.type;\n                if (type === 'Polygon' || type === 'MultiPolygon') {\n                    return new Within(geojson, geojson.geometry);\n                }\n            } else if (geojson.type  === 'Polygon' || geojson.type === 'MultiPolygon') {\n                return new Within(geojson, geojson);\n            }\n        }\n        return context.error(`'within' expression requires valid geojson object that contains polygon geometry type.`);\n    }\n\n    evaluate(ctx: EvaluationContext): boolean {\n        if (ctx.geometry() != null && ctx.canonicalID() != null) {\n            if (ctx.geometryType() === 'Point') {\n                return pointsWithinPolygons(ctx, this.geometries);\n            } else if (ctx.geometryType() === 'LineString') {\n                return linesWithinPolygons(ctx, this.geometries);\n            }\n        }\n        return false;\n    }\n\n    eachChild() {}\n\n    outputDefined(): boolean {\n        return true;\n    }\n\n    serialize(): SerializedExpression {\n        return [\"within\", this.geojson];\n    }\n\n}\n\nexport default Within;\n", "// @flow\n\nimport CompoundExpression from './compound_expression.js';\nimport Within from './definitions/within.js';\nimport type {Expression} from './expression.js';\n\nfunction isFeatureConstant(e: Expression): boolean {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'get' && e.args.length === 1) {\n            return false;\n        } else if (e.name === 'feature-state') {\n            return false;\n        } else if (e.name === 'has' && e.args.length === 1) {\n            return false;\n        } else if (\n            e.name === 'properties' ||\n            e.name === 'geometry-type' ||\n            e.name === 'id'\n        ) {\n            return false;\n        } else if (/^filter-/.test(e.name)) {\n            return false;\n        }\n    }\n\n    if (e instanceof Within) {\n        return false;\n    }\n\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isFeatureConstant(arg)) { result = false; }\n    });\n    return result;\n}\n\nfunction isStateConstant(e: Expression): boolean {\n    if (e instanceof CompoundExpression) {\n        if (e.name === 'feature-state') {\n            return false;\n        }\n    }\n    let result = true;\n    e.eachChild(arg => {\n        if (result && !isStateConstant(arg)) { result = false; }\n    });\n    return result;\n}\n\nfunction isGlobalPropertyConstant(e: Expression, properties: Array<string>): boolean {\n    if (e instanceof CompoundExpression && properties.indexOf(e.name) >= 0) { return false; }\n    let result = true;\n    e.eachChild((arg) => {\n        if (result && !isGlobalPropertyConstant(arg, properties)) { result = false; }\n    });\n    return result;\n}\n\nexport {isFeatureConstant, isGlobalPropertyConstant, isStateConstant};\n", "// @flow\n\nimport type {Type} from '../types.js';\nimport type {Expression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext  from '../evaluation_context.js';\n\nclass Var implements Expression {\n    type: Type;\n    name: string;\n    boundExpression: Expression;\n\n    constructor(name: string, boundExpression: Expression) {\n        this.type = boundExpression.type;\n        this.name = name;\n        this.boundExpression = boundExpression;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): void | Var {\n        if (args.length !== 2 || typeof args[1] !== 'string')\n            return context.error(`'var' expression requires exactly one string literal argument.`);\n\n        const name = args[1];\n        if (!context.scope.has(name)) {\n            return context.error(`Unknown variable \"${name}\". Make sure \"${name}\" has been bound in an enclosing \"let\" expression before using it.`, 1);\n        }\n\n        return new Var(name, context.scope.get(name));\n    }\n\n    evaluate(ctx: EvaluationContext): any {\n        return this.boundExpression.evaluate(ctx);\n    }\n\n    eachChild() {}\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): Array<string> {\n        return [\"var\", this.name];\n    }\n}\n\nexport default Var;\n", "// @flow\n\nimport Scope from './scope.js';\nimport {checkSubtype} from './types.js';\nimport ParsingError from './parsing_error.js';\nimport Literal from './definitions/literal.js';\nimport Assertion from './definitions/assertion.js';\nimport Coercion from './definitions/coercion.js';\nimport EvaluationContext from './evaluation_context.js';\nimport CompoundExpression from './compound_expression.js';\nimport CollatorExpression from './definitions/collator.js';\nimport Within from './definitions/within.js';\nimport {isGlobalPropertyConstant, isFeatureConstant} from './is_constant.js';\nimport Var from './definitions/var.js';\n\nimport type {Expression, ExpressionRegistry} from './expression.js';\nimport type {Type} from './types.js';\n\n/**\n * State associated parsing at a given point in an expression tree.\n * @private\n */\nclass ParsingContext {\n    registry: ExpressionRegistry;\n    path: Array<number>;\n    key: string;\n    scope: Scope;\n    errors: Array<ParsingError>;\n\n    // The expected type of this expression. Provided only to allow Expression\n    // implementations to infer argument types: Expression#parse() need not\n    // check that the output type of the parsed expression matches\n    // `expectedType`.\n    expectedType: ?Type;\n\n    constructor(\n        registry: ExpressionRegistry,\n        path: Array<number> = [],\n        expectedType: ?Type,\n        scope: Scope = new Scope(),\n        errors: Array<ParsingError> = []\n    ) {\n        this.registry = registry;\n        this.path = path;\n        this.key = path.map(part => `[${part}]`).join('');\n        this.scope = scope;\n        this.errors = errors;\n        this.expectedType = expectedType;\n    }\n\n    /**\n     * @param expr the JSON expression to parse\n     * @param index the optional argument index if this expression is an argument of a parent expression that's being parsed\n     * @param options\n     * @param options.omitTypeAnnotations set true to omit inferred type annotations.  Caller beware: with this option set, the parsed expression's type will NOT satisfy `expectedType` if it would normally be wrapped in an inferred annotation.\n     * @private\n     */\n    parse(\n        expr: mixed,\n        index?: number,\n        expectedType?: ?Type,\n        bindings?: Array<[string, Expression]>,\n        options: {typeAnnotation?: 'assert' | 'coerce' | 'omit'} = {}\n    ): ?Expression {\n        if (index) {\n            return this.concat(index, expectedType, bindings)._parse(expr, options);\n        }\n        return this._parse(expr, options);\n    }\n\n    _parse(expr: mixed, options: {typeAnnotation?: 'assert' | 'coerce' | 'omit'}): ?Expression {\n        if (expr === null || typeof expr === 'string' || typeof expr === 'boolean' || typeof expr === 'number') {\n            expr = ['literal', expr];\n        }\n\n        function annotate(parsed, type, typeAnnotation: 'assert' | 'coerce' | 'omit') {\n            if (typeAnnotation === 'assert') {\n                return new Assertion(type, [parsed]);\n            } else if (typeAnnotation === 'coerce') {\n                return new Coercion(type, [parsed]);\n            } else {\n                return parsed;\n            }\n        }\n\n        if (Array.isArray(expr)) {\n            if (expr.length === 0) {\n                return this.error(`Expected an array with at least one element. If you wanted a literal array, use [\"literal\", []].`);\n            }\n\n            const op = expr[0];\n            if (typeof op !== 'string') {\n                this.error(`Expression name must be a string, but found ${typeof op} instead. If you wanted a literal array, use [\"literal\", [...]].`, 0);\n                return null;\n            }\n\n            const Expr = this.registry[op];\n            if (Expr) {\n                let parsed = Expr.parse(expr, this);\n                if (!parsed) return null;\n\n                if (this.expectedType) {\n                    const expected = this.expectedType;\n                    const actual = parsed.type;\n\n                    // When we expect a number, string, boolean, or array but have a value, wrap it in an assertion.\n                    // When we expect a color or formatted string, but have a string or value, wrap it in a coercion.\n                    // Otherwise, we do static type-checking.\n                    //\n                    // These behaviors are overridable for:\n                    //   * The \"coalesce\" operator, which needs to omit type annotations.\n                    //   * String-valued properties (e.g. `text-field`), where coercion is more convenient than assertion.\n                    //\n                    if ((expected.kind === 'string' || expected.kind === 'number' || expected.kind === 'boolean' || expected.kind === 'object' || expected.kind === 'array') && actual.kind === 'value') {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'assert');\n                    } else if ((expected.kind === 'color' || expected.kind === 'formatted' || expected.kind === 'resolvedImage') && (actual.kind === 'value' || actual.kind === 'string')) {\n                        parsed = annotate(parsed, expected, options.typeAnnotation || 'coerce');\n                    } else if (this.checkSubtype(expected, actual)) {\n                        return null;\n                    }\n                }\n\n                // If an expression's arguments are all literals, we can evaluate\n                // it immediately and replace it with a literal value in the\n                // parsed/compiled result. Expressions that expect an image should\n                // not be resolved here so we can later get the available images.\n                if (!(parsed instanceof Literal) && (parsed.type.kind !== 'resolvedImage') && isConstant(parsed)) {\n                    const ec = new EvaluationContext();\n                    try {\n                        parsed = new Literal(parsed.type, parsed.evaluate(ec));\n                    } catch (e) {\n                        this.error(e.message);\n                        return null;\n                    }\n                }\n\n                return parsed;\n            }\n\n            return this.error(`Unknown expression \"${op}\". If you wanted a literal array, use [\"literal\", [...]].`, 0);\n        } else if (typeof expr === 'undefined') {\n            return this.error(`'undefined' value invalid. Use null instead.`);\n        } else if (typeof expr === 'object') {\n            return this.error(`Bare objects invalid. Use [\"literal\", {...}] instead.`);\n        } else {\n            return this.error(`Expected an array, but found ${typeof expr} instead.`);\n        }\n    }\n\n    /**\n     * Returns a copy of this context suitable for parsing the subexpression at\n     * index `index`, optionally appending to 'let' binding map.\n     *\n     * Note that `errors` property, intended for collecting errors while\n     * parsing, is copied by reference rather than cloned.\n     * @private\n     */\n    concat(index: number, expectedType?: ?Type, bindings?: Array<[string, Expression]>): ParsingContext {\n        const path = typeof index === 'number' ? this.path.concat(index) : this.path;\n        const scope = bindings ? this.scope.concat(bindings) : this.scope;\n        return new ParsingContext(\n            this.registry,\n            path,\n            expectedType || null,\n            scope,\n            this.errors\n        );\n    }\n\n    /**\n     * Push a parsing (or type checking) error into the `this.errors`\n     * @param error The message\n     * @param keys Optionally specify the source of the error at a child\n     * of the current expression at `this.key`.\n     * @private\n     */\n    error(error: string, ...keys: Array<number>) {\n        const key = `${this.key}${keys.map(k => `[${k}]`).join('')}`;\n        this.errors.push(new ParsingError(key, error));\n    }\n\n    /**\n     * Returns null if `t` is a subtype of `expected`; otherwise returns an\n     * error message and also pushes it to `this.errors`.\n     */\n    checkSubtype(expected: Type, t: Type): ?string {\n        const error = checkSubtype(expected, t);\n        if (error) this.error(error);\n        return error;\n    }\n}\n\nexport default ParsingContext;\n\nfunction isConstant(expression: Expression) {\n    if (expression instanceof Var) {\n        return isConstant(expression.boundExpression);\n    } else if (expression instanceof CompoundExpression && expression.name === 'error') {\n        return false;\n    } else if (expression instanceof CollatorExpression) {\n        // Although the results of a Collator expression with fixed arguments\n        // generally shouldn't change between executions, we can't serialize them\n        // as constant expressions because results change based on environment.\n        return false;\n    } else if (expression instanceof Within) {\n        return false;\n    }\n\n    const isTypeAnnotation = expression instanceof Coercion ||\n        expression instanceof Assertion;\n\n    let childrenConstant = true;\n    expression.eachChild(child => {\n        // We can _almost_ assume that if `expressions` children are constant,\n        // they would already have been evaluated to Literal values when they\n        // were parsed.  Type annotations are the exception, because they might\n        // have been inferred and added after a child was parsed.\n\n        // So we recurse into isConstant() for the children of type annotations,\n        // but otherwise simply check whether they are Literals.\n        if (isTypeAnnotation) {\n            childrenConstant = childrenConstant && isConstant(child);\n        } else {\n            childrenConstant = childrenConstant && child instanceof Literal;\n        }\n    });\n    if (!childrenConstant) {\n        return false;\n    }\n\n    return isFeatureConstant(expression) &&\n        isGlobalPropertyConstant(expression, ['zoom', 'heatmap-density', 'line-progress', 'sky-radial-progress', 'accumulated', 'is-supported-script', 'pitch', 'distance-from-center']);\n}\n", "// @flow\n\nimport RuntimeError from './runtime_error.js';\n\nimport type {Expression} from './expression.js';\n\nexport type Stops = Array<[number, Expression]>;\n\n/**\n * Returns the index of the last stop <= input, or 0 if it doesn't exist.\n * @private\n */\nexport function findStopLessThanOrEqualTo(stops: Array<number>, input: number): number {\n    const lastIndex = stops.length - 1;\n    let lowerIndex = 0;\n    let upperIndex = lastIndex;\n    let currentIndex = 0;\n    let currentValue, nextValue;\n\n    while (lowerIndex <= upperIndex) {\n        currentIndex = Math.floor((lowerIndex + upperIndex) / 2);\n        currentValue = stops[currentIndex];\n        nextValue = stops[currentIndex + 1];\n\n        if (currentValue <= input) {\n            if (currentIndex === lastIndex || input < nextValue) { // Search complete\n                return currentIndex;\n            }\n\n            lowerIndex = currentIndex + 1;\n        } else if (currentValue > input) {\n            upperIndex = currentIndex - 1;\n        } else {\n            throw new RuntimeError('Input is not a number.');\n        }\n    }\n\n    return 0;\n}\n", "// @flow\n\nimport {NumberType} from '../types.js';\n\nimport {findStopLessThanOrEqualTo} from '../stops.js';\n\nimport type {Stops} from '../stops.js';\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nclass Step implements Expression {\n    type: Type;\n\n    input: Expression;\n    labels: Array<number>;\n    outputs: Array<Expression>;\n\n    constructor(type: Type, input: Expression, stops: Stops) {\n        this.type = type;\n        this.input = input;\n\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Step {\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n\n        const input = context.parse(args[1], 1, NumberType);\n        if (!input) return null;\n\n        const stops: Stops = [];\n\n        let outputType: Type = (null: any);\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        for (let i = 1; i < args.length; i += 2) {\n            const label = i === 1 ? -Infinity : args[i];\n            const value = args[i + 1];\n\n            const labelKey = i;\n            const valueKey = i + 1;\n\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"step\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"step\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n\n        return new Step(outputType, input, stops);\n    }\n\n    evaluate(ctx: EvaluationContext): any {\n        const labels = this.labels;\n        const outputs = this.outputs;\n\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const value = ((this.input.evaluate(ctx): any): number);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n\n        const index = findStopLessThanOrEqualTo(labels, value);\n        return outputs[index].evaluate(ctx);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n\n    outputDefined(): boolean {\n        return this.outputs.every(out => out.outputDefined());\n    }\n\n    serialize(): SerializedExpression {\n        const serialized = [\"step\", this.input.serialize()];\n        for (let i = 0; i < this.labels.length; i++) {\n            if (i > 0) {\n                serialized.push(this.labels[i]);\n            }\n            serialized.push(this.outputs[i].serialize());\n        }\n        return serialized;\n    }\n}\n\nexport default Step;\n", "'use strict';\n\nmodule.exports = UnitBezier;\n\nfunction UnitBezier(p1x, p1y, p2x, p2y) {\n    // Calculate the polynomial coefficients, implicit first and last control points are (0,0) and (1,1).\n    this.cx = 3.0 * p1x;\n    this.bx = 3.0 * (p2x - p1x) - this.cx;\n    this.ax = 1.0 - this.cx - this.bx;\n\n    this.cy = 3.0 * p1y;\n    this.by = 3.0 * (p2y - p1y) - this.cy;\n    this.ay = 1.0 - this.cy - this.by;\n\n    this.p1x = p1x;\n    this.p1y = p1y;\n    this.p2x = p2x;\n    this.p2y = p2y;\n}\n\nUnitBezier.prototype = {\n    sampleCurveX: function (t) {\n        // `ax t^3 + bx t^2 + cx t' expanded using Horner's rule.\n        return ((this.ax * t + this.bx) * t + this.cx) * t;\n    },\n\n    sampleCurveY: function (t) {\n        return ((this.ay * t + this.by) * t + this.cy) * t;\n    },\n\n    sampleCurveDerivativeX: function (t) {\n        return (3.0 * this.ax * t + 2.0 * this.bx) * t + this.cx;\n    },\n\n    solveCurveX: function (x, epsilon) {\n        if (epsilon === undefined) epsilon = 1e-6;\n\n        if (x < 0.0) return 0.0;\n        if (x > 1.0) return 1.0;\n\n        var t = x;\n\n        // First try a few iterations of Newton's method - normally very fast.\n        for (var i = 0; i < 8; i++) {\n            var x2 = this.sampleCurveX(t) - x;\n            if (Math.abs(x2) < epsilon) return t;\n\n            var d2 = this.sampleCurveDerivativeX(t);\n            if (Math.abs(d2) < 1e-6) break;\n\n            t = t - x2 / d2;\n        }\n\n        // Fall back to the bisection method for reliability.\n        var t0 = 0.0;\n        var t1 = 1.0;\n        t = x;\n\n        for (i = 0; i < 20; i++) {\n            x2 = this.sampleCurveX(t);\n            if (Math.abs(x2 - x) < epsilon) break;\n\n            if (x > x2) {\n                t0 = t;\n            } else {\n                t1 = t;\n            }\n\n            t = (t1 - t0) * 0.5 + t0;\n        }\n\n        return t;\n    },\n\n    solve: function (x, epsilon) {\n        return this.sampleCurveY(this.solveCurveX(x, epsilon));\n    }\n};\n", "// @flow\n\nimport Color from './color.js';\n\nexport function number(a: number, b: number, t: number): number {\n    return (a * (1 - t)) + (b * t);\n}\n\nexport function color(from: Color, to: Color, t: number): Color {\n    return new Color(\n        number(from.r, to.r, t),\n        number(from.g, to.g, t),\n        number(from.b, to.b, t),\n        number(from.a, to.a, t)\n    );\n}\n\nexport function array(from: Array<number>, to: Array<number>, t: number): Array<number> {\n    return from.map((d, i) => {\n        return number(d, to[i], t);\n    });\n}\n", "// @flow\n\nimport Color from './color.js';\n\nimport {number as interpolateNumber} from './interpolate.js';\n\ntype LABColor = {\n    l: number,\n    a: number,\n    b: number,\n    alpha: number\n};\n\ntype HCLColor = {\n    h: number,\n    c: number,\n    l: number,\n    alpha: number\n};\n\n// Constants\nconst Xn = 0.950470, // D65 standard referent\n    Yn = 1,\n    Zn = 1.088830,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1,\n    deg2rad = Math.PI / 180,\n    rad2deg = 180 / Math.PI;\n\n// Utilities\nfunction xyz2lab(t: number) {\n    return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t: number) {\n    return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction xyz2rgb(x: number) {\n    return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2xyz(x: number) {\n    x /= 255;\n    return x <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\n// LAB\nfunction rgbToLab(rgbColor: Color): LABColor {\n    const b = rgb2xyz(rgbColor.r),\n        a = rgb2xyz(rgbColor.g),\n        l = rgb2xyz(rgbColor.b),\n        x = xyz2lab((0.4124564 * b + 0.3575761 * a + 0.1804375 * l) / Xn),\n        y = xyz2lab((0.2126729 * b + 0.7151522 * a + 0.0721750 * l) / Yn),\n        z = xyz2lab((0.0193339 * b + 0.1191920 * a + 0.9503041 * l) / Zn);\n\n    return {\n        l: 116 * y - 16,\n        a: 500 * (x - y),\n        b: 200 * (y - z),\n        alpha: rgbColor.a\n    };\n}\n\nfunction labToRgb(labColor: LABColor): Color {\n    let y = (labColor.l + 16) / 116,\n        x = isNaN(labColor.a) ? y : y + labColor.a / 500,\n        z = isNaN(labColor.b) ? y : y - labColor.b / 200;\n    y = Yn * lab2xyz(y);\n    x = Xn * lab2xyz(x);\n    z = Zn * lab2xyz(z);\n    return new Color(\n        xyz2rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z), // D65 -> sRGB\n        xyz2rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z),\n        xyz2rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z),\n        labColor.alpha\n    );\n}\n\nfunction interpolateLab(from: LABColor, to: LABColor, t: number): LABColor {\n    return {\n        l: interpolateNumber(from.l, to.l, t),\n        a: interpolateNumber(from.a, to.a, t),\n        b: interpolateNumber(from.b, to.b, t),\n        alpha: interpolateNumber(from.alpha, to.alpha, t)\n    };\n}\n\n// HCL\nfunction rgbToHcl(rgbColor: Color): HCLColor {\n    const {l, a, b} = rgbToLab(rgbColor);\n    const h = Math.atan2(b, a) * rad2deg;\n    return {\n        h: h < 0 ? h + 360 : h,\n        c: Math.sqrt(a * a + b * b),\n        l,\n        alpha: rgbColor.a\n    };\n}\n\nfunction hclToRgb(hclColor: HCLColor): Color {\n    const h = hclColor.h * deg2rad,\n        c = hclColor.c,\n        l = hclColor.l;\n    return labToRgb({\n        l,\n        a: Math.cos(h) * c,\n        b: Math.sin(h) * c,\n        alpha: hclColor.alpha\n    });\n}\n\nfunction interpolateHue(a: number, b: number, t: number) {\n    const d = b - a;\n    return a + t * (d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d);\n}\n\nfunction interpolateHcl(from: HCLColor, to: HCLColor, t: number): HCLColor {\n    return {\n        h: interpolateHue(from.h, to.h, t),\n        c: interpolateNumber(from.c, to.c, t),\n        l: interpolateNumber(from.l, to.l, t),\n        alpha: interpolateNumber(from.alpha, to.alpha, t)\n    };\n}\n\nexport const lab = {\n    forward: rgbToLab,\n    reverse: labToRgb,\n    interpolate: interpolateLab\n};\n\nexport const hcl = {\n    forward: rgbToHcl,\n    reverse: hclToRgb,\n    interpolate: interpolateHcl\n};\n", "// @flow\n\nimport UnitBezier from '@mapbox/unitbezier';\n\nimport * as interpolate from '../../util/interpolate.js';\nimport {toString, NumberType, ColorType} from '../types.js';\nimport {findStopLessThanOrEqualTo} from '../stops.js';\nimport {hcl, lab} from '../../util/color_spaces.js';\nimport Color from '../../util/color.js';\n\nimport type {Stops} from '../stops.js';\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nexport type InterpolationType =\n    { name: 'linear' } |\n    { name: 'exponential', base: number } |\n    { name: 'cubic-bezier', controlPoints: [number, number, number, number] };\n\nclass Interpolate implements Expression {\n    type: Type;\n\n    operator: 'interpolate' | 'interpolate-hcl' | 'interpolate-lab';\n    interpolation: InterpolationType;\n    input: Expression;\n    labels: Array<number>;\n    outputs: Array<Expression>;\n\n    constructor(type: Type, operator: 'interpolate' | 'interpolate-hcl' | 'interpolate-lab', interpolation: InterpolationType, input: Expression, stops: Stops) {\n        this.type = type;\n        this.operator = operator;\n        this.interpolation = interpolation;\n        this.input = input;\n\n        this.labels = [];\n        this.outputs = [];\n        for (const [label, expression] of stops) {\n            this.labels.push(label);\n            this.outputs.push(expression);\n        }\n    }\n\n    static interpolationFactor(interpolation: InterpolationType, input: number, lower: number, upper: number): number {\n        let t = 0;\n        if (interpolation.name === 'exponential') {\n            t = exponentialInterpolation(input, interpolation.base, lower, upper);\n        } else if (interpolation.name === 'linear') {\n            t = exponentialInterpolation(input, 1, lower, upper);\n        } else if (interpolation.name === 'cubic-bezier') {\n            const c = interpolation.controlPoints;\n            const ub = new UnitBezier(c[0], c[1], c[2], c[3]);\n            t = ub.solve(exponentialInterpolation(input, 1, lower, upper));\n        }\n        return t;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Interpolate {\n        let [operator, interpolation, input, ...rest] = args;\n\n        if (!Array.isArray(interpolation) || interpolation.length === 0) {\n            return context.error(`Expected an interpolation type expression.`, 1);\n        }\n\n        if (interpolation[0] === 'linear') {\n            interpolation = {name: 'linear'};\n        } else if (interpolation[0] === 'exponential') {\n            const base = interpolation[1];\n            if (typeof base !== 'number')\n                return context.error(`Exponential interpolation requires a numeric base.`, 1, 1);\n            interpolation = {\n                name: 'exponential',\n                base\n            };\n        } else if (interpolation[0] === 'cubic-bezier') {\n            const controlPoints = interpolation.slice(1);\n            if (\n                controlPoints.length !== 4 ||\n                controlPoints.some(t => typeof t !== 'number' || t < 0 || t > 1)\n            ) {\n                return context.error('Cubic bezier interpolation requires four numeric arguments with values between 0 and 1.', 1);\n            }\n\n            interpolation = {\n                name: 'cubic-bezier',\n                controlPoints: (controlPoints: any)\n            };\n        } else {\n            return context.error(`Unknown interpolation type ${String(interpolation[0])}`, 1, 0);\n        }\n\n        if (args.length - 1 < 4) {\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        }\n\n        if ((args.length - 1) % 2 !== 0) {\n            return context.error(`Expected an even number of arguments.`);\n        }\n\n        input = context.parse(input, 2, NumberType);\n        if (!input) return null;\n\n        const stops: Stops = [];\n\n        let outputType: Type = (null: any);\n        if (operator === 'interpolate-hcl' || operator === 'interpolate-lab') {\n            outputType = ColorType;\n        } else if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        for (let i = 0; i < rest.length; i += 2) {\n            const label = rest[i];\n            const value = rest[i + 1];\n\n            const labelKey = i + 3;\n            const valueKey = i + 4;\n\n            if (typeof label !== 'number') {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be defined using literal numeric values (not computed expressions) for the input values.', labelKey);\n            }\n\n            if (stops.length && stops[stops.length - 1][0] >= label) {\n                return context.error('Input/output pairs for \"interpolate\" expressions must be arranged with input values in strictly ascending order.', labelKey);\n            }\n\n            const parsed = context.parse(value, valueKey, outputType);\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            stops.push([label, parsed]);\n        }\n\n        if (outputType.kind !== 'number' &&\n            outputType.kind !== 'color' &&\n            !(\n                outputType.kind === 'array' &&\n                outputType.itemType.kind === 'number' &&\n                typeof outputType.N === 'number'\n            )\n        ) {\n            return context.error(`Type ${toString(outputType)} is not interpolatable.`);\n        }\n\n        return new Interpolate(outputType, (operator: any), interpolation, input, stops);\n    }\n\n    evaluate(ctx: EvaluationContext): Color {\n        const labels = this.labels;\n        const outputs = this.outputs;\n\n        if (labels.length === 1) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const value = ((this.input.evaluate(ctx): any): number);\n        if (value <= labels[0]) {\n            return outputs[0].evaluate(ctx);\n        }\n\n        const stopCount = labels.length;\n        if (value >= labels[stopCount - 1]) {\n            return outputs[stopCount - 1].evaluate(ctx);\n        }\n\n        const index = findStopLessThanOrEqualTo(labels, value);\n        const lower = labels[index];\n        const upper = labels[index + 1];\n        const t = Interpolate.interpolationFactor(this.interpolation, value, lower, upper);\n\n        const outputLower = outputs[index].evaluate(ctx);\n        const outputUpper = outputs[index + 1].evaluate(ctx);\n\n        if (this.operator === 'interpolate') {\n            return (interpolate[this.type.kind.toLowerCase()]: any)(outputLower, outputUpper, t); // eslint-disable-line import/namespace\n        } else if (this.operator === 'interpolate-hcl') {\n            return hcl.reverse(hcl.interpolate(hcl.forward(outputLower), hcl.forward(outputUpper), t));\n        } else {\n            return lab.reverse(lab.interpolate(lab.forward(outputLower), lab.forward(outputUpper), t));\n        }\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n        for (const expression of this.outputs) {\n            fn(expression);\n        }\n    }\n\n    outputDefined(): boolean {\n        return this.outputs.every(out => out.outputDefined());\n    }\n\n    serialize(): SerializedExpression {\n        let interpolation;\n        if (this.interpolation.name === 'linear') {\n            interpolation = [\"linear\"];\n        } else if (this.interpolation.name === 'exponential') {\n            if  (this.interpolation.base === 1) {\n                interpolation = [\"linear\"];\n            } else {\n                interpolation = [\"exponential\", this.interpolation.base];\n            }\n        } else {\n            interpolation = [\"cubic-bezier\" ].concat(this.interpolation.controlPoints);\n        }\n\n        const serialized = [this.operator, interpolation, this.input.serialize()];\n\n        for (let i = 0; i < this.labels.length; i++) {\n            serialized.push(\n                this.labels[i],\n                this.outputs[i].serialize()\n            );\n        }\n        return serialized;\n    }\n}\n\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n * How it works: Two consecutive stop values define a (scaled and shifted) exponential function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n*/\nfunction exponentialInterpolation(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n\nexport default Interpolate;\n", "// @flow\n\nimport assert from 'assert';\n\nimport {checkSubtype, ValueType} from '../types.js';\nimport ResolvedImage from '../types/resolved_image.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nclass Coalesce implements Expression {\n    type: Type;\n    args: Array<Expression>;\n\n    constructor(type: Type, args: Array<Expression>) {\n        this.type = type;\n        this.args = args;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Coalesce {\n        if (args.length < 2) {\n            return context.error(\"Expectected at least one argument.\");\n        }\n        let outputType: Type = (null: any);\n        const expectedType = context.expectedType;\n        if (expectedType && expectedType.kind !== 'value') {\n            outputType = expectedType;\n        }\n        const parsedArgs = [];\n\n        for (const arg of args.slice(1)) {\n            const parsed = context.parse(arg, 1 + parsedArgs.length, outputType, undefined, {typeAnnotation: 'omit'});\n            if (!parsed) return null;\n            outputType = outputType || parsed.type;\n            parsedArgs.push(parsed);\n        }\n        assert(outputType);\n\n        // Above, we parse arguments without inferred type annotation so that\n        // they don't produce a runtime error for `null` input, which would\n        // preempt the desired null-coalescing behavior.\n        // Thus, if any of our arguments would have needed an annotation, we\n        // need to wrap the enclosing coalesce expression with it instead.\n        const needsAnnotation = expectedType &&\n            parsedArgs.some(arg => checkSubtype(expectedType, arg.type));\n\n        return needsAnnotation ?\n            new Coalesce(ValueType, parsedArgs) :\n            new Coalesce((outputType: any), parsedArgs);\n    }\n\n    evaluate(ctx: EvaluationContext): any | null {\n        let result = null;\n        let argCount = 0;\n        let firstImage;\n        for (const arg of this.args) {\n            argCount++;\n            result = arg.evaluate(ctx);\n            // we need to keep track of the first requested image in a coalesce statement\n            // if coalesce can't find a valid image, we return the first image so styleimagemissing can fire\n            if (result && result instanceof ResolvedImage && !result.available) {\n                // set to first image\n                if (!firstImage) {\n                    firstImage = result;\n                }\n                result = null;\n                // if we reach the end, return the first image\n                if (argCount === this.args.length) {\n                    return firstImage;\n                }\n            }\n\n            if (result !== null) break;\n        }\n        return result;\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        this.args.forEach(fn);\n    }\n\n    outputDefined(): boolean {\n        return this.args.every(arg => arg.outputDefined());\n    }\n\n    serialize(): SerializedExpression {\n        const serialized = [\"coalesce\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Coalesce;\n", "// @flow\n\nimport type {Type} from '../types.js';\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext  from '../evaluation_context.js';\n\nclass Let implements Expression {\n    type: Type;\n    bindings: Array<[string, Expression]>;\n    result: Expression;\n\n    constructor(bindings: Array<[string, Expression]>, result: Expression) {\n        this.type = result.type;\n        this.bindings = [].concat(bindings);\n        this.result = result;\n    }\n\n    evaluate(ctx: EvaluationContext): any {\n        return this.result.evaluate(ctx);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        for (const binding of this.bindings) {\n            fn(binding[1]);\n        }\n        fn(this.result);\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Let {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found ${args.length - 1} instead.`);\n\n        const bindings: Array<[string, Expression]> = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const name = args[i];\n\n            if (typeof name !== 'string') {\n                return context.error(`Expected string, but found ${typeof name} instead.`, i);\n            }\n\n            if (/[^a-zA-Z0-9_]/.test(name)) {\n                return context.error(`Variable names must contain only alphanumeric characters or '_'.`, i);\n            }\n\n            const value = context.parse(args[i + 1], i + 1);\n            if (!value) return null;\n\n            bindings.push([name, value]);\n        }\n\n        const result = context.parse(args[args.length - 1], args.length - 1, context.expectedType, bindings);\n        if (!result) return null;\n\n        return new Let(bindings, result);\n    }\n\n    outputDefined(): boolean {\n        return this.result.outputDefined();\n    }\n\n    serialize(): SerializedExpression {\n        const serialized = [\"let\"];\n        for (const [name, expr] of this.bindings) {\n            serialized.push(name, expr.serialize());\n        }\n        serialized.push(this.result.serialize());\n        return serialized;\n    }\n}\n\nexport default Let;\n", "// @flow\n\nimport {array, ValueType, NumberType} from '../types.js';\n\nimport RuntimeError from '../runtime_error.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type, ArrayType} from '../types.js';\nimport type {Value} from '../values.js';\n\nclass At implements Expression {\n    type: Type;\n    index: Expression;\n    input: Expression;\n\n    constructor(type: Type, index: Expression, input: Expression) {\n        this.type = type;\n        this.index = index;\n        this.input = input;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?At {\n        if (args.length !== 3)\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n\n        const index = context.parse(args[1], 1, NumberType);\n        const input = context.parse(args[2], 2, array(context.expectedType || ValueType));\n\n        if (!index || !input) return null;\n\n        const t: ArrayType = (input.type: any);\n        return new At(t.itemType, index, input);\n    }\n\n    evaluate(ctx: EvaluationContext): Value {\n        const index = ((this.index.evaluate(ctx): any): number);\n        const array = ((this.input.evaluate(ctx): any): Array<Value>);\n\n        if (index < 0) {\n            throw new RuntimeError(`Array index out of bounds: ${index} < 0.`);\n        }\n\n        if (index >= array.length) {\n            throw new RuntimeError(`Array index out of bounds: ${index} > ${array.length - 1}.`);\n        }\n\n        if (index !== Math.floor(index)) {\n            throw new RuntimeError(`Array index must be an integer, but found ${index} instead.`);\n        }\n\n        return array[index];\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.index);\n        fn(this.input);\n    }\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        return [\"at\", this.index.serialize(), this.input.serialize()];\n    }\n}\n\nexport default At;\n", "// @flow\n\nimport {BooleanType, StringType, ValueType, NullType, toString, NumberType, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nclass In implements Expression {\n    type: Type;\n    needle: Expression;\n    haystack: Expression;\n\n    constructor(needle: Expression, haystack: Expression) {\n        this.type = BooleanType;\n        this.needle = needle;\n        this.haystack = haystack;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?In {\n        if (args.length !== 3) {\n            return context.error(`Expected 2 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const needle = context.parse(args[1], 1, ValueType);\n\n        const haystack = context.parse(args[2], 2, ValueType);\n\n        if (!needle || !haystack) return null;\n\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${toString(needle.type)} instead`);\n        }\n\n        return new In(needle, haystack);\n    }\n\n    evaluate(ctx: EvaluationContext): boolean {\n        const needle = (this.needle.evaluate(ctx): any);\n        const haystack = (this.haystack.evaluate(ctx): any);\n\n        if (haystack == null) return false;\n\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${toString(typeOf(needle))} instead.`);\n        }\n\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${toString(typeOf(haystack))} instead.`);\n        }\n\n        return haystack.indexOf(needle) >= 0;\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.needle);\n        fn(this.haystack);\n    }\n\n    outputDefined(): boolean {\n        return true;\n    }\n\n    serialize(): SerializedExpression {\n        return [\"in\", this.needle.serialize(), this.haystack.serialize()];\n    }\n}\n\nexport default In;\n", "// @flow\n\nimport {BooleanType, StringType, ValueType, NullType, toString, NumberType, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nclass IndexOf implements Expression {\n    type: Type;\n    needle: Expression;\n    haystack: Expression;\n    fromIndex: ?Expression;\n\n    constructor(needle: Expression, haystack: Expression, fromIndex?: Expression) {\n        this.type = NumberType;\n        this.needle = needle;\n        this.haystack = haystack;\n        this.fromIndex = fromIndex;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?IndexOf {\n        if (args.length <= 2 ||  args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const needle = context.parse(args[1], 1, ValueType);\n\n        const haystack = context.parse(args[2], 2, ValueType);\n\n        if (!needle || !haystack) return null;\n        if (!isValidType(needle.type, [BooleanType, StringType, NumberType, NullType, ValueType])) {\n            return context.error(`Expected first argument to be of type boolean, string, number or null, but found ${toString(needle.type)} instead`);\n        }\n\n        if (args.length === 4) {\n            const fromIndex = context.parse(args[3], 3, NumberType);\n            if (!fromIndex) return null;\n            return new IndexOf(needle, haystack, fromIndex);\n        } else {\n            return new IndexOf(needle, haystack);\n        }\n    }\n\n    evaluate(ctx: EvaluationContext): any {\n        const needle = (this.needle.evaluate(ctx): any);\n        const haystack = (this.haystack.evaluate(ctx): any);\n\n        if (!isValidNativeType(needle, ['boolean', 'string', 'number', 'null'])) {\n            throw new RuntimeError(`Expected first argument to be of type boolean, string, number or null, but found ${toString(typeOf(needle))} instead.`);\n        }\n\n        if (!isValidNativeType(haystack, ['string', 'array'])) {\n            throw new RuntimeError(`Expected second argument to be of type array or string, but found ${toString(typeOf(haystack))} instead.`);\n        }\n\n        if (this.fromIndex) {\n            const fromIndex = (this.fromIndex.evaluate(ctx): number);\n            return haystack.indexOf(needle, fromIndex);\n        }\n\n        return haystack.indexOf(needle);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.needle);\n        fn(this.haystack);\n        if (this.fromIndex) {\n            fn(this.fromIndex);\n        }\n    }\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        if (this.fromIndex != null && this.fromIndex !== undefined) {\n            const fromIndex = this.fromIndex.serialize();\n            return [\"index-of\", this.needle.serialize(), this.haystack.serialize(), fromIndex];\n        }\n        return [\"index-of\", this.needle.serialize(), this.haystack.serialize()];\n    }\n}\n\nexport default IndexOf;\n", "// @flow\n\nimport assert from 'assert';\n\nimport {typeOf} from '../values.js';\nimport {ValueType, type Type} from '../types.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\n\n// Map input label values to output expression index\ntype Cases = {[number | string]: number};\n\nclass Match implements Expression {\n    type: Type;\n    inputType: Type;\n\n    input: Expression;\n    cases: Cases;\n    outputs: Array<Expression>;\n    otherwise: Expression;\n\n    constructor(inputType: Type, outputType: Type, input: Expression, cases: Cases, outputs: Array<Expression>, otherwise: Expression) {\n        this.inputType = inputType;\n        this.type = outputType;\n        this.input = input;\n        this.cases = cases;\n        this.outputs = outputs;\n        this.otherwise = otherwise;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Match {\n        if (args.length < 5)\n            return context.error(`Expected at least 4 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 1)\n            return context.error(`Expected an even number of arguments.`);\n\n        let inputType;\n        let outputType;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n        const cases = {};\n        const outputs = [];\n        for (let i = 2; i < args.length - 1; i += 2) {\n            let labels = args[i];\n            const value = args[i + 1];\n\n            if (!Array.isArray(labels)) {\n                labels = [labels];\n            }\n\n            const labelContext = context.concat(i);\n            if (labels.length === 0) {\n                return labelContext.error('Expected at least one branch label.');\n            }\n\n            for (const label of labels) {\n                if (typeof label !== 'number' && typeof label !== 'string') {\n                    return labelContext.error(`Branch labels must be numbers or strings.`);\n                } else if (typeof label === 'number' && Math.abs(label) > Number.MAX_SAFE_INTEGER) {\n                    return labelContext.error(`Branch labels must be integers no larger than ${Number.MAX_SAFE_INTEGER}.`);\n\n                } else if (typeof label === 'number' && Math.floor(label) !== label) {\n                    return labelContext.error(`Numeric branch labels must be integer values.`);\n\n                } else if (!inputType) {\n                    inputType = typeOf(label);\n                } else if (labelContext.checkSubtype(inputType, typeOf(label))) {\n                    return null;\n                }\n\n                if (typeof cases[String(label)] !== 'undefined') {\n                    return labelContext.error('Branch labels must be unique.');\n                }\n\n                cases[String(label)] = outputs.length;\n            }\n\n            const result = context.parse(value, i, outputType);\n            if (!result) return null;\n            outputType = outputType || result.type;\n            outputs.push(result);\n        }\n\n        const input = context.parse(args[1], 1, ValueType);\n        if (!input) return null;\n\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise) return null;\n\n        assert(inputType && outputType);\n\n        if (input.type.kind !== 'value' && context.concat(1).checkSubtype((inputType: any), input.type)) {\n            return null;\n        }\n\n        return new Match((inputType: any), (outputType: any), input, cases, outputs, otherwise);\n    }\n\n    evaluate(ctx: EvaluationContext): any {\n        const input = (this.input.evaluate(ctx): any);\n        const output = (typeOf(input) === this.inputType && this.outputs[this.cases[input]]) || this.otherwise;\n        return output.evaluate(ctx);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n        this.outputs.forEach(fn);\n        fn(this.otherwise);\n    }\n\n    outputDefined(): boolean {\n        return this.outputs.every(out => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n\n    serialize(): SerializedExpression {\n        const serialized = [\"match\", this.input.serialize()];\n\n        // Sort so serialization has an arbitrary defined order, even though\n        // branch order doesn't affect evaluation\n        const sortedLabels = Object.keys(this.cases).sort();\n\n        // Group branches by unique match expression to support condensed\n        // serializations of the form [case1, case2, ...] -> matchExpression\n        const groupedByOutput: Array<[number, Array<number | string>]> = [];\n        const outputLookup: {[index: number]: number} = {}; // lookup index into groupedByOutput for a given output expression\n        for (const label of sortedLabels) {\n            const outputIndex = outputLookup[this.cases[label]];\n            if (outputIndex === undefined) {\n                // First time seeing this output, add it to the end of the grouped list\n                outputLookup[this.cases[label]] = groupedByOutput.length;\n                groupedByOutput.push([this.cases[label], [label]]);\n            } else {\n                // We've seen this expression before, add the label to that output's group\n                groupedByOutput[outputIndex][1].push(label);\n            }\n        }\n\n        const coerceLabel = (label) => this.inputType.kind === 'number' ? Number(label) : label;\n\n        for (const [outputIndex, labels] of groupedByOutput) {\n            if (labels.length === 1) {\n                // Only a single label matches this output expression\n                serialized.push(coerceLabel(labels[0]));\n            } else {\n                // Array of literal labels pointing to this output expression\n                serialized.push(labels.map(coerceLabel));\n            }\n            serialized.push(this.outputs[outputIndex].serialize());\n        }\n        serialized.push(this.otherwise.serialize());\n        return serialized;\n    }\n}\n\nexport default Match;\n", "// @flow\n\nimport assert from 'assert';\n\nimport {BooleanType} from '../types.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\ntype Branches = Array<[Expression, Expression]>;\n\nclass Case implements Expression {\n    type: Type;\n\n    branches: Branches;\n    otherwise: Expression;\n\n    constructor(type: Type, branches: Branches, otherwise: Expression) {\n        this.type = type;\n        this.branches = branches;\n        this.otherwise = otherwise;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Case {\n        if (args.length < 4)\n            return context.error(`Expected at least 3 arguments, but found only ${args.length - 1}.`);\n        if (args.length % 2 !== 0)\n            return context.error(`Expected an odd number of arguments.`);\n\n        let outputType: ?Type;\n        if (context.expectedType && context.expectedType.kind !== 'value') {\n            outputType = context.expectedType;\n        }\n\n        const branches = [];\n        for (let i = 1; i < args.length - 1; i += 2) {\n            const test = context.parse(args[i], i, BooleanType);\n            if (!test) return null;\n\n            const result = context.parse(args[i + 1], i + 1, outputType);\n            if (!result) return null;\n\n            branches.push([test, result]);\n\n            outputType = outputType || result.type;\n        }\n\n        const otherwise = context.parse(args[args.length - 1], args.length - 1, outputType);\n        if (!otherwise) return null;\n\n        assert(outputType);\n        return new Case((outputType: any), branches, otherwise);\n    }\n\n    evaluate(ctx: EvaluationContext): any {\n        for (const [test, expression] of this.branches) {\n            if (test.evaluate(ctx)) {\n                return expression.evaluate(ctx);\n            }\n        }\n        return this.otherwise.evaluate(ctx);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        for (const [test, expression] of this.branches) {\n            fn(test);\n            fn(expression);\n        }\n        fn(this.otherwise);\n    }\n\n    outputDefined(): boolean {\n        return this.branches.every(([_, out]) => out.outputDefined()) && this.otherwise.outputDefined();\n    }\n\n    serialize(): SerializedExpression {\n        const serialized = [\"case\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Case;\n", "// @flow\n\nimport {ValueType, NumberType, StringType, array, toString, isValidType, isValidNativeType} from '../types.js';\nimport RuntimeError from '../runtime_error.js';\nimport {typeOf} from '../values.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nclass Slice implements Expression {\n    type: Type;\n    input: Expression;\n    beginIndex: Expression;\n    endIndex: ?Expression;\n\n    constructor(type: Type, input: Expression, beginIndex: Expression, endIndex?: Expression) {\n        this.type = type;\n        this.input = input;\n        this.beginIndex = beginIndex;\n        this.endIndex = endIndex;\n\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Slice {\n        if (args.length <= 2 ||  args.length >= 5) {\n            return context.error(`Expected 3 or 4 arguments, but found ${args.length - 1} instead.`);\n        }\n\n        const input = context.parse(args[1], 1, ValueType);\n        const beginIndex = context.parse(args[2], 2, NumberType);\n\n        if (!input || !beginIndex) return null;\n\n        if (!isValidType(input.type, [array(ValueType), StringType, ValueType])) {\n            return context.error(`Expected first argument to be of type array or string, but found ${toString(input.type)} instead`);\n        }\n\n        if (args.length === 4) {\n            const endIndex = context.parse(args[3], 3, NumberType);\n            if (!endIndex) return null;\n            return new Slice(input.type, input, beginIndex, endIndex);\n        } else {\n            return new Slice(input.type, input, beginIndex);\n        }\n    }\n\n    evaluate(ctx: EvaluationContext): any {\n        const input = (this.input.evaluate(ctx): any);\n        const beginIndex = (this.beginIndex.evaluate(ctx): number);\n\n        if (!isValidNativeType(input, ['string', 'array'])) {\n            throw new RuntimeError(`Expected first argument to be of type array or string, but found ${toString(typeOf(input))} instead.`);\n        }\n\n        if (this.endIndex) {\n            const endIndex = (this.endIndex.evaluate(ctx): number);\n            return input.slice(beginIndex, endIndex);\n        }\n\n        return input.slice(beginIndex);\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n        fn(this.beginIndex);\n        if (this.endIndex) {\n            fn(this.endIndex);\n        }\n    }\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        if (this.endIndex != null && this.endIndex !== undefined) {\n            const endIndex = this.endIndex.serialize();\n            return [\"slice\", this.input.serialize(), this.beginIndex.serialize(), endIndex];\n        }\n        return [\"slice\", this.input.serialize(), this.beginIndex.serialize()];\n    }\n}\n\nexport default Slice;\n", "// @flow\n\nimport {toString, ValueType, BooleanType, CollatorType} from '../types.js';\nimport Assertion from './assertion.js';\nimport {typeOf} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\n\nimport type {Expression, SerializedExpression, ExpressionRegistration} from '../expression.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type {Type} from '../types.js';\n\ntype ComparisonOperator = '==' | '!=' | '<' | '>' | '<=' | '>=' ;\n\nfunction isComparableType(op: ComparisonOperator, type: Type) {\n    if (op === '==' || op === '!=') {\n        // equality operator\n        return type.kind === 'boolean' ||\n            type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'null' ||\n            type.kind === 'value';\n    } else {\n        // ordering operator\n        return type.kind === 'string' ||\n            type.kind === 'number' ||\n            type.kind === 'value';\n    }\n}\n\nfunction eq(ctx: EvaluationContext, a: any, b: any): boolean { return a === b; }\nfunction neq(ctx: EvaluationContext, a: any, b: any): boolean { return a !== b; }\nfunction lt(ctx: EvaluationContext, a: any, b: any): boolean { return a < b; }\nfunction gt(ctx: EvaluationContext, a: any, b: any): boolean { return a > b; }\nfunction lteq(ctx: EvaluationContext, a: any, b: any): boolean { return a <= b; }\nfunction gteq(ctx: EvaluationContext, a: any, b: any): boolean { return a >= b; }\n\nfunction eqCollate(ctx: EvaluationContext, a: any, b: any, c: any): boolean { return c.compare(a, b) === 0; }\nfunction neqCollate(ctx: EvaluationContext, a: any, b: any, c: any): boolean { return !eqCollate(ctx, a, b, c); }\nfunction ltCollate(ctx: EvaluationContext, a: any, b: any, c: any): boolean { return c.compare(a, b) < 0; }\nfunction gtCollate(ctx: EvaluationContext, a: any, b: any, c: any): boolean { return c.compare(a, b) > 0; }\nfunction lteqCollate(ctx: EvaluationContext, a: any, b: any, c: any): boolean { return c.compare(a, b) <= 0; }\nfunction gteqCollate(ctx: EvaluationContext, a: any, b: any, c: any): boolean { return c.compare(a, b) >= 0; }\n\n/**\n * Special form for comparison operators, implementing the signatures:\n * - (T, T, ?Collator) => boolean\n * - (T, value, ?Collator) => boolean\n * - (value, T, ?Collator) => boolean\n *\n * For inequalities, T must be either value, string, or number. For ==/!=, it\n * can also be boolean or null.\n *\n * Equality semantics are equivalent to Javascript's strict equality (===/!==)\n * -- i.e., when the arguments' types don't match, == evaluates to false, != to\n * true.\n *\n * When types don't match in an ordering comparison, a runtime error is thrown.\n *\n * @private\n */\nfunction makeComparison(op: ComparisonOperator, compareBasic: (EvaluationContext, any, any) => boolean, compareWithCollator: (EvaluationContext, any, any, any) => boolean): ExpressionRegistration {\n    const isOrderComparison = op !== '==' && op !== '!=';\n\n    return class Comparison implements Expression {\n        type: Type;\n        lhs: Expression;\n        rhs: Expression;\n        collator: ?Expression;\n        hasUntypedArgument: boolean;\n\n        constructor(lhs: Expression, rhs: Expression, collator: ?Expression) {\n            this.type = BooleanType;\n            this.lhs = lhs;\n            this.rhs = rhs;\n            this.collator = collator;\n            this.hasUntypedArgument = lhs.type.kind === 'value' || rhs.type.kind === 'value';\n        }\n\n        static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n            if (args.length !== 3 && args.length !== 4)\n                return context.error(`Expected two or three arguments.`);\n\n            const op: ComparisonOperator = (args[0]: any);\n\n            let lhs = context.parse(args[1], 1, ValueType);\n            if (!lhs) return null;\n            if (!isComparableType(op, lhs.type)) {\n                return context.concat(1).error(`\"${op}\" comparisons are not supported for type '${toString(lhs.type)}'.`);\n            }\n            let rhs = context.parse(args[2], 2, ValueType);\n            if (!rhs) return null;\n            if (!isComparableType(op, rhs.type)) {\n                return context.concat(2).error(`\"${op}\" comparisons are not supported for type '${toString(rhs.type)}'.`);\n            }\n\n            if (\n                lhs.type.kind !== rhs.type.kind &&\n                lhs.type.kind !== 'value' &&\n                rhs.type.kind !== 'value'\n            ) {\n                return context.error(`Cannot compare types '${toString(lhs.type)}' and '${toString(rhs.type)}'.`);\n            }\n\n            if (isOrderComparison) {\n                // typing rules specific to less/greater than operators\n                if (lhs.type.kind === 'value' && rhs.type.kind !== 'value') {\n                    // (value, T)\n                    lhs = new Assertion(rhs.type, [lhs]);\n                } else if (lhs.type.kind !== 'value' && rhs.type.kind === 'value') {\n                    // (T, value)\n                    rhs = new Assertion(lhs.type, [rhs]);\n                }\n            }\n\n            let collator = null;\n            if (args.length === 4) {\n                if (\n                    lhs.type.kind !== 'string' &&\n                    rhs.type.kind !== 'string' &&\n                    lhs.type.kind !== 'value' &&\n                    rhs.type.kind !== 'value'\n                ) {\n                    return context.error(`Cannot use collator to compare non-string types.`);\n                }\n                collator = context.parse(args[3], 3, CollatorType);\n                if (!collator) return null;\n            }\n\n            return new Comparison(lhs, rhs, collator);\n        }\n\n        evaluate(ctx: EvaluationContext): boolean {\n            const lhs = this.lhs.evaluate(ctx);\n            const rhs = this.rhs.evaluate(ctx);\n\n            if (isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                // check that type is string or number, and equal\n                if (lt.kind !== rt.kind || !(lt.kind === 'string' || lt.kind === 'number')) {\n                    throw new RuntimeError(`Expected arguments for \"${op}\" to be (string, string) or (number, number), but found (${lt.kind}, ${rt.kind}) instead.`);\n                }\n            }\n\n            if (this.collator && !isOrderComparison && this.hasUntypedArgument) {\n                const lt = typeOf(lhs);\n                const rt = typeOf(rhs);\n                if (lt.kind !== 'string' || rt.kind !== 'string') {\n                    return compareBasic(ctx, lhs, rhs);\n                }\n            }\n\n            return this.collator ?\n                compareWithCollator(ctx, lhs, rhs, this.collator.evaluate(ctx)) :\n                compareBasic(ctx, lhs, rhs);\n        }\n\n        eachChild(fn: (_: Expression) => void) {\n            fn(this.lhs);\n            fn(this.rhs);\n            if (this.collator) {\n                fn(this.collator);\n            }\n        }\n\n        outputDefined(): boolean {\n            return true;\n        }\n\n        serialize(): SerializedExpression {\n            const serialized = [op];\n            this.eachChild(child => { serialized.push(child.serialize()); });\n            return serialized;\n        }\n    };\n}\n\nexport const Equals: $Call<typeof makeComparison, '==', typeof eq, typeof eqCollate> = makeComparison('==', eq, eqCollate);\nexport const NotEquals: $Call<typeof makeComparison, '!=', typeof neq, typeof neqCollate> = makeComparison('!=', neq, neqCollate);\nexport const LessThan: $Call<typeof makeComparison, '<', typeof lt, typeof ltCollate> = makeComparison('<', lt, ltCollate);\nexport const GreaterThan: $Call<typeof makeComparison, '>', typeof gt, typeof gtCollate> = makeComparison('>', gt, gtCollate);\nexport const LessThanOrEqual: $Call<typeof makeComparison, '<=', typeof lteq, typeof lteqCollate> = makeComparison('<=', lteq, lteqCollate);\nexport const GreaterThanOrEqual: $Call<typeof makeComparison, '>=', typeof gteq, typeof gteqCollate> = makeComparison('>=', gteq, gteqCollate);\n", "// @flow\n\nimport {StringType, NumberType} from '../types.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type {Type} from '../types.js';\n\ndeclare var Intl: {\n    NumberFormat: Class<Intl$NumberFormat>\n};\n\ndeclare class Intl$NumberFormat {\n    constructor (\n        locales?: string | string[],\n        options?: NumberFormatOptions\n    ): Intl$NumberFormat;\n\n    static (\n        locales?: string | string[],\n        options?: NumberFormatOptions\n    ): Intl$NumberFormat;\n\n    format(a: number): string;\n\n    resolvedOptions(): any;\n}\n\ntype NumberFormatOptions = {\n    style?: 'decimal' | 'currency' | 'percent' | 'unit';\n    currency?: null | string;\n    unit?: null | string;\n    minimumFractionDigits?: null | string;\n    maximumFractionDigits?: null | string;\n};\n\nexport default class NumberFormat implements Expression {\n    type: Type;\n    number: Expression;\n    locale: Expression | null;   // BCP 47 language tag\n    currency: Expression | null; // ISO 4217 currency code, required if style=currency\n    unit: Expression | null;     // Simple units sanctioned for use in ECMAScript, required if style=unit. https://tc39.es/proposal-unified-intl-numberformat/section6/locales-currencies-tz_proposed_out.html#sec-issanctionedsimpleunitidentifier\n    minFractionDigits: Expression | null; // Default 0\n    maxFractionDigits: Expression | null; // Default 3\n\n    constructor(number: Expression,\n                locale: Expression | null,\n                currency: Expression | null,\n                unit: Expression | null,\n                minFractionDigits: Expression | null,\n                maxFractionDigits: Expression | null) {\n        this.type = StringType;\n        this.number = number;\n        this.locale = locale;\n        this.currency = currency;\n        this.unit = unit;\n        this.minFractionDigits = minFractionDigits;\n        this.maxFractionDigits = maxFractionDigits;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Expression {\n        if (args.length !== 3)\n            return context.error(`Expected two arguments.`);\n\n        const number = context.parse(args[1], 1, NumberType);\n        if (!number) return null;\n\n        const options = (args[2]: any);\n        if (typeof options !== \"object\" || Array.isArray(options))\n            return context.error(`NumberFormat options argument must be an object.`);\n\n        let locale = null;\n        if (options['locale']) {\n            locale = context.parse(options['locale'], 1, StringType);\n            if (!locale) return null;\n        }\n\n        let currency = null;\n        if (options['currency']) {\n            currency = context.parse(options['currency'], 1, StringType);\n            if (!currency) return null;\n        }\n\n        let unit = null;\n        if (options['unit']) {\n            unit = context.parse(options['unit'], 1, StringType);\n            if (!unit) return null;\n        }\n\n        let minFractionDigits = null;\n        if (options['min-fraction-digits']) {\n            minFractionDigits = context.parse(options['min-fraction-digits'], 1, NumberType);\n            if (!minFractionDigits) return null;\n        }\n\n        let maxFractionDigits = null;\n        if (options['max-fraction-digits']) {\n            maxFractionDigits = context.parse(options['max-fraction-digits'], 1, NumberType);\n            if (!maxFractionDigits) return null;\n        }\n\n        return new NumberFormat(number, locale, currency, unit, minFractionDigits, maxFractionDigits);\n    }\n\n    evaluate(ctx: EvaluationContext): string {\n        return new Intl.NumberFormat(this.locale ? this.locale.evaluate(ctx) : [],\n            {\n                style:\n                    (this.currency && \"currency\") ||\n                    (this.unit && \"unit\") ||\n                    \"decimal\",\n                currency: this.currency ? this.currency.evaluate(ctx) : undefined,\n                unit: this.unit ? this.unit.evaluate(ctx) : undefined,\n                minimumFractionDigits: this.minFractionDigits ? this.minFractionDigits.evaluate(ctx) : undefined,\n                maximumFractionDigits: this.maxFractionDigits ? this.maxFractionDigits.evaluate(ctx) : undefined,\n            }).format(this.number.evaluate(ctx));\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.number);\n        if (this.locale) {\n            fn(this.locale);\n        }\n        if (this.currency) {\n            fn(this.currency);\n        }\n        if (this.unit) {\n            fn(this.unit);\n        }\n        if (this.minFractionDigits) {\n            fn(this.minFractionDigits);\n        }\n        if (this.maxFractionDigits) {\n            fn(this.maxFractionDigits);\n        }\n    }\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        const options = {};\n        if (this.locale) {\n            options['locale'] = this.locale.serialize();\n        }\n        if (this.currency) {\n            options['currency'] = this.currency.serialize();\n        }\n        if (this.unit) {\n            options['unit'] = this.unit.serialize();\n        }\n        if (this.minFractionDigits) {\n            options['min-fraction-digits'] = this.minFractionDigits.serialize();\n        }\n        if (this.maxFractionDigits) {\n            options['max-fraction-digits'] = this.maxFractionDigits.serialize();\n        }\n        return [\"number-format\", this.number.serialize(), options];\n    }\n}\n", "// @flow\n\nimport {NumberType, toString} from '../types.js';\n\nimport {typeOf} from '../values.js';\nimport RuntimeError from '../runtime_error.js';\n\nimport type {Expression, SerializedExpression} from '../expression.js';\nimport type ParsingContext from '../parsing_context.js';\nimport type EvaluationContext from '../evaluation_context.js';\nimport type {Type} from '../types.js';\n\nclass Length implements Expression {\n    type: Type;\n    input: Expression;\n\n    constructor(input: Expression) {\n        this.type = NumberType;\n        this.input = input;\n    }\n\n    static parse(args: $ReadOnlyArray<mixed>, context: ParsingContext): ?Length {\n        if (args.length !== 2)\n            return context.error(`Expected 1 argument, but found ${args.length - 1} instead.`);\n\n        const input = context.parse(args[1], 1);\n        if (!input) return null;\n\n        if (input.type.kind !== 'array' && input.type.kind !== 'string' && input.type.kind !== 'value')\n            return context.error(`Expected argument of type string or array, but found ${toString(input.type)} instead.`);\n\n        return new Length(input);\n    }\n\n    evaluate(ctx: EvaluationContext): any | number {\n        const input = this.input.evaluate(ctx);\n        if (typeof input === 'string') {\n            return input.length;\n        } else if (Array.isArray(input)) {\n            return input.length;\n        } else {\n            throw new RuntimeError(`Expected value to be of type string or array, but found ${toString(typeOf(input))} instead.`);\n        }\n    }\n\n    eachChild(fn: (_: Expression) => void) {\n        fn(this.input);\n    }\n\n    outputDefined(): boolean {\n        return false;\n    }\n\n    serialize(): SerializedExpression {\n        const serialized = [\"length\"];\n        this.eachChild(child => { serialized.push(child.serialize()); });\n        return serialized;\n    }\n}\n\nexport default Length;\n", "// @flow\n\nimport {\n    type Type,\n    NumberType,\n    StringType,\n    BooleanType,\n    ColorType,\n    ObjectType,\n    ValueType,\n    ErrorType,\n    CollatorType,\n    array,\n    toString as typeToString\n} from '../types.js';\n\nimport {typeOf, Color, validateRGBA, toString as valueToString} from '../values.js';\nimport CompoundExpression from '../compound_expression.js';\nimport RuntimeError from '../runtime_error.js';\nimport Let from './let.js';\nimport Var from './var.js';\nimport Literal from './literal.js';\nimport Assertion from './assertion.js';\nimport Coercion from './coercion.js';\nimport At from './at.js';\nimport In from './in.js';\nimport IndexOf from './index_of.js';\nimport Match from './match.js';\nimport Case from './case.js';\nimport Slice from './slice.js';\nimport Step from './step.js';\nimport Interpolate from './interpolate.js';\nimport Coalesce from './coalesce.js';\nimport {\n    Equals,\n    NotEquals,\n    LessThan,\n    GreaterThan,\n    LessThanOrEqual,\n    GreaterThanOrEqual\n} from './comparison.js';\nimport CollatorExpression from './collator.js';\nimport NumberFormat from './number_format.js';\nimport FormatExpression from './format.js';\nimport ImageExpression from './image.js';\nimport Length from './length.js';\nimport Within from './within.js';\n\nimport type {Varargs} from '../compound_expression.js';\nimport type {ExpressionRegistry} from '../expression.js';\n\nconst expressions: ExpressionRegistry = {\n    // special forms\n    '==': Equals,\n    '!=': NotEquals,\n    '>': GreaterThan,\n    '<': LessThan,\n    '>=': GreaterThanOrEqual,\n    '<=': LessThanOrEqual,\n    'array': Assertion,\n    'at': At,\n    'boolean': Assertion,\n    'case': Case,\n    'coalesce': Coalesce,\n    'collator': CollatorExpression,\n    'format': FormatExpression,\n    'image': ImageExpression,\n    'in': In,\n    'index-of': IndexOf,\n    'interpolate': Interpolate,\n    'interpolate-hcl': Interpolate,\n    'interpolate-lab': Interpolate,\n    'length': Length,\n    'let': Let,\n    'literal': Literal,\n    'match': Match,\n    'number': Assertion,\n    'number-format': NumberFormat,\n    'object': Assertion,\n    'slice': Slice,\n    'step': Step,\n    'string': Assertion,\n    'to-boolean': Coercion,\n    'to-color': Coercion,\n    'to-number': Coercion,\n    'to-string': Coercion,\n    'var': Var,\n    'within': Within\n};\n\nfunction rgba(ctx, [r, g, b, a]) {\n    r = r.evaluate(ctx);\n    g = g.evaluate(ctx);\n    b = b.evaluate(ctx);\n    const alpha = a ? a.evaluate(ctx) : 1;\n    const error = validateRGBA(r, g, b, alpha);\n    if (error) throw new RuntimeError(error);\n    return new Color(r / 255 * alpha, g / 255 * alpha, b / 255 * alpha, alpha);\n}\n\nfunction has(key, obj) {\n    return key in obj;\n}\n\nfunction get(key, obj) {\n    const v = obj[key];\n    return typeof v === 'undefined' ? null : v;\n}\n\nfunction binarySearch(v, a, i, j) {\n    while (i <= j) {\n        const m = (i + j) >> 1;\n        if (a[m] === v)\n            return true;\n        if (a[m] > v)\n            j = m - 1;\n        else\n            i = m + 1;\n    }\n    return false;\n}\n\nfunction varargs(type: Type): Varargs {\n    return {type};\n}\n\nCompoundExpression.register(expressions, {\n    'error': [\n        ErrorType,\n        [StringType],\n        (ctx, [v]) => { throw new RuntimeError(v.evaluate(ctx)); }\n    ],\n    'typeof': [\n        StringType,\n        [ValueType],\n        (ctx, [v]) => typeToString(typeOf(v.evaluate(ctx)))\n    ],\n    'to-rgba': [\n        array(NumberType, 4),\n        [ColorType],\n        (ctx, [v]) => {\n            return v.evaluate(ctx).toArray();\n        }\n    ],\n    'rgb': [\n        ColorType,\n        [NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'rgba': [\n        ColorType,\n        [NumberType, NumberType, NumberType, NumberType],\n        rgba\n    ],\n    'has': {\n        type: BooleanType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => has(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => has(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'get': {\n        type: ValueType,\n        overloads: [\n            [\n                [StringType],\n                (ctx, [key]) => get(key.evaluate(ctx), ctx.properties())\n            ], [\n                [StringType, ObjectType],\n                (ctx, [key, obj]) => get(key.evaluate(ctx), obj.evaluate(ctx))\n            ]\n        ]\n    },\n    'feature-state': [\n        ValueType,\n        [StringType],\n        (ctx, [key]) => get(key.evaluate(ctx), ctx.featureState || {})\n    ],\n    'properties': [\n        ObjectType,\n        [],\n        (ctx) => ctx.properties()\n    ],\n    'geometry-type': [\n        StringType,\n        [],\n        (ctx) => ctx.geometryType()\n    ],\n    'id': [\n        ValueType,\n        [],\n        (ctx) => ctx.id()\n    ],\n    'zoom': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.zoom\n    ],\n    'pitch': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.pitch || 0\n    ],\n    'distance-from-center': [\n        NumberType,\n        [],\n        (ctx) => ctx.distanceFromCenter()\n    ],\n    'heatmap-density': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.heatmapDensity || 0\n    ],\n    'line-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.lineProgress || 0\n    ],\n    'sky-radial-progress': [\n        NumberType,\n        [],\n        (ctx) => ctx.globals.skyRadialProgress || 0\n    ],\n    'accumulated': [\n        ValueType,\n        [],\n        (ctx) => ctx.globals.accumulated === undefined ? null : ctx.globals.accumulated\n    ],\n    '+': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 0;\n            for (const arg of args) {\n                result += arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '*': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => {\n            let result = 1;\n            for (const arg of args) {\n                result *= arg.evaluate(ctx);\n            }\n            return result;\n        }\n    ],\n    '-': {\n        type: NumberType,\n        overloads: [\n            [\n                [NumberType, NumberType],\n                (ctx, [a, b]) => a.evaluate(ctx) - b.evaluate(ctx)\n            ], [\n                [NumberType],\n                (ctx, [a]) => -a.evaluate(ctx)\n            ]\n        ]\n    },\n    '/': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) / b.evaluate(ctx)\n    ],\n    '%': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [a, b]) => a.evaluate(ctx) % b.evaluate(ctx)\n    ],\n    'ln2': [\n        NumberType,\n        [],\n        () => Math.LN2\n    ],\n    'pi': [\n        NumberType,\n        [],\n        () => Math.PI\n    ],\n    'e': [\n        NumberType,\n        [],\n        () => Math.E\n    ],\n    '^': [\n        NumberType,\n        [NumberType, NumberType],\n        (ctx, [b, e]) => Math.pow(b.evaluate(ctx), e.evaluate(ctx))\n    ],\n    'sqrt': [\n        NumberType,\n        [NumberType],\n        (ctx, [x]) => Math.sqrt(x.evaluate(ctx))\n    ],\n    'log10': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN10\n    ],\n    'ln': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx))\n    ],\n    'log2': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.log(n.evaluate(ctx)) / Math.LN2\n    ],\n    'sin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.sin(n.evaluate(ctx))\n    ],\n    'cos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.cos(n.evaluate(ctx))\n    ],\n    'tan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.tan(n.evaluate(ctx))\n    ],\n    'asin': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.asin(n.evaluate(ctx))\n    ],\n    'acos': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.acos(n.evaluate(ctx))\n    ],\n    'atan': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.atan(n.evaluate(ctx))\n    ],\n    'min': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.min(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'max': [\n        NumberType,\n        varargs(NumberType),\n        (ctx, args) => Math.max(...args.map(arg => arg.evaluate(ctx)))\n    ],\n    'abs': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.abs(n.evaluate(ctx))\n    ],\n    'round': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => {\n            const v = n.evaluate(ctx);\n            // Javascript's Math.round() rounds towards +Infinity for halfway\n            // values, even when they're negative. It's more common to round\n            // away from 0 (e.g., this is what python and C++ do)\n            return v < 0 ? -Math.round(-v) : Math.round(v);\n        }\n    ],\n    'floor': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.floor(n.evaluate(ctx))\n    ],\n    'ceil': [\n        NumberType,\n        [NumberType],\n        (ctx, [n]) => Math.ceil(n.evaluate(ctx))\n    ],\n    'filter-==': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => ctx.properties()[(k: any).value] === (v: any).value\n    ],\n    'filter-id-==': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => ctx.id() === (v: any).value\n    ],\n    'filter-type-==': [\n        BooleanType,\n        [StringType],\n        (ctx, [v]) => ctx.geometryType() === (v: any).value\n    ],\n    'filter-<': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k: any).value];\n            const b = (v: any).value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter-id-<': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v: any).value;\n            return typeof a === typeof b && a < b;\n        }\n    ],\n    'filter->': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k: any).value];\n            const b = (v: any).value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-id->': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v: any).value;\n            return typeof a === typeof b && a > b;\n        }\n    ],\n    'filter-<=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k: any).value];\n            const b = (v: any).value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter-id-<=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v: any).value;\n            return typeof a === typeof b && a <= b;\n        }\n    ],\n    'filter->=': [\n        BooleanType,\n        [StringType, ValueType],\n        (ctx, [k, v]) => {\n            const a = ctx.properties()[(k: any).value];\n            const b = (v: any).value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-id->=': [\n        BooleanType,\n        [ValueType],\n        (ctx, [v]) => {\n            const a = ctx.id();\n            const b = (v: any).value;\n            return typeof a === typeof b && a >= b;\n        }\n    ],\n    'filter-has': [\n        BooleanType,\n        [ValueType],\n        (ctx, [k]) => (k: any).value in ctx.properties()\n    ],\n    'filter-has-id': [\n        BooleanType,\n        [],\n        (ctx) => (ctx.id() !== null && ctx.id() !== undefined)\n    ],\n    'filter-type-in': [\n        BooleanType,\n        [array(StringType)],\n        (ctx, [v]) => (v: any).value.indexOf(ctx.geometryType()) >= 0\n    ],\n    'filter-id-in': [\n        BooleanType,\n        [array(ValueType)],\n        (ctx, [v]) => (v: any).value.indexOf(ctx.id()) >= 0\n    ],\n    'filter-in-small': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is an array literal\n        (ctx, [k, v]) => (v: any).value.indexOf(ctx.properties()[(k: any).value]) >= 0\n    ],\n    'filter-in-large': [\n        BooleanType,\n        [StringType, array(ValueType)],\n        // assumes v is a array literal with values sorted in ascending order and of a single type\n        (ctx, [k, v]) => binarySearch(ctx.properties()[(k: any).value], (v: any).value, 0, (v: any).value.length - 1)\n    ],\n    'all': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) && b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (!arg.evaluate(ctx))\n                            return false;\n                    }\n                    return true;\n                }\n            ]\n        ]\n    },\n    'any': {\n        type: BooleanType,\n        overloads: [\n            [\n                [BooleanType, BooleanType],\n                (ctx, [a, b]) => a.evaluate(ctx) || b.evaluate(ctx)\n            ],\n            [\n                varargs(BooleanType),\n                (ctx, args) => {\n                    for (const arg of args) {\n                        if (arg.evaluate(ctx))\n                            return true;\n                    }\n                    return false;\n                }\n            ]\n        ]\n    },\n    '!': [\n        BooleanType,\n        [BooleanType],\n        (ctx, [b]) => !b.evaluate(ctx)\n    ],\n    'is-supported-script': [\n        BooleanType,\n        [StringType],\n        // At parse time this will always return true, so we need to exclude this expression with isGlobalPropertyConstant\n        (ctx, [s]) => {\n            const isSupportedScript = ctx.globals && ctx.globals.isSupportedScript;\n            if (isSupportedScript) {\n                return isSupportedScript(s.evaluate(ctx));\n            }\n            return true;\n        }\n    ],\n    'upcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toUpperCase()\n    ],\n    'downcase': [\n        StringType,\n        [StringType],\n        (ctx, [s]) => s.evaluate(ctx).toLowerCase()\n    ],\n    'concat': [\n        StringType,\n        varargs(ValueType),\n        (ctx, args) => args.map(arg => valueToString(arg.evaluate(ctx))).join('')\n    ],\n    'resolved-locale': [\n        StringType,\n        [CollatorType],\n        (ctx, [collator]) => collator.evaluate(ctx).resolvedLocale()\n    ]\n});\n\nexport default expressions;\n", "// @flow\n\n/**\n * A type used for returning and propagating errors. The first element of the union\n * represents success and contains a value, and the second represents an error and\n * contains an error value.\n * @private\n */\nexport type Result<T, E> =\n    | {| result: 'success', value: T |}\n    | {| result: 'error', value: E |};\n\nexport function success<T, E>(value: T): Result<T, E> {\n    return {result: 'success', value};\n}\n\nexport function error<T, E>(value: E): Result<T, E> {\n    return {result: 'error', value};\n}\n", "// @flow\n\nimport type {StylePropertySpecification} from '../style-spec.js';\n\nexport function supportsPropertyExpression(spec: StylePropertySpecification): boolean {\n    return spec['property-type'] === 'data-driven';\n}\n\nexport function supportsZoomExpression(spec: StylePropertySpecification): boolean {\n    return !!spec.expression && spec.expression.parameters.indexOf('zoom') > -1;\n}\n\nexport function supportsInterpolation(spec: StylePropertySpecification): boolean {\n    return !!spec.expression && spec.expression.interpolated;\n}\n", "// @flow\n\nexport default function getType(val: mixed): string {\n    if (val instanceof Number) {\n        return 'number';\n    } else if (val instanceof String) {\n        return 'string';\n    } else if (val instanceof Boolean) {\n        return 'boolean';\n    } else if (Array.isArray(val)) {\n        return 'array';\n    } else if (val === null) {\n        return 'null';\n    } else {\n        return typeof val;\n    }\n}\n", "\nimport * as colorSpaces from '../util/color_spaces.js';\nimport Color from '../util/color.js';\nimport extend from '../util/extend.js';\nimport getType from '../util/get_type.js';\nimport * as interpolate from '../util/interpolate.js';\nimport Interpolate from '../expression/definitions/interpolate.js';\nimport Formatted from '../expression/types/formatted.js';\nimport ResolvedImage from '../expression/types/resolved_image.js';\nimport {supportsInterpolation} from '../util/properties.js';\nimport {findStopLessThanOrEqualTo} from '../expression/stops.js';\n\nexport function isFunction(value) {\n    return typeof value === 'object' && value !== null && !Array.isArray(value);\n}\n\nfunction identityFunction(x) {\n    return x;\n}\n\nexport function createFunction(parameters, propertySpec) {\n    const isColor = propertySpec.type === 'color';\n    const zoomAndFeatureDependent = parameters.stops && typeof parameters.stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n    const type = parameters.type || (supportsInterpolation(propertySpec) ? 'exponential' : 'interval');\n\n    if (isColor) {\n        parameters = extend({}, parameters);\n\n        if (parameters.stops) {\n            parameters.stops = parameters.stops.map((stop) => {\n                return [stop[0], Color.parse(stop[1])];\n            });\n        }\n\n        if (parameters.default) {\n            parameters.default = Color.parse(parameters.default);\n        } else {\n            parameters.default = Color.parse(propertySpec.default);\n        }\n    }\n\n    if (parameters.colorSpace && parameters.colorSpace !== 'rgb' && !colorSpaces[parameters.colorSpace]) { // eslint-disable-line import/namespace\n        throw new Error(`Unknown color space: ${parameters.colorSpace}`);\n    }\n\n    let innerFun;\n    let hashedStops;\n    let categoricalKeyType;\n    if (type === 'exponential') {\n        innerFun = evaluateExponentialFunction;\n    } else if (type === 'interval') {\n        innerFun = evaluateIntervalFunction;\n    } else if (type === 'categorical') {\n        innerFun = evaluateCategoricalFunction;\n\n        // For categorical functions, generate an Object as a hashmap of the stops for fast searching\n        hashedStops = Object.create(null);\n        for (const stop of parameters.stops) {\n            hashedStops[stop[0]] = stop[1];\n        }\n\n        // Infer key type based on first stop key-- used to encforce strict type checking later\n        categoricalKeyType = typeof parameters.stops[0][0];\n\n    } else if (type === 'identity') {\n        innerFun = evaluateIdentityFunction;\n    } else {\n        throw new Error(`Unknown function type \"${type}\"`);\n    }\n\n    if (zoomAndFeatureDependent) {\n        const featureFunctions = {};\n        const zoomStops = [];\n        for (let s = 0; s < parameters.stops.length; s++) {\n            const stop = parameters.stops[s];\n            const zoom = stop[0].zoom;\n            if (featureFunctions[zoom] === undefined) {\n                featureFunctions[zoom] = {\n                    zoom,\n                    type: parameters.type,\n                    property: parameters.property,\n                    default: parameters.default,\n                    stops: []\n                };\n                zoomStops.push(zoom);\n            }\n            featureFunctions[zoom].stops.push([stop[0].value, stop[1]]);\n        }\n\n        const featureFunctionStops = [];\n        for (const z of zoomStops) {\n            featureFunctionStops.push([featureFunctions[z].zoom, createFunction(featureFunctions[z], propertySpec)]);\n        }\n\n        const interpolationType = {name: 'linear'};\n        return {\n            kind: 'composite',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: featureFunctionStops.map(s => s[0]),\n            evaluate({zoom}, properties) {\n                return evaluateExponentialFunction({\n                    stops: featureFunctionStops,\n                    base: parameters.base\n                }, propertySpec, zoom).evaluate(zoom, properties);\n            }\n        };\n    } else if (zoomDependent) {\n        const interpolationType = type === 'exponential' ?\n            {name: 'exponential', base: parameters.base !== undefined ? parameters.base : 1} : null;\n        return {\n            kind: 'camera',\n            interpolationType,\n            interpolationFactor: Interpolate.interpolationFactor.bind(undefined, interpolationType),\n            zoomStops: parameters.stops.map(s => s[0]),\n            evaluate: ({zoom}) => innerFun(parameters, propertySpec, zoom, hashedStops, categoricalKeyType)\n        };\n    } else {\n        return {\n            kind: 'source',\n            evaluate(_, feature) {\n                const value = feature && feature.properties ? feature.properties[parameters.property] : undefined;\n                if (value === undefined) {\n                    return coalesce(parameters.default, propertySpec.default);\n                }\n                return innerFun(parameters, propertySpec, value, hashedStops, categoricalKeyType);\n            }\n        };\n    }\n}\n\nfunction coalesce(a, b, c) {\n    if (a !== undefined) return a;\n    if (b !== undefined) return b;\n    if (c !== undefined) return c;\n}\n\nfunction evaluateCategoricalFunction(parameters, propertySpec, input, hashedStops, keyType) {\n    const evaluated = typeof input === keyType ? hashedStops[input] : undefined; // Enforce strict typing on input\n    return coalesce(evaluated, parameters.default, propertySpec.default);\n}\n\nfunction evaluateIntervalFunction(parameters, propertySpec, input) {\n    // Edge cases\n    if (getType(input) !== 'number') return coalesce(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1) return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0]) return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0]) return parameters.stops[n - 1][1];\n\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n\n    return parameters.stops[index][1];\n}\n\nfunction evaluateExponentialFunction(parameters, propertySpec, input) {\n    const base = parameters.base !== undefined ? parameters.base : 1;\n\n    // Edge cases\n    if (getType(input) !== 'number') return coalesce(parameters.default, propertySpec.default);\n    const n = parameters.stops.length;\n    if (n === 1) return parameters.stops[0][1];\n    if (input <= parameters.stops[0][0]) return parameters.stops[0][1];\n    if (input >= parameters.stops[n - 1][0]) return parameters.stops[n - 1][1];\n\n    const index = findStopLessThanOrEqualTo(parameters.stops.map((stop) => stop[0]), input);\n    const t = interpolationFactor(\n        input, base,\n        parameters.stops[index][0],\n        parameters.stops[index + 1][0]);\n\n    const outputLower = parameters.stops[index][1];\n    const outputUpper = parameters.stops[index + 1][1];\n    let interp = interpolate[propertySpec.type] || identityFunction; // eslint-disable-line import/namespace\n\n    if (parameters.colorSpace && parameters.colorSpace !== 'rgb') {\n        const colorspace = colorSpaces[parameters.colorSpace]; // eslint-disable-line import/namespace\n        interp = (a, b) => colorspace.reverse(colorspace.interpolate(colorspace.forward(a), colorspace.forward(b), t));\n    }\n\n    if (typeof outputLower.evaluate === 'function') {\n        return {\n            evaluate(...args) {\n                const evaluatedLower = outputLower.evaluate.apply(undefined, args);\n                const evaluatedUpper = outputUpper.evaluate.apply(undefined, args);\n                // Special case for fill-outline-color, which has no spec default.\n                if (evaluatedLower === undefined || evaluatedUpper === undefined) {\n                    return undefined;\n                }\n                return interp(evaluatedLower, evaluatedUpper, t);\n            }\n        };\n    }\n\n    return interp(outputLower, outputUpper, t);\n}\n\nfunction evaluateIdentityFunction(parameters, propertySpec, input) {\n    if (propertySpec.type === 'color') {\n        input = Color.parse(input);\n    } else if (propertySpec.type === 'formatted') {\n        input = Formatted.fromString(input.toString());\n    } else if (propertySpec.type === 'resolvedImage') {\n        input = ResolvedImage.fromString(input.toString());\n    } else if (getType(input) !== propertySpec.type && (propertySpec.type !== 'enum' || !propertySpec.values[input])) {\n        input = undefined;\n    }\n    return coalesce(input, parameters.default, propertySpec.default);\n}\n\n/**\n * Returns a ratio that can be used to interpolate between exponential function\n * stops.\n *\n * How it works:\n * Two consecutive stop values define a (scaled and shifted) exponential\n * function `f(x) = a * base^x + b`, where `base` is the user-specified base,\n * and `a` and `b` are constants affording sufficient degrees of freedom to fit\n * the function to the given stops.\n *\n * Here's a bit of algebra that lets us compute `f(x)` directly from the stop\n * values without explicitly solving for `a` and `b`:\n *\n * First stop value: `f(x0) = y0 = a * base^x0 + b`\n * Second stop value: `f(x1) = y1 = a * base^x1 + b`\n * => `y1 - y0 = a(base^x1 - base^x0)`\n * => `a = (y1 - y0)/(base^x1 - base^x0)`\n *\n * Desired value: `f(x) = y = a * base^x + b`\n * => `f(x) = y0 + a * (base^x - base^x0)`\n *\n * From the above, we can replace the `a` in `a * (base^x - base^x0)` and do a\n * little algebra:\n * ```\n * a * (base^x - base^x0) = (y1 - y0)/(base^x1 - base^x0) * (base^x - base^x0)\n *                     = (y1 - y0) * (base^x - base^x0) / (base^x1 - base^x0)\n * ```\n *\n * If we let `(base^x - base^x0) / (base^x1 base^x0)`, then we have\n * `f(x) = y0 + (y1 - y0) * ratio`.  In other words, `ratio` may be treated as\n * an interpolation factor between the two stops' output values.\n *\n * (Note: a slightly different form for `ratio`,\n * `(base^(x-x0) - 1) / (base^(x1-x0) - 1) `, is equivalent, but requires fewer\n * expensive `Math.pow()` operations.)\n *\n * @private\n */\nfunction interpolationFactor(input, base, lowerValue, upperValue) {\n    const difference = upperValue - lowerValue;\n    const progress = input - lowerValue;\n\n    if (difference === 0) {\n        return 0;\n    } else if (base === 1) {\n        return progress / difference;\n    } else {\n        return (Math.pow(base, progress) - 1) / (Math.pow(base, difference) - 1);\n    }\n}\n", "// @flow\n\nimport assert from 'assert';\n\nimport extend from '../util/extend.js';\nimport ParsingError from './parsing_error.js';\nimport ParsingContext from './parsing_context.js';\nimport EvaluationContext from './evaluation_context.js';\nimport CompoundExpression from './compound_expression.js';\nimport Step from './definitions/step.js';\nimport Interpolate from './definitions/interpolate.js';\nimport Coalesce from './definitions/coalesce.js';\nimport Let from './definitions/let.js';\nimport definitions from './definitions/index.js';\nimport * as isConstant from './is_constant.js';\nimport RuntimeError from './runtime_error.js';\nimport {success, error} from '../util/result.js';\nimport {supportsPropertyExpression, supportsZoomExpression, supportsInterpolation} from '../util/properties.js';\n\nimport type {Type, EvaluationKind} from './types.js';\nimport type {Value} from './values.js';\nimport type {Expression} from './expression.js';\nimport type {StylePropertySpecification} from '../style-spec.js';\nimport type {Result} from '../util/result.js';\nimport type {InterpolationType} from './definitions/interpolate.js';\nimport type {PropertyValueSpecification} from '../types.js';\nimport type {FormattedSection} from './types/formatted.js';\nimport type Point from '@mapbox/point-geometry';\nimport type {CanonicalTileID} from '../../source/tile_id.js';\nimport type {FeatureDistanceData} from '../feature_filter/index.js';\n\nexport type Feature = {\n    +type: 1 | 2 | 3 | 'Unknown' | 'Point' | 'LineString' | 'Polygon',\n    +id?: number | null,\n    +properties: {[_: string]: any},\n    +patterns?: {[_: string]: string},\n    +geometry?: Array<Array<Point>>\n};\n\nexport type FeatureState = {[_: string]: any};\n\nexport type GlobalProperties = $ReadOnly<{\n    zoom: number,\n    pitch?: number,\n    heatmapDensity?: number,\n    lineProgress?: number,\n    skyRadialProgress?: number,\n    isSupportedScript?: (_: string) => boolean,\n    accumulated?: Value\n}>;\n\nexport class StyleExpression {\n    expression: Expression;\n\n    _evaluator: EvaluationContext;\n    _defaultValue: Value;\n    _warningHistory: {[key: string]: boolean};\n    _enumValues: ?{[_: string]: any};\n\n    constructor(expression: Expression, propertySpec: ?StylePropertySpecification) {\n        this.expression = expression;\n        this._warningHistory = {};\n        this._evaluator = new EvaluationContext();\n        this._defaultValue = propertySpec ? getDefaultValue(propertySpec) : null;\n        this._enumValues = propertySpec && propertySpec.type === 'enum' ? propertySpec.values : null;\n    }\n\n    evaluateWithoutErrorHandling(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection, featureTileCoord?: Point, featureDistanceData?: FeatureDistanceData): any {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature;\n        this._evaluator.featureState = featureState;\n        this._evaluator.canonical = canonical || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection;\n        this._evaluator.featureTileCoord = featureTileCoord || null;\n        this._evaluator.featureDistanceData = featureDistanceData || null;\n\n        return this.expression.evaluate(this._evaluator);\n    }\n\n    evaluate(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection, featureTileCoord?: Point, featureDistanceData?: FeatureDistanceData): any {\n        this._evaluator.globals = globals;\n        this._evaluator.feature = feature || null;\n        this._evaluator.featureState = featureState || null;\n        this._evaluator.canonical = canonical || null;\n        this._evaluator.availableImages = availableImages || null;\n        this._evaluator.formattedSection = formattedSection || null;\n        this._evaluator.featureTileCoord = featureTileCoord || null;\n        this._evaluator.featureDistanceData = featureDistanceData || null;\n\n        try {\n            const val = this.expression.evaluate(this._evaluator);\n            // eslint-disable-next-line no-self-compare\n            if (val === null || val === undefined || (typeof val === 'number' && val !== val)) {\n                return this._defaultValue;\n            }\n            if (this._enumValues && !(val in this._enumValues)) {\n                throw new RuntimeError(`Expected value to be one of ${Object.keys(this._enumValues).map(v => JSON.stringify(v)).join(', ')}, but found ${JSON.stringify(val)} instead.`);\n            }\n            return val;\n        } catch (e) {\n            if (!this._warningHistory[e.message]) {\n                this._warningHistory[e.message] = true;\n                if (typeof console !== 'undefined') {\n                    console.warn(e.message);\n                }\n            }\n            return this._defaultValue;\n        }\n    }\n}\n\nexport function isExpression(expression: mixed): boolean {\n    return Array.isArray(expression) && expression.length > 0 &&\n        typeof expression[0] === 'string' && expression[0] in definitions;\n}\n\n/**\n * Parse and typecheck the given style spec JSON expression.  If\n * options.defaultValue is provided, then the resulting StyleExpression's\n * `evaluate()` method will handle errors by logging a warning (once per\n * message) and returning the default value.  Otherwise, it will throw\n * evaluation errors.\n *\n * @private\n */\nexport function createExpression(expression: mixed, propertySpec: ?StylePropertySpecification): Result<StyleExpression, Array<ParsingError>> {\n    const parser = new ParsingContext(definitions, [], propertySpec ? getExpectedType(propertySpec) : undefined);\n\n    // For string-valued properties, coerce to string at the top level rather than asserting.\n    const parsed = parser.parse(expression, undefined, undefined, undefined,\n        propertySpec && propertySpec.type === 'string' ? {typeAnnotation: 'coerce'} : undefined);\n\n    if (!parsed) {\n        assert(parser.errors.length > 0);\n        return error(parser.errors);\n    }\n\n    return success(new StyleExpression(parsed, propertySpec));\n}\n\nexport class ZoomConstantExpression<Kind: EvaluationKind> {\n    kind: Kind;\n    isStateDependent: boolean;\n    _styleExpression: StyleExpression;\n\n    constructor(kind: Kind, expression: StyleExpression) {\n        this.kind = kind;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== ('constant': EvaluationKind) && !isConstant.isStateConstant(expression.expression);\n    }\n\n    evaluateWithoutErrorHandling(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection): any {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    evaluate(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection): any {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n}\n\nexport class ZoomDependentExpression<Kind: EvaluationKind> {\n    kind: Kind;\n    zoomStops: Array<number>;\n    isStateDependent: boolean;\n\n    _styleExpression: StyleExpression;\n    interpolationType: ?InterpolationType;\n\n    constructor(kind: Kind, expression: StyleExpression, zoomStops: Array<number>, interpolationType?: InterpolationType) {\n        this.kind = kind;\n        this.zoomStops = zoomStops;\n        this._styleExpression = expression;\n        this.isStateDependent = kind !== ('camera': EvaluationKind) && !isConstant.isStateConstant(expression.expression);\n        this.interpolationType = interpolationType;\n    }\n\n    evaluateWithoutErrorHandling(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection): any {\n        return this._styleExpression.evaluateWithoutErrorHandling(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    evaluate(globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection): any {\n        return this._styleExpression.evaluate(globals, feature, featureState, canonical, availableImages, formattedSection);\n    }\n\n    interpolationFactor(input: number, lower: number, upper: number): number {\n        if (this.interpolationType) {\n            return Interpolate.interpolationFactor(this.interpolationType, input, lower, upper);\n        } else {\n            return 0;\n        }\n    }\n}\n\nexport type ConstantExpression = {\n    kind: 'constant',\n    +evaluate: (globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>) => any,\n}\n\nexport type SourceExpression = {\n    kind: 'source',\n    isStateDependent: boolean,\n    +evaluate: (globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection) => any,\n};\n\nexport type CameraExpression = {\n    kind: 'camera',\n    +evaluate: (globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>) => any,\n    +interpolationFactor: (input: number, lower: number, upper: number) => number,\n    zoomStops: Array<number>,\n    interpolationType: ?InterpolationType\n};\n\nexport type CompositeExpression = {\n    kind: 'composite',\n    isStateDependent: boolean,\n    +evaluate: (globals: GlobalProperties, feature?: Feature, featureState?: FeatureState, canonical?: CanonicalTileID, availableImages?: Array<string>, formattedSection?: FormattedSection) => any,\n    +interpolationFactor: (input: number, lower: number, upper: number) => number,\n    zoomStops: Array<number>,\n    interpolationType: ?InterpolationType\n};\n\nexport type StylePropertyExpression =\n    | ConstantExpression\n    | SourceExpression\n    | CameraExpression\n    | CompositeExpression;\n\nexport function createPropertyExpression(expression: mixed, propertySpec: StylePropertySpecification): Result<StylePropertyExpression, Array<ParsingError>> {\n    expression = createExpression(expression, propertySpec);\n    if (expression.result === 'error') {\n        return expression;\n    }\n\n    const parsed = expression.value.expression;\n\n    const isFeatureConstant = isConstant.isFeatureConstant(parsed);\n    if (!isFeatureConstant && !supportsPropertyExpression(propertySpec)) {\n        return error([new ParsingError('', 'data expressions not supported')]);\n    }\n\n    const isZoomConstant = isConstant.isGlobalPropertyConstant(parsed, ['zoom', 'pitch', 'distance-from-center']);\n    if (!isZoomConstant && !supportsZoomExpression(propertySpec)) {\n        return error([new ParsingError('', 'zoom expressions not supported')]);\n    }\n\n    const zoomCurve = findZoomCurve(parsed);\n    if (!zoomCurve && !isZoomConstant) {\n        return error([new ParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.')]);\n    } else if (zoomCurve instanceof ParsingError) {\n        return error([zoomCurve]);\n    } else if (zoomCurve instanceof Interpolate && !supportsInterpolation(propertySpec)) {\n        return error([new ParsingError('', '\"interpolate\" expressions cannot be used with this property')]);\n    }\n\n    if (!zoomCurve) {\n        return success(isFeatureConstant ?\n            (new ZoomConstantExpression('constant', expression.value): ConstantExpression) :\n            (new ZoomConstantExpression('source', expression.value): SourceExpression));\n    }\n\n    const interpolationType = zoomCurve instanceof Interpolate ? zoomCurve.interpolation : undefined;\n\n    return success(isFeatureConstant ?\n        (new ZoomDependentExpression('camera', expression.value, zoomCurve.labels, interpolationType): CameraExpression) :\n        (new ZoomDependentExpression('composite', expression.value, zoomCurve.labels, interpolationType): CompositeExpression));\n}\n\nimport {isFunction, createFunction} from '../function/index.js';\nimport {Color} from './values.js';\n\n// serialization wrapper for old-style stop functions normalized to the\n// expression interface\nexport class StylePropertyFunction<T> {\n    _parameters: PropertyValueSpecification<T>;\n    _specification: StylePropertySpecification;\n\n    kind: EvaluationKind;\n    evaluate: (globals: GlobalProperties, feature?: Feature) => any;\n    interpolationFactor: ?(input: number, lower: number, upper: number) => number;\n    zoomStops: ?Array<number>;\n\n    constructor(parameters: PropertyValueSpecification<T>, specification: StylePropertySpecification) {\n        this._parameters = parameters;\n        this._specification = specification;\n        extend(this, createFunction(this._parameters, this._specification));\n    }\n\n    static deserialize(serialized: {_parameters: PropertyValueSpecification<T>, _specification: StylePropertySpecification}): StylePropertyFunction<T> {\n        return new StylePropertyFunction(serialized._parameters, serialized._specification);\n    }\n\n    static serialize(input: StylePropertyFunction<T>): {_parameters: PropertyValueSpecification<T>, _specification: StylePropertySpecification} {\n        return {\n            _parameters: input._parameters,\n            _specification: input._specification\n        };\n    }\n}\n\nexport function normalizePropertyExpression<T>(value: PropertyValueSpecification<T>, specification: StylePropertySpecification): StylePropertyExpression {\n    if (isFunction(value)) {\n        return (new StylePropertyFunction(value, specification): any);\n\n    } else if (isExpression(value)) {\n        const expression = createPropertyExpression(value, specification);\n        if (expression.result === 'error') {\n            // this should have been caught in validation\n            throw new Error(expression.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        }\n        return expression.value;\n\n    } else {\n        let constant: any = value;\n        if (typeof value === 'string' && specification.type === 'color') {\n            constant = Color.parse(value);\n        }\n        return {\n            kind: 'constant',\n            evaluate: () => constant\n        };\n    }\n}\n\n// Zoom-dependent expressions may only use [\"zoom\"] as the input to a top-level \"step\" or \"interpolate\"\n// expression (collectively referred to as a \"curve\"). The curve may be wrapped in one or more \"let\" or\n// \"coalesce\" expressions.\nfunction findZoomCurve(expression: Expression): Step | Interpolate | ParsingError | null {\n    let result = null;\n    if (expression instanceof Let) {\n        result = findZoomCurve(expression.result);\n\n    } else if (expression instanceof Coalesce) {\n        for (const arg of expression.args) {\n            result = findZoomCurve(arg);\n            if (result) {\n                break;\n            }\n        }\n\n    } else if ((expression instanceof Step || expression instanceof Interpolate) &&\n        expression.input instanceof CompoundExpression &&\n        expression.input.name === 'zoom') {\n\n        result = expression;\n    }\n\n    if (result instanceof ParsingError) {\n        return result;\n    }\n\n    expression.eachChild((child) => {\n        const childResult = findZoomCurve(child);\n        if (childResult instanceof ParsingError) {\n            result = childResult;\n        } else if (!result && childResult) {\n            result = new ParsingError('', '\"zoom\" expression may only be used as input to a top-level \"step\" or \"interpolate\" expression.');\n        } else if (result && childResult && result !== childResult) {\n            result = new ParsingError('', 'Only one zoom-based \"step\" or \"interpolate\" subexpression may be used in an expression.');\n        }\n    });\n\n    return result;\n}\n\nimport {ColorType, StringType, NumberType, BooleanType, ValueType, FormattedType, ResolvedImageType, array} from './types.js';\n\nfunction getExpectedType(spec: StylePropertySpecification): Type {\n    const types = {\n        color: ColorType,\n        string: StringType,\n        number: NumberType,\n        enum: StringType,\n        boolean: BooleanType,\n        formatted: FormattedType,\n        resolvedImage: ResolvedImageType\n    };\n\n    if (spec.type === 'array') {\n        return array(types[spec.value] || ValueType, spec.length);\n    }\n\n    return types[spec.type];\n}\n\nfunction getDefaultValue(spec: StylePropertySpecification): Value {\n    if (spec.type === 'color' && (isFunction(spec.default) || Array.isArray(spec.default))) {\n        // Special case for heatmap-color: it uses the 'default:' to define a\n        // default color ramp, but createExpression expects a simple value to fall\n        // back to in case of runtime errors\n        return new Color(0, 0, 0, 0);\n    } else if (spec.type === 'color') {\n        return Color.parse(spec.default) || null;\n    } else if (spec.default === undefined) {\n        return null;\n    } else {\n        return spec.default;\n    }\n}\n", "// @flow\n\nimport assert from 'assert';\n\nimport type {StylePropertySpecification} from '../style-spec.js';\nimport type {ExpressionSpecification} from '../types.js';\n\nfunction convertLiteral(value) {\n    return typeof value === 'object' ? ['literal', value] : value;\n}\n\nexport default function convertFunction(parameters: any, propertySpec: StylePropertySpecification): ExpressionSpecification {\n    let stops = parameters.stops;\n    if (!stops) {\n        // identity function\n        return convertIdentityFunction(parameters, propertySpec);\n    }\n\n    const zoomAndFeatureDependent = stops && typeof stops[0][0] === 'object';\n    const featureDependent = zoomAndFeatureDependent || parameters.property !== undefined;\n    const zoomDependent = zoomAndFeatureDependent || !featureDependent;\n\n    stops = stops.map((stop) => {\n        if (!featureDependent && propertySpec.tokens && typeof stop[1] === 'string') {\n            return [stop[0], convertTokenString(stop[1])];\n        }\n        return [stop[0], convertLiteral(stop[1])];\n    });\n\n    if (zoomAndFeatureDependent) {\n        return convertZoomAndPropertyFunction(parameters, propertySpec, stops);\n    } else if (zoomDependent) {\n        return convertZoomFunction(parameters, propertySpec, stops);\n    } else {\n        return convertPropertyFunction(parameters, propertySpec, stops);\n    }\n}\n\nfunction convertIdentityFunction(parameters, propertySpec): Array<mixed> {\n    const get = ['get', parameters.property];\n\n    if (parameters.default === undefined) {\n        // By default, expressions for string-valued properties get coerced. To preserve\n        // legacy function semantics, insert an explicit assertion instead.\n        return propertySpec.type === 'string' ? ['string', get] : get;\n    } else if (propertySpec.type === 'enum') {\n        return [\n            'match',\n            get,\n            Object.keys(propertySpec.values),\n            get,\n            parameters.default\n        ];\n    } else {\n        const expression = [propertySpec.type === 'color' ? 'to-color' : propertySpec.type, get, convertLiteral(parameters.default)];\n        if (propertySpec.type === 'array') {\n            expression.splice(1, 0, propertySpec.value, propertySpec.length || null);\n        }\n        return expression;\n    }\n}\n\nfunction getInterpolateOperator(parameters) {\n    switch (parameters.colorSpace) {\n    case 'hcl': return 'interpolate-hcl';\n    case 'lab': return 'interpolate-lab';\n    default: return 'interpolate';\n    }\n}\n\nfunction convertZoomAndPropertyFunction(parameters, propertySpec, stops) {\n    const featureFunctionParameters = {};\n    const featureFunctionStops = {};\n    const zoomStops = [];\n    for (let s = 0; s < stops.length; s++) {\n        const stop = stops[s];\n        const zoom = stop[0].zoom;\n        if (featureFunctionParameters[zoom] === undefined) {\n            featureFunctionParameters[zoom] = {\n                zoom,\n                type: parameters.type,\n                property: parameters.property,\n                default: parameters.default,\n            };\n            featureFunctionStops[zoom] = [];\n            zoomStops.push(zoom);\n        }\n        featureFunctionStops[zoom].push([stop[0].value, stop[1]]);\n    }\n\n    // the interpolation type for the zoom dimension of a zoom-and-property\n    // function is determined directly from the style property specification\n    // for which it's being used: linear for interpolatable properties, step\n    // otherwise.\n    const functionType = getFunctionType({}, propertySpec);\n    if (functionType === 'exponential') {\n        const expression = [getInterpolateOperator(parameters), ['linear'], ['zoom']];\n\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, false);\n        }\n\n        return expression;\n    } else {\n        const expression = ['step', ['zoom']];\n\n        for (const z of zoomStops) {\n            const output = convertPropertyFunction(featureFunctionParameters[z], propertySpec, featureFunctionStops[z]);\n            appendStopPair(expression, z, output, true);\n        }\n\n        fixupDegenerateStepCurve(expression);\n\n        return expression;\n    }\n}\n\nfunction coalesce(a, b) {\n    if (a !== undefined) return a;\n    if (b !== undefined) return b;\n}\n\nfunction getFallback(parameters, propertySpec) {\n    const defaultValue = convertLiteral(coalesce(parameters.default, propertySpec.default));\n\n    /*\n     * Some fields with type: resolvedImage have an undefined default.\n     * Because undefined is an invalid value for resolvedImage, set fallback to\n     * an empty string instead of undefined to ensure output\n     * passes validation.\n     */\n    if (defaultValue === undefined && propertySpec.type === 'resolvedImage') {\n        return '';\n    }\n    return defaultValue;\n}\n\nfunction convertPropertyFunction(parameters, propertySpec, stops) {\n    const type = getFunctionType(parameters, propertySpec);\n    const get = ['get', parameters.property];\n    if (type === 'categorical' && typeof stops[0][0] === 'boolean') {\n        assert(parameters.stops.length > 0 && parameters.stops.length <= 2);\n        const expression = ['case'];\n        for (const stop of stops) {\n            expression.push(['==', get, stop[0]], stop[1]);\n        }\n\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'categorical') {\n        const expression = ['match', get];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        expression.push(getFallback(parameters, propertySpec));\n        return expression;\n    } else if (type === 'interval') {\n        const expression = ['step', ['number', get]];\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], true);\n        }\n        fixupDegenerateStepCurve(expression);\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        const expression = [\n            getInterpolateOperator(parameters),\n            base === 1 ? [\"linear\"] : [\"exponential\", base],\n            [\"number\", get]\n        ];\n\n        for (const stop of stops) {\n            appendStopPair(expression, stop[0], stop[1], false);\n        }\n        return parameters.default === undefined ? expression : [\n            'case',\n            ['==', ['typeof', get], 'number'],\n            expression,\n            convertLiteral(parameters.default)\n        ];\n    } else {\n        throw new Error(`Unknown property function type ${type}`);\n    }\n}\n\nfunction convertZoomFunction(parameters, propertySpec, stops, input = ['zoom']) {\n    const type = getFunctionType(parameters, propertySpec);\n    let expression;\n    let isStep = false;\n    if (type === 'interval') {\n        expression = ['step', input];\n        isStep = true;\n    } else if (type === 'exponential') {\n        const base = parameters.base !== undefined ? parameters.base : 1;\n        expression = [getInterpolateOperator(parameters), base === 1 ? [\"linear\"] : [\"exponential\", base], input];\n\n    } else {\n        throw new Error(`Unknown zoom function type \"${type}\"`);\n    }\n\n    for (const stop of stops) {\n        appendStopPair(expression, stop[0], stop[1], isStep);\n    }\n\n    fixupDegenerateStepCurve(expression);\n\n    return expression;\n}\n\nfunction fixupDegenerateStepCurve(expression) {\n    // degenerate step curve (i.e. a constant function): add a noop stop\n    if (expression[0] === 'step' && expression.length === 3) {\n        expression.push(0);\n        expression.push(expression[3]);\n    }\n}\n\nfunction appendStopPair(curve, input, output, isStep) {\n    // Skip duplicate stop values. They were not validated for functions, but they are for expressions.\n    // https://github.com/mapbox/mapbox-gl-js/issues/4107\n    if (curve.length > 3 && input === curve[curve.length - 2]) {\n        return;\n    }\n    // step curves don't get the first input value, as it is redundant.\n    if (!(isStep && curve.length === 2)) {\n        curve.push(input);\n    }\n    curve.push(output);\n}\n\nfunction getFunctionType(parameters, propertySpec) {\n    if (parameters.type) {\n        return parameters.type;\n    } else {\n        assert(propertySpec.expression);\n        return (propertySpec.expression: any).interpolated ? 'exponential' : 'interval';\n    }\n}\n\n// \"String with {name} token\" => [\"concat\", \"String with \", [\"get\", \"name\"], \" token\"]\nexport function convertTokenString(s: string): string | ExpressionSpecification {\n    const result = ['concat'];\n    const re = /{([^{}]+)}/g;\n    let pos = 0;\n    for (let match = re.exec(s); match !== null; match = re.exec(s)) {\n        const literal = s.slice(pos, re.lastIndex - match[0].length);\n        pos = re.lastIndex;\n        if (literal.length > 0) result.push(literal);\n        result.push(['get', match[1]]);\n    }\n\n    if (result.length === 1) {\n        return s;\n    }\n\n    if (pos < s.length) {\n        result.push(s.slice(pos));\n    } else if (result.length === 2) {\n        return ['to-string', result[1]];\n    }\n\n    return result;\n}\n\n", "// @flow\n\n// Turn jsonlint-lines-primitives objects into primitive objects\nexport function unbundle(value: mixed): mixed {\n    if (value instanceof Number || value instanceof String || value instanceof Boolean) {\n        return value.valueOf();\n    } else {\n        return value;\n    }\n}\n\nexport function deepUnbundle(value: mixed): mixed {\n    if (Array.isArray(value)) {\n        return value.map(deepUnbundle);\n    } else if (value instanceof Object && !(value instanceof Number || value instanceof String || value instanceof Boolean)) {\n        const unbundledValue: { [key: string]: mixed } = {};\n        for (const key in value) {\n            unbundledValue[key] = deepUnbundle(value[key]);\n        }\n        return unbundledValue;\n    }\n\n    return unbundle(value);\n}\n", "// @flow\n\nimport {createExpression} from '../expression/index.js';\nimport {isFeatureConstant} from '../expression/is_constant.js';\nimport {deepUnbundle} from '../util/unbundle_jsonlint.js';\nimport latest from '../reference/latest.js';\nimport type {GlobalProperties, Feature} from '../expression/index.js';\nimport type {CanonicalTileID} from '../../source/tile_id.js';\nimport type Point from '@mapbox/point-geometry';\n\nexport type FeatureDistanceData = {bearing: [number, number], center: [number, number], scale: number};\nexport type FilterExpression = (globalProperties: GlobalProperties, feature: Feature, canonical?: CanonicalTileID, featureTileCoord?: Point, featureDistanceData?: FeatureDistanceData) => boolean;\nexport type FeatureFilter = {filter: FilterExpression, dynamicFilter?: FilterExpression, needGeometry: boolean, needFeature: boolean};\n\nexport default createFilter;\nexport {isExpressionFilter, isDynamicFilter, extractStaticFilter};\n\nfunction isExpressionFilter(filter: any): boolean {\n    if (filter === true || filter === false) {\n        return true;\n    }\n\n    if (!Array.isArray(filter) || filter.length === 0) {\n        return false;\n    }\n    switch (filter[0]) {\n    case 'has':\n        return filter.length >= 2 && filter[1] !== '$id' && filter[1] !== '$type';\n\n    case 'in':\n        return filter.length >= 3 && (typeof filter[1] !== 'string' || Array.isArray(filter[2]));\n\n    case '!in':\n    case '!has':\n    case 'none':\n        return false;\n\n    case '==':\n    case '!=':\n    case '>':\n    case '>=':\n    case '<':\n    case '<=':\n        return filter.length !== 3 || (Array.isArray(filter[1]) || Array.isArray(filter[2]));\n\n    case 'any':\n    case 'all':\n        for (const f of filter.slice(1)) {\n            if (!isExpressionFilter(f) && typeof f !== 'boolean') {\n                return false;\n            }\n        }\n        return true;\n\n    default:\n        return true;\n    }\n}\n\n/**\n * Given a filter expressed as nested arrays, return a new function\n * that evaluates whether a given feature (with a .properties or .tags property)\n * passes its test.\n *\n * @private\n * @param {Array} filter mapbox gl filter\n * @param {string} layerType the type of the layer this filter will be applied to.\n * @returns {Function} filter-evaluating function\n */\nfunction createFilter(filter: any, layerType?: string = 'fill'): FeatureFilter {\n    if (filter === null || filter === undefined) {\n        return {filter: () => true, needGeometry: false, needFeature: false};\n    }\n\n    if (!isExpressionFilter(filter)) {\n        filter = convertFilter(filter);\n    }\n    const filterExp = ((filter: any): string[] | string | boolean);\n\n    let staticFilter = true;\n    try {\n        staticFilter = extractStaticFilter(filterExp);\n    } catch (e) {\n        console.warn(\n`Failed to extract static filter. Filter will continue working, but at higher memory usage and slower framerate.\nThis is most likely a bug, please report this via https://github.com/mapbox/mapbox-gl-js/issues/new?assignees=&labels=&template=Bug_report.md\nand paste the contents of this message in the report.\nThank you!\nFilter Expression:\n${JSON.stringify(filterExp, null, 2)}\n        `);\n    }\n\n    // Compile the static component of the filter\n    const filterSpec = latest[`filter_${layerType}`];\n    const compiledStaticFilter = createExpression(staticFilter, filterSpec);\n\n    let filterFunc = null;\n    if (compiledStaticFilter.result === 'error') {\n        throw new Error(compiledStaticFilter.value.map(err => `${err.key}: ${err.message}`).join(', '));\n    } else {\n        filterFunc = (globalProperties: GlobalProperties, feature: Feature, canonical?: CanonicalTileID) => compiledStaticFilter.value.evaluate(globalProperties, feature, {}, canonical);\n    }\n\n    // If the static component is not equal to the entire filter then we have a dynamic component\n    // Compile the dynamic component separately\n    let dynamicFilterFunc = null;\n    let needFeature = null;\n    if (staticFilter !== filterExp) {\n        const compiledDynamicFilter = createExpression(filterExp, filterSpec);\n\n        if (compiledDynamicFilter.result === 'error') {\n            throw new Error(compiledDynamicFilter.value.map(err => `${err.key}: ${err.message}`).join(', '));\n        } else {\n            dynamicFilterFunc = (globalProperties: GlobalProperties, feature: Feature, canonical?: CanonicalTileID, featureTileCoord?: Point, featureDistanceData?: FeatureDistanceData) => compiledDynamicFilter.value.evaluate(globalProperties, feature, {}, canonical, undefined, undefined, featureTileCoord, featureDistanceData);\n            needFeature = !isFeatureConstant(compiledDynamicFilter.value.expression);\n        }\n    }\n\n    filterFunc = ((filterFunc: any): FilterExpression);\n    const needGeometry = geometryNeeded(staticFilter);\n\n    return {\n        filter: filterFunc,\n        dynamicFilter: dynamicFilterFunc ? dynamicFilterFunc : undefined,\n        needGeometry,\n        needFeature: !!needFeature\n    };\n}\n\nfunction extractStaticFilter(filter: any): any {\n    if (!isDynamicFilter(filter)) {\n        return filter;\n    }\n\n    // Shallow copy so we can replace expressions in-place\n    let result = deepUnbundle(filter);\n\n    // 1. Union branches\n    unionDynamicBranches(result);\n\n    // 2. Collapse dynamic conditions to  `true`\n    result = collapseDynamicBooleanExpressions(result);\n\n    return result;\n}\n\nfunction collapseDynamicBooleanExpressions(expression: any): any {\n    if (!Array.isArray(expression)) {\n        return expression;\n    }\n\n    const collapsed = collapsedExpression(expression);\n    if (collapsed === true) {\n        return collapsed;\n    } else {\n        return collapsed.map((subExpression) => collapseDynamicBooleanExpressions(subExpression));\n    }\n}\n\n/**\n * Traverses the expression and replaces all instances of branching on a\n * `dynamic` conditional (such as `['pitch']` or `['distance-from-center']`)\n * into an `any` expression.\n * This ensures that all possible outcomes of a `dynamic` branch are considered\n * when evaluating the expression upfront during filtering.\n *\n * @param {Array<any>} filter the filter expression mutated in-place.\n */\nfunction unionDynamicBranches(filter: any) {\n    let isBranchingDynamically = false;\n    const branches = [];\n\n    if (filter[0] === 'case') {\n        for (let i = 1; i < filter.length - 1; i += 2) {\n            isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[i]);\n            branches.push(filter[i + 1]);\n        }\n\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'match') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n\n        for (let i = 2; i < filter.length - 1; i += 2) {\n            branches.push(filter[i + 1]);\n        }\n        branches.push(filter[filter.length - 1]);\n    } else if (filter[0] === 'step') {\n        isBranchingDynamically = isBranchingDynamically || isDynamicFilter(filter[1]);\n\n        for (let i = 1; i < filter.length - 1; i += 2) {\n            branches.push(filter[i + 1]);\n        }\n    }\n\n    if (isBranchingDynamically) {\n        filter.length = 0;\n        filter.push('any', ...branches);\n    }\n\n    // traverse and recurse into children\n    for (let i = 1; i < filter.length; i++) {\n        unionDynamicBranches(filter[i]);\n    }\n}\n\nfunction isDynamicFilter(filter: any): boolean {\n    // Base Cases\n    if (!Array.isArray(filter)) {\n        return false;\n    }\n    if (isRootExpressionDynamic(filter[0])) {\n        return true;\n    }\n\n    for (let i = 1; i < filter.length; i++) {\n        const child = filter[i];\n        if (isDynamicFilter(child)) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction isRootExpressionDynamic(expression: string): boolean {\n    return expression === 'pitch' ||\n        expression === 'distance-from-center';\n}\n\nconst dynamicConditionExpressions = new Set([\n    'in',\n    '==',\n    '!=',\n    '>',\n    '>=',\n    '<',\n    '<=',\n    'to-boolean'\n]);\n\nfunction collapsedExpression(expression: any): any {\n    if (dynamicConditionExpressions.has(expression[0])) {\n\n        for (let i = 1; i < expression.length; i++) {\n            const param = expression[i];\n            if (isDynamicFilter(param)) {\n                return true;\n            }\n        }\n    }\n    return expression;\n}\n\n// Comparison function to sort numbers and strings\nfunction compare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nfunction geometryNeeded(filter) {\n    if (!Array.isArray(filter)) return false;\n    if (filter[0] === 'within') return true;\n    for (let index = 1; index < filter.length; index++) {\n        if (geometryNeeded(filter[index])) return true;\n    }\n    return false;\n}\n\nfunction convertFilter(filter: ?Array<any>): mixed {\n    if (!filter) return true;\n    const op = filter[0];\n    if (filter.length <= 1) return (op !== 'any');\n    const converted =\n        op === '==' ? convertComparisonOp(filter[1], filter[2], '==') :\n        op === '!=' ? convertNegation(convertComparisonOp(filter[1], filter[2], '==')) :\n        op === '<' ||\n        op === '>' ||\n        op === '<=' ||\n        op === '>=' ? convertComparisonOp(filter[1], filter[2], op) :\n        op === 'any' ? convertDisjunctionOp(filter.slice(1)) :\n        op === 'all' ? ['all'].concat(filter.slice(1).map(convertFilter)) :\n        op === 'none' ? ['all'].concat(filter.slice(1).map(convertFilter).map(convertNegation)) :\n        op === 'in' ? convertInOp(filter[1], filter.slice(2)) :\n        op === '!in' ? convertNegation(convertInOp(filter[1], filter.slice(2))) :\n        op === 'has' ? convertHasOp(filter[1]) :\n        op === '!has' ? convertNegation(convertHasOp(filter[1])) :\n        op === 'within' ? filter :\n        true;\n    return converted;\n}\n\nfunction convertComparisonOp(property: string, value: any, op: string) {\n    switch (property) {\n    case '$type':\n        return [`filter-type-${op}`, value];\n    case '$id':\n        return [`filter-id-${op}`, value];\n    default:\n        return [`filter-${op}`, property, value];\n    }\n}\n\nfunction convertDisjunctionOp(filters: Array<Array<any>>) {\n    return ['any'].concat(filters.map(convertFilter));\n}\n\nfunction convertInOp(property: string, values: Array<any>) {\n    if (values.length === 0) { return false; }\n    switch (property) {\n    case '$type':\n        return [`filter-type-in`, ['literal', values]];\n    case '$id':\n        return [`filter-id-in`, ['literal', values]];\n    default:\n        if (values.length > 200 && !values.some(v => typeof v !== typeof values[0])) {\n            return ['filter-in-large', property, ['literal', values.sort(compare)]];\n        } else {\n            return ['filter-in-small', property, ['literal', values]];\n        }\n    }\n}\n\nfunction convertHasOp(property: string) {\n    switch (property) {\n    case '$type':\n        return true;\n    case '$id':\n        return [`filter-has-id`];\n    default:\n        return [`filter-has`, property];\n    }\n}\n\nfunction convertNegation(filter: mixed) {\n    return ['!', filter];\n}\n", "// @flow\n\nimport {isExpressionFilter} from './index.js';\n\nimport type {FilterSpecification} from '../types.js';\n\ntype ExpectedTypes = {[_: string]: 'string' | 'number' | 'boolean'};\n\n/**\n * Convert the given legacy filter to (the JSON representation of) an\n * equivalent expression\n * @private\n */\nexport default function convertFilter(filter: FilterSpecification): mixed {\n    return _convertFilter(filter, {});\n}\n\n/*\n * Convert the given filter to an expression, storing the expected types for\n * any feature properties referenced in expectedTypes.\n *\n * These expected types are needed in order to construct preflight type checks\n * needed for handling 'any' filters. A preflight type check is necessary in\n * order to mimic legacy filters' semantics around expected type mismatches.\n * For example, consider the legacy filter:\n *\n *     [\"any\", [\"all\", [\">\", \"y\", 0], [\">\", \"y\", 0]], [\">\", \"x\", 0]]\n *\n * Naively, we might convert this to the expression:\n *\n *     [\"any\", [\"all\", [\">\", [\"get\", \"y\"], 0], [\">\", [\"get\", \"z\"], 0]], [\">\", [\"get\", \"x\"], 0]]\n *\n * But if we tried to evaluate this against, say `{x: 1, y: null, z: 0}`, the\n * [\">\", [\"get\", \"y\"], 0] would cause an evaluation error, leading to the\n * entire filter returning false. Legacy filter semantics, though, ask for\n * [\">\", \"y\", 0] to simply return `false` when `y` is of the wrong type,\n * allowing the subsequent terms of the outer \"any\" expression to be evaluated\n * (resulting, in this case, in a `true` value, because x > 0).\n *\n * We account for this by inserting a preflight type-checking expression before\n * each \"any\" term, allowing us to avoid evaluating the actual converted filter\n * if any type mismatches would cause it to produce an evalaution error:\n *\n *     [\"any\",\n *       [\"case\",\n *         [\"all\", [\"==\", [\"typeof\", [\"get\", \"y\"]], \"number\"], [\"==\", [\"typeof\", [\"get\", \"z\"], \"number]],\n *         [\"all\", [\">\", [\"get\", \"y\"], 0], [\">\", [\"get\", \"z\"], 0]],\n *         false\n *       ],\n *       [\"case\",\n *         [\"==\", [\"typeof\", [\"get\", \"x\"], \"number\"]],\n *         [\">\", [\"get\", \"x\"], 0],\n *         false\n *       ]\n *     ]\n *\n * An alternative, possibly more direct approach would be to use type checks\n * in the conversion of each comparison operator, so that the converted version\n * of each individual ==, >=, etc. would mimic the legacy filter semantics. The\n * downside of this approach is that it can lead to many more type checks than\n * would otherwise be necessary: outside the context of an \"any\" expression,\n * bailing out due to a runtime type error (expression semantics) and returning\n * false (legacy filter semantics) are equivalent: they cause the filter to\n * produce a `false` result.\n */\nfunction _convertFilter(filter: FilterSpecification, expectedTypes: ExpectedTypes): mixed {\n    if (isExpressionFilter(filter)) { return filter; }\n\n    if (!filter) return true;\n    const op = filter[0];\n    if (filter.length <= 1) return (op !== 'any');\n\n    let converted;\n\n    if (\n        op === '==' ||\n        op === '!=' ||\n        op === '<' ||\n        op === '>' ||\n        op === '<=' ||\n        op === '>='\n    ) {\n        const [, property, value] = (filter: any);\n        converted = convertComparisonOp(property, value, op, expectedTypes);\n    } else if (op === 'any') {\n        const children = (filter: any).slice(1).map(f => {\n            const types = {};\n            const child = _convertFilter(f, types);\n            const typechecks = runtimeTypeChecks(types);\n            return typechecks === true ? child : ['case', typechecks, child, false];\n        });\n        return ['any'].concat(children);\n    } else if (op === 'all') {\n        const children = (filter: any).slice(1).map(f => _convertFilter(f, expectedTypes));\n        return children.length > 1 ? ['all'].concat(children) : [].concat(...children);\n    } else if (op === 'none') {\n        return ['!', _convertFilter(['any'].concat((filter: any).slice(1)), {})];\n    } else if (op === 'in') {\n        converted = convertInOp((filter[1]: any), filter.slice(2));\n    } else if (op === '!in') {\n        converted = convertInOp((filter[1]: any), filter.slice(2), true);\n    } else if (op === 'has') {\n        converted = convertHasOp((filter[1]: any));\n    } else if (op === '!has') {\n        converted = ['!', convertHasOp((filter[1]: any))];\n    } else {\n        converted = true;\n    }\n\n    return converted;\n}\n\n// Given a set of feature properties and an expected type for each one,\n// construct an boolean expression that tests whether each property has the\n// right type.\n// E.g.: for {name: 'string', population: 'number'}, return\n// [ 'all',\n//   ['==', ['typeof', ['get', 'name'], 'string']],\n//   ['==', ['typeof', ['get', 'population'], 'number]]\n// ]\nfunction runtimeTypeChecks(expectedTypes: ExpectedTypes) {\n    const conditions = [];\n    for (const property in expectedTypes) {\n        const get = property === '$id' ? ['id'] : ['get', property];\n        conditions.push(['==', ['typeof', get], expectedTypes[property]]);\n    }\n    if (conditions.length === 0) return true;\n    if (conditions.length === 1) return conditions[0];\n    return ['all'].concat(conditions);\n}\n\nfunction convertComparisonOp(property: string, value: any, op: string, expectedTypes: ?ExpectedTypes) {\n    let get;\n    if (property === '$type') {\n        return [op, ['geometry-type'], value];\n    } else if (property === '$id') {\n        get = ['id'];\n    } else {\n        get = ['get', property];\n    }\n\n    if (expectedTypes && value !== null) {\n        const type = ((typeof value): any);\n        expectedTypes[property] = type;\n    }\n\n    if (op === '==' && property !== '$id' && value === null) {\n        return [\n            'all',\n            ['has', property], // missing property != null for legacy filters\n            ['==', get, null]\n        ];\n    } else if (op === '!=' && property !== '$id' && value === null) {\n        return [\n            'any',\n            ['!', ['has', property]], // missing property != null for legacy filters\n            ['!=', get, null]\n        ];\n    }\n\n    return [op, get, value];\n}\n\nfunction convertInOp(property: string, values: Array<any>, negate = false) {\n    if (values.length === 0) return negate;\n\n    let get;\n    if (property === '$type') {\n        get = ['geometry-type'];\n    } else if (property === '$id') {\n        get = ['id'];\n    } else {\n        get = ['get', property];\n    }\n\n    // Determine if the list of values to be searched is homogenously typed.\n    // If so (and if the type is string or number), then we can use a\n    // [match, input, [...values], true, false] construction rather than a\n    // bunch of `==` tests.\n    let uniformTypes = true;\n    const type = typeof values[0];\n    for (const value of values) {\n        if (typeof value !== type) {\n            uniformTypes = false;\n            break;\n        }\n    }\n\n    if (uniformTypes && (type === 'string' || type === 'number')) {\n        // Match expressions must have unique values.\n        const uniqueValues = values.sort().filter((v, i) => i === 0 || values[i - 1] !== v);\n        return ['match', get, uniqueValues, !negate, negate];\n    }\n\n    return [ negate ? 'all' : 'any' ].concat(\n        values.map(v => [negate ? '!=' : '==', get, v])\n    );\n}\n\nfunction convertHasOp(property: string) {\n    if (property === '$type') {\n        return true;\n    } else if (property === '$id') {\n        return ['!=', ['id'], null];\n    } else {\n        return ['has', property];\n    }\n}\n", "// @flow\n\nimport {\n    eachLayer,\n    eachProperty\n} from '../visit.js';\nimport {isExpression} from '../expression/index.js';\nimport convertFunction, {convertTokenString} from '../function/convert.js';\nimport convertFilter from '../feature_filter/convert.js';\n\nimport type {StyleSpecification} from '../types.js';\n\n/**\n * Migrate the given style object in place to use expressions. Specifically,\n * this will convert (a) \"stop\" functions, and (b) legacy filters to their\n * expression equivalents.\n */\nexport default function(style: StyleSpecification): StyleSpecification {\n    const converted = [];\n\n    eachLayer(style, (layer) => {\n        if (layer.filter) {\n            layer.filter = (convertFilter(layer.filter): any);\n        }\n    });\n\n    eachProperty(style, {paint: true, layout: true}, ({path, value, reference, set}) => {\n        if (isExpression(value)) return;\n        if (typeof value === 'object' && !Array.isArray(value)) {\n            set(convertFunction(value, reference));\n            converted.push(path.join('.'));\n        } else if (reference.tokens && typeof value === 'string') {\n            set(convertTokenString(value));\n        }\n    });\n\n    return style;\n}\n\n", "\nimport migrateToV8 from './migrate/v8.js';\nimport migrateToExpressions from './migrate/expressions.js';\n\n/**\n * Migrate a Mapbox GL Style to the latest version.\n *\n * @private\n * @alias migrate\n * @param {object} style a Mapbox GL Style\n * @returns {Object} a migrated style\n * @example\n * var fs = require('fs');\n * var migrate = require('mapbox-gl-style-spec').migrate;\n * var style = fs.readFileSync('./style.json', 'utf8');\n * fs.writeFileSync('./style.json', JSON.stringify(migrate(style)));\n */\nexport default function(style) {\n    let migrated = false;\n\n    if (style.version === 7) {\n        style = migrateToV8(style);\n        migrated = true;\n    }\n\n    if (style.version === 8) {\n        migrated = migrateToExpressions(style);\n        migrated = true;\n    }\n\n    if (!migrated) {\n        throw new Error('cannot migrate from', style.version);\n    }\n\n    return style;\n}\n", "\nexport default function (style) {\n    const styleIDs = [];\n    const sourceIDs = [];\n    const compositedSourceLayers = [];\n\n    for (const id in style.sources) {\n        const source = style.sources[id];\n\n        if (source.type !== \"vector\")\n            continue;\n\n        const match = /^mapbox:\\/\\/(.*)/.exec(source.url);\n        if (!match)\n            continue;\n\n        styleIDs.push(id);\n        sourceIDs.push(match[1]);\n    }\n\n    if (styleIDs.length < 2)\n        return style;\n\n    styleIDs.forEach((id) => {\n        delete style.sources[id];\n    });\n\n    const compositeID = sourceIDs.join(\",\");\n\n    style.sources[compositeID] = {\n        \"type\": \"vector\",\n        \"url\": `mapbox://${compositeID}`\n    };\n\n    style.layers.forEach((layer) => {\n        if (styleIDs.indexOf(layer.source) >= 0) {\n            layer.source = compositeID;\n\n            if ('source-layer' in layer) {\n                if (compositedSourceLayers.indexOf(layer['source-layer']) >= 0) {\n                    throw new Error('Conflicting source layer names');\n                } else {\n                    compositedSourceLayers.push(layer['source-layer']);\n                }\n            }\n        }\n    });\n\n    return style;\n}\n", "// @flow\nexport default ['type', 'source', 'source-layer', 'minzoom', 'maxzoom', 'filter', 'layout'];\n", "// @flow\n\nimport refProperties from './util/ref_properties.js';\n\nimport type {LayerSpecification} from './types.js';\n\nfunction deref(layer: LayerSpecification, parent: LayerSpecification): LayerSpecification {\n    const result = {};\n\n    for (const k in layer) {\n        if (k !== 'ref') {\n            result[k] = layer[k];\n        }\n    }\n\n    refProperties.forEach((k) => {\n        if (k in parent) {\n            result[k] = (parent: any)[k];\n        }\n    });\n\n    return ((result: any): LayerSpecification);\n}\n\n/**\n * Given an array of layers, some of which may contain `ref` properties\n * whose value is the `id` of another property, return a new array where\n * such layers have been augmented with the 'type', 'source', etc. properties\n * from the parent layer, and the `ref` property has been removed.\n *\n * The input is not modified. The output may contain references to portions\n * of the input.\n *\n * @private\n * @param {Array<Layer>} layers\n * @returns {Array<Layer>}\n */\nexport default function derefLayers(layers: Array<LayerSpecification>): Array<LayerSpecification> {\n    layers = layers.slice();\n\n    const map = Object.create(null);\n    for (let i = 0; i < layers.length; i++) {\n        map[layers[i].id] = layers[i];\n    }\n\n    for (let i = 0; i < layers.length; i++) {\n        if ('ref' in layers[i]) {\n            layers[i] = deref(layers[i], map[(layers[i]: any).ref]);\n        }\n    }\n\n    return layers;\n}\n", "// @flow\n\n/**\n * Deeply compares two object literals.\n *\n * @private\n */\nfunction deepEqual(a: ?mixed, b: ?mixed): boolean {\n    if (Array.isArray(a)) {\n        if (!Array.isArray(b) || a.length !== b.length) return false;\n        for (let i = 0; i < a.length; i++) {\n            if (!deepEqual(a[i], b[i])) return false;\n        }\n        return true;\n    }\n    if (typeof a === 'object' && a !== null && b !== null) {\n        if (!(typeof b === 'object')) return false;\n        const keys = Object.keys(a);\n        if (keys.length !== Object.keys(b).length) return false;\n        for (const key in a) {\n            if (!deepEqual(a[key], b[key])) return false;\n        }\n        return true;\n    }\n    return a === b;\n}\n\nexport default deepEqual;\n", "// @flow\n\nimport isEqual from './util/deep_equal.js';\n\nimport type {StyleSpecification} from './types.js';\n\ntype Command = {\n    command: string;\n    args: Array<any>;\n};\n\nexport const operations: {[_: string]: string} = {\n\n    /*\n     * { command: 'setStyle', args: [stylesheet] }\n     */\n    setStyle: 'setStyle',\n\n    /*\n     * { command: 'addLayer', args: [layer, 'beforeLayerId'] }\n     */\n    addLayer: 'addLayer',\n\n    /*\n     * { command: 'removeLayer', args: ['layerId'] }\n     */\n    removeLayer: 'removeLayer',\n\n    /*\n     * { command: 'setPaintProperty', args: ['layerId', 'prop', value] }\n     */\n    setPaintProperty: 'setPaintProperty',\n\n    /*\n     * { command: 'setLayoutProperty', args: ['layerId', 'prop', value] }\n     */\n    setLayoutProperty: 'setLayoutProperty',\n\n    /*\n     * { command: 'setFilter', args: ['layerId', filter] }\n     */\n    setFilter: 'setFilter',\n\n    /*\n     * { command: 'addSource', args: ['sourceId', source] }\n     */\n    addSource: 'addSource',\n\n    /*\n     * { command: 'removeSource', args: ['sourceId'] }\n     */\n    removeSource: 'removeSource',\n\n    /*\n     * { command: 'setGeoJSONSourceData', args: ['sourceId', data] }\n     */\n    setGeoJSONSourceData: 'setGeoJSONSourceData',\n\n    /*\n     * { command: 'setLayerZoomRange', args: ['layerId', 0, 22] }\n     */\n    setLayerZoomRange: 'setLayerZoomRange',\n\n    /*\n     * { command: 'setLayerProperty', args: ['layerId', 'prop', value] }\n     */\n    setLayerProperty: 'setLayerProperty',\n\n    /*\n     * { command: 'setCenter', args: [[lon, lat]] }\n     */\n    setCenter: 'setCenter',\n\n    /*\n     * { command: 'setZoom', args: [zoom] }\n     */\n    setZoom: 'setZoom',\n\n    /*\n     * { command: 'setBearing', args: [bearing] }\n     */\n    setBearing: 'setBearing',\n\n    /*\n     * { command: 'setPitch', args: [pitch] }\n     */\n    setPitch: 'setPitch',\n\n    /*\n     * { command: 'setSprite', args: ['spriteUrl'] }\n     */\n    setSprite: 'setSprite',\n\n    /*\n     * { command: 'setGlyphs', args: ['glyphsUrl'] }\n     */\n    setGlyphs: 'setGlyphs',\n\n    /*\n     * { command: 'setTransition', args: [transition] }\n     */\n    setTransition: 'setTransition',\n\n    /*\n     * { command: 'setLighting', args: [lightProperties] }\n     */\n    setLight: 'setLight',\n\n    /*\n     * { command: 'setTerrain', args: [terrainProperties] }\n     */\n    setTerrain: 'setTerrain',\n\n    /*\n     *  { command: 'setFog', args: [fogProperties] }\n     */\n    setFog: 'setFog',\n\n    /*\n     *  { command: 'setProjection', args: [projectionProperties] }\n     */\n    setProjection: 'setProjection'\n};\n\nfunction addSource(sourceId, after, commands) {\n    commands.push({command: operations.addSource, args: [sourceId, after[sourceId]]});\n}\n\nfunction removeSource(sourceId, commands, sourcesRemoved) {\n    commands.push({command: operations.removeSource, args: [sourceId]});\n    sourcesRemoved[sourceId] = true;\n}\n\nfunction updateSource(sourceId, after, commands, sourcesRemoved) {\n    removeSource(sourceId, commands, sourcesRemoved);\n    addSource(sourceId, after, commands);\n}\n\nfunction canUpdateGeoJSON(before, after, sourceId) {\n    let prop;\n    for (prop in before[sourceId]) {\n        if (!before[sourceId].hasOwnProperty(prop)) continue;\n        if (prop !== 'data' && !isEqual(before[sourceId][prop], after[sourceId][prop])) {\n            return false;\n        }\n    }\n    for (prop in after[sourceId]) {\n        if (!after[sourceId].hasOwnProperty(prop)) continue;\n        if (prop !== 'data' && !isEqual(before[sourceId][prop], after[sourceId][prop])) {\n            return false;\n        }\n    }\n    return true;\n}\n\nfunction diffSources(before, after, commands, sourcesRemoved) {\n    before = before || {};\n    after = after || {};\n\n    let sourceId;\n\n    // look for sources to remove\n    for (sourceId in before) {\n        if (!before.hasOwnProperty(sourceId)) continue;\n        if (!after.hasOwnProperty(sourceId)) {\n            removeSource(sourceId, commands, sourcesRemoved);\n        }\n    }\n\n    // look for sources to add/update\n    for (sourceId in after) {\n        if (!after.hasOwnProperty(sourceId)) continue;\n        if (!before.hasOwnProperty(sourceId)) {\n            addSource(sourceId, after, commands);\n        } else if (!isEqual(before[sourceId], after[sourceId])) {\n            if (before[sourceId].type === 'geojson' && after[sourceId].type === 'geojson' && canUpdateGeoJSON(before, after, sourceId)) {\n                commands.push({command: operations.setGeoJSONSourceData, args: [sourceId, after[sourceId].data]});\n            } else {\n                // no update command, must remove then add\n                updateSource(sourceId, after, commands, sourcesRemoved);\n            }\n        }\n    }\n}\n\nfunction diffLayerPropertyChanges(before, after, commands, layerId, klass, command) {\n    before = before || {};\n    after = after || {};\n\n    let prop;\n\n    for (prop in before) {\n        if (!before.hasOwnProperty(prop)) continue;\n        if (!isEqual(before[prop], after[prop])) {\n            commands.push({command, args: [layerId, prop, after[prop], klass]});\n        }\n    }\n    for (prop in after) {\n        if (!after.hasOwnProperty(prop) || before.hasOwnProperty(prop)) continue;\n        if (!isEqual(before[prop], after[prop])) {\n            commands.push({command, args: [layerId, prop, after[prop], klass]});\n        }\n    }\n}\n\nfunction pluckId(layer) {\n    return layer.id;\n}\nfunction indexById(group, layer) {\n    group[layer.id] = layer;\n    return group;\n}\n\nfunction diffLayers(before, after, commands) {\n    before = before || [];\n    after = after || [];\n\n    // order of layers by id\n    const beforeOrder = before.map(pluckId);\n    const afterOrder = after.map(pluckId);\n\n    // index of layer by id\n    const beforeIndex = before.reduce(indexById, {});\n    const afterIndex = after.reduce(indexById, {});\n\n    // track order of layers as if they have been mutated\n    const tracker = beforeOrder.slice();\n\n    // layers that have been added do not need to be diffed\n    const clean = Object.create(null);\n\n    let i, d, layerId, beforeLayer, afterLayer, insertBeforeLayerId, prop;\n\n    // remove layers\n    for (i = 0, d = 0; i < beforeOrder.length; i++) {\n        layerId = beforeOrder[i];\n        if (!afterIndex.hasOwnProperty(layerId)) {\n            commands.push({command: operations.removeLayer, args: [layerId]});\n            tracker.splice(tracker.indexOf(layerId, d), 1);\n        } else {\n            // limit where in tracker we need to look for a match\n            d++;\n        }\n    }\n\n    // add/reorder layers\n    for (i = 0, d = 0; i < afterOrder.length; i++) {\n        // work backwards as insert is before an existing layer\n        layerId = afterOrder[afterOrder.length - 1 - i];\n\n        if (tracker[tracker.length - 1 - i] === layerId) continue;\n\n        if (beforeIndex.hasOwnProperty(layerId)) {\n            // remove the layer before we insert at the correct position\n            commands.push({command: operations.removeLayer, args: [layerId]});\n            tracker.splice(tracker.lastIndexOf(layerId, tracker.length - d), 1);\n        } else {\n            // limit where in tracker we need to look for a match\n            d++;\n        }\n\n        // add layer at correct position\n        insertBeforeLayerId = tracker[tracker.length - i];\n        commands.push({command: operations.addLayer, args: [afterIndex[layerId], insertBeforeLayerId]});\n        tracker.splice(tracker.length - i, 0, layerId);\n        clean[layerId] = true;\n    }\n\n    // update layers\n    for (i = 0; i < afterOrder.length; i++) {\n        layerId = afterOrder[i];\n        beforeLayer = beforeIndex[layerId];\n        afterLayer = afterIndex[layerId];\n\n        // no need to update if previously added (new or moved)\n        if (clean[layerId] || isEqual(beforeLayer, afterLayer)) continue;\n\n        // If source, source-layer, or type have changes, then remove the layer\n        // and add it back 'from scratch'.\n        if (!isEqual(beforeLayer.source, afterLayer.source) || !isEqual(beforeLayer['source-layer'], afterLayer['source-layer']) || !isEqual(beforeLayer.type, afterLayer.type)) {\n            commands.push({command: operations.removeLayer, args: [layerId]});\n            // we add the layer back at the same position it was already in, so\n            // there's no need to update the `tracker`\n            insertBeforeLayerId = tracker[tracker.lastIndexOf(layerId) + 1];\n            commands.push({command: operations.addLayer, args: [afterLayer, insertBeforeLayerId]});\n            continue;\n        }\n\n        // layout, paint, filter, minzoom, maxzoom\n        diffLayerPropertyChanges(beforeLayer.layout, afterLayer.layout, commands, layerId, null, operations.setLayoutProperty);\n        diffLayerPropertyChanges(beforeLayer.paint, afterLayer.paint, commands, layerId, null, operations.setPaintProperty);\n        if (!isEqual(beforeLayer.filter, afterLayer.filter)) {\n            commands.push({command: operations.setFilter, args: [layerId, afterLayer.filter]});\n        }\n        if (!isEqual(beforeLayer.minzoom, afterLayer.minzoom) || !isEqual(beforeLayer.maxzoom, afterLayer.maxzoom)) {\n            commands.push({command: operations.setLayerZoomRange, args: [layerId, afterLayer.minzoom, afterLayer.maxzoom]});\n        }\n\n        // handle all other layer props, including paint.*\n        for (prop in beforeLayer) {\n            if (!beforeLayer.hasOwnProperty(prop)) continue;\n            if (prop === 'layout' || prop === 'paint' || prop === 'filter' ||\n                prop === 'metadata' || prop === 'minzoom' || prop === 'maxzoom') continue;\n            if (prop.indexOf('paint.') === 0) {\n                diffLayerPropertyChanges(beforeLayer[prop], afterLayer[prop], commands, layerId, prop.slice(6), operations.setPaintProperty);\n            } else if (!isEqual(beforeLayer[prop], afterLayer[prop])) {\n                commands.push({command: operations.setLayerProperty, args: [layerId, prop, afterLayer[prop]]});\n            }\n        }\n        for (prop in afterLayer) {\n            if (!afterLayer.hasOwnProperty(prop) || beforeLayer.hasOwnProperty(prop)) continue;\n            if (prop === 'layout' || prop === 'paint' || prop === 'filter' ||\n                prop === 'metadata' || prop === 'minzoom' || prop === 'maxzoom') continue;\n            if (prop.indexOf('paint.') === 0) {\n                diffLayerPropertyChanges(beforeLayer[prop], afterLayer[prop], commands, layerId, prop.slice(6), operations.setPaintProperty);\n            } else if (!isEqual(beforeLayer[prop], afterLayer[prop])) {\n                commands.push({command: operations.setLayerProperty, args: [layerId, prop, afterLayer[prop]]});\n            }\n        }\n    }\n}\n\n/**\n * Diff two stylesheet\n *\n * Creates semanticly aware diffs that can easily be applied at runtime.\n * Operations produced by the diff closely resemble the mapbox-gl-js API. Any\n * error creating the diff will fall back to the 'setStyle' operation.\n *\n * Example diff:\n * [\n *     { command: 'setConstant', args: ['@water', '#0000FF'] },\n *     { command: 'setPaintProperty', args: ['background', 'background-color', 'black'] }\n * ]\n *\n * @private\n * @param {*} [before] stylesheet to compare from\n * @param {*} after stylesheet to compare to\n * @returns Array list of changes\n */\nexport default function diffStyles(before: StyleSpecification, after: StyleSpecification): Array<Command> {\n    if (!before) return [{command: operations.setStyle, args: [after]}];\n\n    let commands = [];\n\n    try {\n        // Handle changes to top-level properties\n        if (!isEqual(before.version, after.version)) {\n            return [{command: operations.setStyle, args: [after]}];\n        }\n        if (!isEqual(before.center, after.center)) {\n            commands.push({command: operations.setCenter, args: [after.center]});\n        }\n        if (!isEqual(before.zoom, after.zoom)) {\n            commands.push({command: operations.setZoom, args: [after.zoom]});\n        }\n        if (!isEqual(before.bearing, after.bearing)) {\n            commands.push({command: operations.setBearing, args: [after.bearing]});\n        }\n        if (!isEqual(before.pitch, after.pitch)) {\n            commands.push({command: operations.setPitch, args: [after.pitch]});\n        }\n        if (!isEqual(before.sprite, after.sprite)) {\n            commands.push({command: operations.setSprite, args: [after.sprite]});\n        }\n        if (!isEqual(before.glyphs, after.glyphs)) {\n            commands.push({command: operations.setGlyphs, args: [after.glyphs]});\n        }\n        if (!isEqual(before.transition, after.transition)) {\n            commands.push({command: operations.setTransition, args: [after.transition]});\n        }\n        if (!isEqual(before.light, after.light)) {\n            commands.push({command: operations.setLight, args: [after.light]});\n        }\n        if (!isEqual(before.fog, after.fog)) {\n            commands.push({command: operations.setFog, args: [after.fog]});\n        }\n        if (!isEqual(before.projection, after.projection)) {\n            commands.push({command: operations.setProjection, args: [after.projection]});\n        }\n\n        // Handle changes to `sources`\n        // If a source is to be removed, we also--before the removeSource\n        // command--need to remove all the style layers that depend on it.\n        const sourcesRemoved = {};\n\n        // First collect the {add,remove}Source commands\n        const removeOrAddSourceCommands = [];\n        diffSources(before.sources, after.sources, removeOrAddSourceCommands, sourcesRemoved);\n\n        // Push a removeLayer command for each style layer that depends on a\n        // source that's being removed.\n        // Also, exclude any such layers them from the input to `diffLayers`\n        // below, so that diffLayers produces the appropriate `addLayers`\n        // command\n        const beforeLayers = [];\n        if (before.layers) {\n            before.layers.forEach((layer) => {\n                if (layer.source && sourcesRemoved[layer.source]) {\n                    commands.push({command: operations.removeLayer, args: [layer.id]});\n                } else {\n                    beforeLayers.push(layer);\n                }\n            });\n        }\n\n        // Remove the terrain if the source for that terrain is being removed\n        let beforeTerrain = before.terrain;\n        if (beforeTerrain) {\n            if (sourcesRemoved[beforeTerrain.source]) {\n                commands.push({command: operations.setTerrain, args: [undefined]});\n                beforeTerrain = undefined;\n            }\n        }\n\n        commands = commands.concat(removeOrAddSourceCommands);\n\n        // Even though terrain is a top-level property\n        // Its like a layer in the sense that it depends on a source being present.\n        if (!isEqual(beforeTerrain, after.terrain)) {\n            commands.push({command: operations.setTerrain, args: [after.terrain]});\n        }\n\n        // Handle changes to `layers`\n        diffLayers(beforeLayers, after.layers, commands);\n\n    } catch (e) {\n        // fall back to setStyle\n        console.warn('Unable to compute style diff:', e);\n        commands = [{command: operations.setStyle, args: [after]}];\n    }\n\n    return commands;\n}\n", "// @flow\n\n// Note: Do not inherit from Error. It breaks when transpiling to ES5.\n\nexport default class ValidationError {\n    message: string;\n    identifier: ?string;\n    line: ?number;\n\n    constructor(key: ?string, value: ?{ __line__: number }, message: string, identifier: ?string) {\n        this.message = (key ? `${key}: ` : '') + message;\n        if (identifier) this.identifier = identifier;\n\n        if (value !== null && value !== undefined && value.__line__) {\n            this.line = value.__line__;\n        }\n    }\n}\n", "// @flow\n\n// Note: Do not inherit from Error. It breaks when transpiling to ES5.\n\nexport default class ParsingError {\n    message: string;\n    error: Error;\n    line: number;\n\n    constructor(error: Error) {\n        this.error = error;\n        this.message = error.message;\n        const match = error.message.match(/line (\\d+)/);\n        this.line = match ? parseInt(match[1], 10) : 0;\n    }\n}\n", "// @flow\n\nimport ValidationError from '../error/validation_error.js';\nimport getType from '../util/get_type.js';\nimport validateSpec from './validate.js';\n\nimport type {ValidationOptions} from './validate.js';\n\ntype Options = ValidationOptions & {\n    objectElementValidators?: Function;\n};\n\nexport default function validateObject(options: Options): Array<ValidationError> {\n    const key = options.key;\n    const object = options.value;\n    const elementSpecs = options.valueSpec || {};\n    const elementValidators = options.objectElementValidators || {};\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    let errors = [];\n\n    const type = getType(object);\n    if (type !== 'object') {\n        return [new ValidationError(key, object, `object expected, ${type} found`)];\n    }\n\n    for (const objectKey in object) {\n        const elementSpecKey = objectKey.split('.')[0]; // treat 'paint.*' as 'paint'\n        const elementSpec = elementSpecs[elementSpecKey] || elementSpecs['*'];\n\n        let validateElement;\n        if (elementValidators[elementSpecKey]) {\n            validateElement = elementValidators[elementSpecKey];\n        } else if (elementSpecs[elementSpecKey]) {\n            validateElement = validateSpec;\n        } else if (elementValidators['*']) {\n            validateElement = elementValidators['*'];\n        } else if (elementSpecs['*']) {\n            validateElement = validateSpec;\n        }\n\n        if (!validateElement) {\n            errors.push(new ValidationError(key, object[objectKey], `unknown property \"${objectKey}\"`));\n            continue;\n        }\n\n        errors = errors.concat(validateElement({\n            key: (key ? `${key}.` : key) + objectKey,\n            value: object[objectKey],\n            valueSpec: elementSpec,\n            style,\n            styleSpec,\n            object,\n            objectKey\n        // $FlowFixMe[extra-arg]\n        }, object));\n    }\n\n    for (const elementSpecKey in elementSpecs) {\n        // Don't check `required` when there's a custom validator for that property.\n        if (elementValidators[elementSpecKey]) {\n            continue;\n        }\n\n        if (elementSpecs[elementSpecKey].required && elementSpecs[elementSpecKey]['default'] === undefined && object[elementSpecKey] === undefined) {\n            errors.push(new ValidationError(key, object, `missing required property \"${elementSpecKey}\"`));\n        }\n    }\n\n    return errors;\n}\n", "// @flow\n\nimport getType from '../util/get_type.js';\nimport validate from './validate.js';\nimport ValidationError from '../error/validation_error.js';\n\nimport type {ValidationOptions} from './validate.js';\n\ntype Options = ValidationOptions & {\n    arrayElementValidator: Function;\n};\n\nexport default function validateArray(options: Options): Array<ValidationError> {\n    const array = options.value;\n    const arraySpec = options.valueSpec;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const key = options.key;\n    const validateArrayElement = options.arrayElementValidator || validate;\n\n    if (getType(array) !== 'array') {\n        return [new ValidationError(key, array, `array expected, ${getType(array)} found`)];\n    }\n\n    if (arraySpec.length && array.length !== arraySpec.length) {\n        return [new ValidationError(key, array, `array length ${arraySpec.length} expected, length ${array.length} found`)];\n    }\n\n    if (arraySpec['min-length'] && array.length < arraySpec['min-length']) {\n        return [new ValidationError(key, array, `array length at least ${arraySpec['min-length']} expected, length ${array.length} found`)];\n    }\n\n    let arrayElementSpec = {\n        \"type\": arraySpec.value,\n        \"values\": arraySpec.values,\n        \"minimum\": arraySpec.minimum,\n        \"maximum\": arraySpec.maximum,\n        function: undefined\n    };\n\n    if (styleSpec.$version < 7) {\n        arrayElementSpec.function = arraySpec.function;\n    }\n\n    if (getType(arraySpec.value) === 'object') {\n        arrayElementSpec = arraySpec.value;\n    }\n\n    let errors = [];\n    for (let i = 0; i < array.length; i++) {\n        errors = errors.concat(validateArrayElement({\n            array,\n            arrayIndex: i,\n            value: array[i],\n            valueSpec: arrayElementSpec,\n            style,\n            styleSpec,\n            key: `${key}[${i}]`\n        }));\n    }\n    return errors;\n}\n", "// @flow\n\nimport getType from '../util/get_type.js';\nimport ValidationError from '../error/validation_error.js';\n\nimport type {ValidationOptions} from './validate.js';\n\ntype Options = ValidationOptions & {\n    arrayIndex: number;\n}\n\nexport default function validateNumber(options: Options): Array<ValidationError> {\n    const key = options.key;\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    let type = getType(value);\n\n    // eslint-disable-next-line no-self-compare\n    if (type === 'number' && value !== value) {\n        type = 'NaN';\n    }\n\n    if (type !== 'number') {\n        return [new ValidationError(key, value, `number expected, ${type} found`)];\n    }\n\n    if ('minimum' in valueSpec) {\n        let specMin = valueSpec.minimum;\n        if (getType(valueSpec.minimum) === 'array') {\n            const i = options.arrayIndex;\n            specMin = valueSpec.minimum[i];\n        }\n        if (value < specMin) {\n            return [new ValidationError(key, value, `${value} is less than the minimum value ${specMin}`)];\n        }\n    }\n\n    if ('maximum' in valueSpec) {\n        let specMax = valueSpec.maximum;\n        if (getType(valueSpec.maximum) === 'array') {\n            const i = options.arrayIndex;\n            specMax = valueSpec.maximum[i];\n        }\n        if (value > specMax) {\n            return [new ValidationError(key, value, `${value} is greater than the maximum value ${specMax}`)];\n        }\n    }\n\n    return [];\n}\n", "// @flow\n\nimport ValidationError from '../error/validation_error.js';\nimport getType from '../util/get_type.js';\nimport validate from './validate.js';\nimport validateObject from './validate_object.js';\nimport validateArray from './validate_array.js';\nimport validateNumber from './validate_number.js';\nimport {isExpression} from '../expression/index.js';\nimport {unbundle, deepUnbundle} from '../util/unbundle_jsonlint.js';\nimport {\n    supportsPropertyExpression,\n    supportsZoomExpression,\n    supportsInterpolation\n} from '../util/properties.js';\n\nimport type {ValidationOptions} from './validate.js';\n\nexport default function validateFunction(options: ValidationOptions): any {\n    const functionValueSpec = options.valueSpec;\n    const functionType = unbundle(options.value.type);\n    let stopKeyType;\n    let stopDomainValues: {[string | number]: boolean} = {};\n    let previousStopDomainValue;\n    let previousStopDomainZoom;\n\n    const isZoomFunction = functionType !== 'categorical' && options.value.property === undefined;\n    const isPropertyFunction = !isZoomFunction;\n    const isZoomAndPropertyFunction =\n        getType(options.value.stops) === 'array' &&\n        getType(options.value.stops[0]) === 'array' &&\n        getType(options.value.stops[0][0]) === 'object';\n\n    const errors = validateObject({\n        key: options.key,\n        value: options.value,\n        valueSpec: options.styleSpec.function,\n        style: options.style,\n        styleSpec: options.styleSpec,\n        objectElementValidators: {\n            stops: validateFunctionStops,\n            default: validateFunctionDefault\n        }\n    });\n\n    if (functionType === 'identity' && isZoomFunction) {\n        errors.push(new ValidationError(options.key, options.value, 'missing required property \"property\"'));\n    }\n\n    if (functionType !== 'identity' && !options.value.stops) {\n        errors.push(new ValidationError(options.key, options.value, 'missing required property \"stops\"'));\n    }\n\n    if (functionType === 'exponential' && options.valueSpec.expression && !supportsInterpolation(options.valueSpec)) {\n        errors.push(new ValidationError(options.key, options.value, 'exponential functions not supported'));\n    }\n\n    if (options.styleSpec.$version >= 8) {\n        if (isPropertyFunction && !supportsPropertyExpression(options.valueSpec)) {\n            errors.push(new ValidationError(options.key, options.value, 'property functions not supported'));\n        } else if (isZoomFunction && !supportsZoomExpression(options.valueSpec)) {\n            errors.push(new ValidationError(options.key, options.value, 'zoom functions not supported'));\n        }\n    }\n\n    if ((functionType === 'categorical' || isZoomAndPropertyFunction) && options.value.property === undefined) {\n        errors.push(new ValidationError(options.key, options.value, '\"property\" property is required'));\n    }\n\n    return errors;\n\n    function validateFunctionStops(options: ValidationOptions) {\n        if (functionType === 'identity') {\n            return [new ValidationError(options.key, options.value, 'identity function may not have a \"stops\" property')];\n        }\n\n        let errors = [];\n        const value = options.value;\n\n        errors = errors.concat(validateArray({\n            key: options.key,\n            value,\n            valueSpec: options.valueSpec,\n            style: options.style,\n            styleSpec: options.styleSpec,\n            arrayElementValidator: validateFunctionStop\n        }));\n\n        if (getType(value) === 'array' && value.length === 0) {\n            errors.push(new ValidationError(options.key, value, 'array must have at least one stop'));\n        }\n\n        return errors;\n    }\n\n    function validateFunctionStop(options: ValidationOptions) {\n        let errors = [];\n        const value = options.value;\n        const key = options.key;\n\n        if (getType(value) !== 'array') {\n            return [new ValidationError(key, value, `array expected, ${getType(value)} found`)];\n        }\n\n        if (value.length !== 2) {\n            return [new ValidationError(key, value, `array length 2 expected, length ${value.length} found`)];\n        }\n\n        if (isZoomAndPropertyFunction) {\n            if (getType(value[0]) !== 'object') {\n                return [new ValidationError(key, value, `object expected, ${getType(value[0])} found`)];\n            }\n            if (value[0].zoom === undefined) {\n                return [new ValidationError(key, value, 'object stop key must have zoom')];\n            }\n            if (value[0].value === undefined) {\n                return [new ValidationError(key, value, 'object stop key must have value')];\n            }\n\n            const nextStopDomainZoom = unbundle(value[0].zoom);\n            if (typeof nextStopDomainZoom !== 'number') {\n                return [new ValidationError(key, value[0].zoom, 'stop zoom values must be numbers')];\n            }\n\n            if (previousStopDomainZoom && previousStopDomainZoom > nextStopDomainZoom) {\n                return [new ValidationError(key, value[0].zoom, 'stop zoom values must appear in ascending order')];\n            }\n            if (nextStopDomainZoom !== previousStopDomainZoom) {\n                previousStopDomainZoom = nextStopDomainZoom;\n                previousStopDomainValue = undefined;\n                stopDomainValues = {};\n            }\n            errors = errors.concat(validateObject({\n                key: `${key}[0]`,\n                value: value[0],\n                valueSpec: {zoom: {}},\n                style: options.style,\n                styleSpec: options.styleSpec,\n                objectElementValidators: {zoom: validateNumber, value: validateStopDomainValue}\n            }));\n        } else {\n            errors = errors.concat(validateStopDomainValue({\n                key: `${key}[0]`,\n                value: value[0],\n                valueSpec: {},\n                style: options.style,\n                styleSpec: options.styleSpec\n            }, value));\n        }\n\n        if (isExpression(deepUnbundle(value[1]))) {\n            return errors.concat([new ValidationError(`${key}[1]`, value[1], 'expressions are not allowed in function stops.')]);\n        }\n\n        return errors.concat(validate({\n            key: `${key}[1]`,\n            value: value[1],\n            valueSpec: functionValueSpec,\n            style: options.style,\n            styleSpec: options.styleSpec\n        }));\n    }\n\n    function validateStopDomainValue(options: ValidationOptions, stop) {\n        const type = getType(options.value);\n        const value = unbundle(options.value);\n\n        const reportValue = options.value !== null ? options.value : stop;\n\n        if (!stopKeyType) {\n            stopKeyType = type;\n        } else if (type !== stopKeyType) {\n            return [new ValidationError(options.key, reportValue, `${type} stop domain type must match previous stop domain type ${stopKeyType}`)];\n        }\n\n        if (type !== 'number' && type !== 'string' && type !== 'boolean' && typeof value !== 'number' && typeof value !== 'string' && typeof value !== 'boolean') {\n            return [new ValidationError(options.key, reportValue, 'stop domain value must be a number, string, or boolean')];\n        }\n\n        if (type !== 'number' && functionType !== 'categorical') {\n            let message = `number expected, ${type} found`;\n            if (supportsPropertyExpression(functionValueSpec) && functionType === undefined) {\n                message += '\\nIf you intended to use a categorical function, specify `\"type\": \"categorical\"`.';\n            }\n            return [new ValidationError(options.key, reportValue, message)];\n        }\n\n        if (functionType === 'categorical' && type === 'number' && (typeof value !== 'number' || !isFinite(value) || Math.floor(value) !== value)) {\n            return [new ValidationError(options.key, reportValue, `integer expected, found ${String(value)}`)];\n        }\n\n        if (functionType !== 'categorical' && type === 'number' && typeof value === 'number' && typeof previousStopDomainValue === 'number' && previousStopDomainValue !== undefined && value < previousStopDomainValue) {\n            return [new ValidationError(options.key, reportValue, 'stop domain values must appear in ascending order')];\n        } else {\n            previousStopDomainValue = value;\n        }\n\n        if (functionType === 'categorical' && (value: any) in stopDomainValues) {\n            return [new ValidationError(options.key, reportValue, 'stop domain values must be unique')];\n        } else {\n            stopDomainValues[(value: any)] = true;\n        }\n\n        return [];\n    }\n\n    function validateFunctionDefault(options: ValidationOptions) {\n        return validate({\n            key: options.key,\n            value: options.value,\n            valueSpec: functionValueSpec,\n            style: options.style,\n            styleSpec: options.styleSpec\n        });\n    }\n}\n", "// @flow\n\nimport ValidationError from '../error/validation_error.js';\n\nimport {createExpression, createPropertyExpression} from '../expression/index.js';\nimport {deepUnbundle} from '../util/unbundle_jsonlint.js';\nimport {isStateConstant, isGlobalPropertyConstant, isFeatureConstant} from '../expression/is_constant.js';\nimport CompoundExpression from '../expression/compound_expression.js';\n\nimport type {Expression} from '../expression/expression.js';\n\nexport default function validateExpression(options: any): Array<ValidationError> {\n    const expression = (options.expressionContext === 'property' ? createPropertyExpression : createExpression)(deepUnbundle(options.value), options.valueSpec);\n    if (expression.result === 'error') {\n        return expression.value.map((error) => {\n            return new ValidationError(`${options.key}${error.key}`, options.value, error.message);\n        });\n    }\n\n    const expressionObj = (expression.value: any).expression || (expression.value: any)._styleExpression.expression;\n\n    if (options.expressionContext === 'property' && (options.propertyKey === 'text-font') &&\n        !expressionObj.outputDefined()) {\n        return [new ValidationError(options.key, options.value, `Invalid data expression for \"${options.propertyKey}\". Output values must be contained as literals within the expression.`)];\n    }\n\n    if (options.expressionContext === 'property' && options.propertyType === 'layout' &&\n        (!isStateConstant(expressionObj))) {\n        return [new ValidationError(options.key, options.value, '\"feature-state\" data expressions are not supported with layout properties.')];\n    }\n\n    if (options.expressionContext === 'filter') {\n        return disallowedFilterParameters(expressionObj, options);\n    }\n\n    if (options.expressionContext && options.expressionContext.indexOf('cluster') === 0) {\n        if (!isGlobalPropertyConstant(expressionObj, ['zoom', 'feature-state'])) {\n            return [new ValidationError(options.key, options.value, '\"zoom\" and \"feature-state\" expressions are not supported with cluster properties.')];\n        }\n        if (options.expressionContext === 'cluster-initial' && !isFeatureConstant(expressionObj)) {\n            return [new ValidationError(options.key, options.value, 'Feature data expressions are not supported with initial expression part of cluster properties.')];\n        }\n    }\n\n    return [];\n}\n\nexport function disallowedFilterParameters(e: Expression, options: any): Array<ValidationError> {\n    const disallowedParameters = new Set([\n        'zoom',\n        'feature-state',\n        'pitch',\n        'distance-from-center'\n    ]);\n\n    if (options.valueSpec && options.valueSpec.expression) {\n        for (const param of options.valueSpec.expression.parameters) {\n            disallowedParameters.delete(param);\n        }\n    }\n\n    if (disallowedParameters.size === 0) {\n        return [];\n    }\n    const errors = [];\n\n    if (e instanceof CompoundExpression) {\n        if (disallowedParameters.has(e.name)) {\n            return [new ValidationError(options.key, options.value, `[\"${e.name}\"] expression is not supported in a filter for a ${options.object.type} layer with id: ${options.object.id}`)];\n        }\n    }\n    e.eachChild((arg) => {\n        errors.push(...disallowedFilterParameters(arg, options));\n    });\n\n    return errors;\n}\n", "// @flow\n\nimport getType from '../util/get_type.js';\nimport ValidationError from '../error/validation_error.js';\n\nimport type {ValidationOptions} from './validate.js';\n\nexport default function validateBoolean(options: ValidationOptions): Array<ValidationError> {\n    const value = options.value;\n    const key = options.key;\n    const type = getType(value);\n\n    if (type !== 'boolean') {\n        return [new ValidationError(key, value, `boolean expected, ${type} found`)];\n    }\n\n    return [];\n}\n", "// @flow\n\nimport ValidationError from '../error/validation_error.js';\nimport getType from '../util/get_type.js';\nimport {parseCSSColor} from 'csscolorparser';\n\nimport type {ValidationOptions} from './validate.js';\n\nexport default function validateColor(options: ValidationOptions): Array<ValidationError> {\n    const key = options.key;\n    const value = options.value;\n    const type = getType(value);\n\n    if (type !== 'string') {\n        return [new ValidationError(key, value, `color expected, ${type} found`)];\n    }\n\n    if (parseCSSColor(value) === null) {\n        return [new ValidationError(key, value, `color expected, \"${value}\" found`)];\n    }\n\n    return [];\n}\n", "// @flow\n\nimport ValidationError from '../error/validation_error.js';\nimport {unbundle} from '../util/unbundle_jsonlint.js';\n\nimport type {ValidationOptions} from './validate.js';\n\nexport default function validateEnum(options: ValidationOptions): Array<ValidationError> {\n    const key = options.key;\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    const errors = [];\n\n    if (Array.isArray(valueSpec.values)) { // <=v7\n        if (valueSpec.values.indexOf(unbundle(value)) === -1) {\n            errors.push(new ValidationError(key, value, `expected one of [${valueSpec.values.join(', ')}], ${JSON.stringify(value)} found`));\n        }\n    } else { // >=v8\n        if (Object.keys(valueSpec.values).indexOf(unbundle(value)) === -1) {\n            errors.push(new ValidationError(key, value, `expected one of [${Object.keys(valueSpec.values).join(', ')}], ${JSON.stringify(value)} found`));\n        }\n    }\n    return errors;\n}\n", "// @flow\n\nimport ValidationError from '../error/validation_error.js';\nimport validateExpression from './validate_expression.js';\nimport validateEnum from './validate_enum.js';\nimport getType from '../util/get_type.js';\nimport {unbundle, deepUnbundle} from '../util/unbundle_jsonlint.js';\nimport extend from '../util/extend.js';\nimport {isExpressionFilter} from '../feature_filter/index.js';\n\nimport type {ValidationOptions} from './validate.js';\n\ntype Options = ValidationOptions & {\n    layerType: string;\n}\n\nexport default function validateFilter(options: Options): Array<ValidationError> {\n    if (isExpressionFilter(deepUnbundle(options.value))) {\n        // We default to a layerType of `fill` because that points to a non-dynamic filter definition within the style-spec.\n        const layerType = options.layerType || 'fill';\n\n        return validateExpression(extend({}, options, {\n            expressionContext: 'filter',\n            valueSpec: options.styleSpec[`filter_${layerType}`]\n        }));\n    } else {\n        return validateNonExpressionFilter(options);\n    }\n}\n\nfunction validateNonExpressionFilter(options) {\n    const value = options.value;\n    const key = options.key;\n\n    if (getType(value) !== 'array') {\n        return [new ValidationError(key, value, `array expected, ${getType(value)} found`)];\n    }\n\n    const styleSpec = options.styleSpec;\n    let type;\n\n    let errors = [];\n\n    if (value.length < 1) {\n        return [new ValidationError(key, value, 'filter array must have at least 1 element')];\n    }\n\n    errors = errors.concat(validateEnum({\n        key: `${key}[0]`,\n        value: value[0],\n        valueSpec: styleSpec.filter_operator,\n        style: options.style,\n        styleSpec: options.styleSpec\n    }));\n\n    switch (unbundle(value[0])) {\n    case '<':\n    case '<=':\n    case '>':\n    case '>=':\n        if (value.length >= 2 && unbundle(value[1]) === '$type') {\n            errors.push(new ValidationError(key, value, `\"$type\" cannot be use with operator \"${value[0]}\"`));\n        }\n        /* falls through */\n    case '==':\n    case '!=':\n        if (value.length !== 3) {\n            errors.push(new ValidationError(key, value, `filter array for operator \"${value[0]}\" must have 3 elements`));\n        }\n        /* falls through */\n    case 'in':\n    case '!in':\n        if (value.length >= 2) {\n            type = getType(value[1]);\n            if (type !== 'string') {\n                errors.push(new ValidationError(`${key}[1]`, value[1], `string expected, ${type} found`));\n            }\n        }\n        for (let i = 2; i < value.length; i++) {\n            type = getType(value[i]);\n            if (unbundle(value[1]) === '$type') {\n                errors = errors.concat(validateEnum({\n                    key: `${key}[${i}]`,\n                    value: value[i],\n                    valueSpec: styleSpec.geometry_type,\n                    style: options.style,\n                    styleSpec: options.styleSpec\n                }));\n            } else if (type !== 'string' && type !== 'number' && type !== 'boolean') {\n                errors.push(new ValidationError(`${key}[${i}]`, value[i], `string, number, or boolean expected, ${type} found`));\n            }\n        }\n        break;\n\n    case 'any':\n    case 'all':\n    case 'none':\n        for (let i = 1; i < value.length; i++) {\n            errors = errors.concat(validateNonExpressionFilter({\n                key: `${key}[${i}]`,\n                value: value[i],\n                style: options.style,\n                styleSpec: options.styleSpec\n            }));\n        }\n        break;\n\n    case 'has':\n    case '!has':\n        type = getType(value[1]);\n        if (value.length !== 2) {\n            errors.push(new ValidationError(key, value, `filter array for \"${value[0]}\" operator must have 2 elements`));\n        } else if (type !== 'string') {\n            errors.push(new ValidationError(`${key}[1]`, value[1], `string expected, ${type} found`));\n        }\n        break;\n    case 'within':\n        type = getType(value[1]);\n        if (value.length !== 2) {\n            errors.push(new ValidationError(key, value, `filter array for \"${value[0]}\" operator must have 2 elements`));\n        } else if (type !== 'object') {\n            errors.push(new ValidationError(`${key}[1]`, value[1], `object expected, ${type} found`));\n        }\n        break;\n    }\n    return errors;\n}\n", "// @flow\n\nimport validate from './validate.js';\nimport ValidationError from '../error/validation_error.js';\nimport getType from '../util/get_type.js';\nimport {isFunction} from '../function/index.js';\nimport {unbundle, deepUnbundle} from '../util/unbundle_jsonlint.js';\nimport {supportsPropertyExpression} from '../util/properties.js';\n\nimport type {ValidationOptions} from './validate.js';\n\nexport type PropertyValidationOptions = ValidationOptions & {\n    objectKey: string;\n    layerType: string;\n}\n\nexport default function validateProperty(options: PropertyValidationOptions, propertyType: string): Array<ValidationError> {\n    const key = options.key;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const value = options.value;\n    const propertyKey = options.objectKey;\n    const layerSpec = styleSpec[`${propertyType}_${options.layerType}`];\n\n    if (!layerSpec) return [];\n\n    const transitionMatch = propertyKey.match(/^(.*)-transition$/);\n    if (propertyType === 'paint' && transitionMatch && layerSpec[transitionMatch[1]] && layerSpec[transitionMatch[1]].transition) {\n        return validate({\n            key,\n            value,\n            valueSpec: styleSpec.transition,\n            style,\n            styleSpec\n        });\n    }\n\n    const valueSpec = options.valueSpec || layerSpec[propertyKey];\n    if (!valueSpec) {\n        return [new ValidationError(key, value, `unknown property \"${propertyKey}\"`)];\n    }\n\n    let tokenMatch;\n    if (getType(value) === 'string' && supportsPropertyExpression(valueSpec) && !valueSpec.tokens && (tokenMatch = /^{([^}]+)}$/.exec(value))) {\n        return [new ValidationError(\n            key, value,\n            `\"${propertyKey}\" does not support interpolation syntax\\n` +\n                `Use an identity property function instead: \\`{ \"type\": \"identity\", \"property\": ${JSON.stringify(tokenMatch[1])} }\\`.`)];\n    }\n\n    const errors = [];\n\n    if (options.layerType === 'symbol') {\n        if (propertyKey === 'text-field' && style && !style.glyphs) {\n            errors.push(new ValidationError(key, value, 'use of \"text-field\" requires a style \"glyphs\" property'));\n        }\n        if (propertyKey === 'text-font' && isFunction(deepUnbundle(value)) && unbundle(value.type) === 'identity') {\n            errors.push(new ValidationError(key, value, '\"text-font\" does not support identity functions'));\n        }\n    }\n\n    return errors.concat(validate({\n        key: options.key,\n        value,\n        valueSpec,\n        style,\n        styleSpec,\n        expressionContext: 'property',\n        propertyType,\n        propertyKey\n    }));\n}\n", "// @flow\n\nimport validateProperty from './validate_property.js';\n\nimport type ValidationError from '../error/validation_error.js';\nimport type {PropertyValidationOptions} from './validate_property.js';\n\nexport default function validatePaintProperty(options: PropertyValidationOptions): Array<ValidationError> {\n    return validateProperty(options, 'paint');\n}\n", "// @flow\n\nimport validateProperty from './validate_property.js';\n\nimport type ValidationError from '../error/validation_error.js';\nimport type {PropertyValidationOptions} from './validate_property.js';\n\nexport default function validateLayoutProperty(options: PropertyValidationOptions): Array<ValidationError> {\n    return validateProperty(options, 'layout');\n}\n", "// @flow\n\nimport ValidationError from '../error/validation_error.js';\nimport {unbundle} from '../util/unbundle_jsonlint.js';\nimport validateObject from './validate_object.js';\nimport validateFilter from './validate_filter.js';\nimport validatePaintProperty from './validate_paint_property.js';\nimport validateLayoutProperty from './validate_layout_property.js';\nimport validateSpec from './validate.js';\nimport extend from '../util/extend.js';\n\nimport type {ValidationOptions} from './validate.js';\nimport type {LayerSpecification} from '../types.js';\n\ntype Options = ValidationOptions & {\n    value: LayerSpecification;\n    arrayIndex: number;\n}\n\nexport default function validateLayer(options: Options): Array<ValidationError> {\n    let errors = [];\n\n    const layer = options.value;\n    const key = options.key;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n\n    if (!layer.type && !layer.ref) {\n        errors.push(new ValidationError(key, layer, 'either \"type\" or \"ref\" is required'));\n    }\n    let type = unbundle(layer.type);\n    const ref = unbundle(layer.ref);\n\n    if (layer.id) {\n        const layerId = unbundle(layer.id);\n        for (let i = 0; i < options.arrayIndex; i++) {\n            const otherLayer = style.layers[i];\n            if (unbundle(otherLayer.id) === layerId) {\n                // $FlowFixMe[prop-missing] - id.__line__ is added dynamically during the readStyle step\n                errors.push(new ValidationError(key, layer.id, `duplicate layer id \"${layer.id}\", previously used at line ${otherLayer.id.__line__}`));\n            }\n        }\n    }\n\n    if ('ref' in layer) {\n        ['type', 'source', 'source-layer', 'filter', 'layout'].forEach((p) => {\n            if (p in layer) {\n                errors.push(new ValidationError(key, layer[p], `\"${p}\" is prohibited for ref layers`));\n            }\n        });\n\n        let parent;\n\n        style.layers.forEach((layer) => {\n            if (unbundle(layer.id) === ref) parent = layer;\n        });\n\n        if (!parent) {\n            if (typeof ref === 'string')\n                errors.push(new ValidationError(key, layer.ref, `ref layer \"${ref}\" not found`));\n        } else if (parent.ref) {\n            errors.push(new ValidationError(key, layer.ref, 'ref cannot reference another ref layer'));\n        } else {\n            type = unbundle(parent.type);\n        }\n    } else if (!(type === 'background' || type === 'sky')) {\n        if (!layer.source) {\n            errors.push(new ValidationError(key, layer, 'missing required property \"source\"'));\n        } else {\n            const source = style.sources && style.sources[layer.source];\n            const sourceType = source && unbundle(source.type);\n            if (!source) {\n                errors.push(new ValidationError(key, layer.source, `source \"${layer.source}\" not found`));\n            } else if (sourceType === 'vector' && type === 'raster') {\n                errors.push(new ValidationError(key, layer.source, `layer \"${layer.id}\" requires a raster source`));\n            } else if (sourceType === 'raster' && type !== 'raster') {\n                errors.push(new ValidationError(key, layer.source, `layer \"${layer.id}\" requires a vector source`));\n            } else if (sourceType === 'vector' && !layer['source-layer']) {\n                errors.push(new ValidationError(key, layer, `layer \"${layer.id}\" must specify a \"source-layer\"`));\n            } else if (sourceType === 'raster-dem' && type !== 'hillshade') {\n                errors.push(new ValidationError(key, layer.source, 'raster-dem source can only be used with layer type \\'hillshade\\'.'));\n            } else if (type === 'line' && layer.paint && (layer.paint['line-gradient'] || layer.paint['line-trim-offset']) &&\n                       (sourceType !== 'geojson' || !source.lineMetrics)) {\n                errors.push(new ValidationError(key, layer, `layer \"${layer.id}\" specifies a line-gradient, which requires a GeoJSON source with \\`lineMetrics\\` enabled.`));\n            }\n        }\n    }\n\n    errors = errors.concat(validateObject({\n        key,\n        value: layer,\n        valueSpec: styleSpec.layer,\n        style: options.style,\n        styleSpec: options.styleSpec,\n        objectElementValidators: {\n            '*'() {\n                return [];\n            },\n            // We don't want to enforce the spec's `\"requires\": true` for backward compatibility with refs;\n            // the actual requirement is validated above. See https://github.com/mapbox/mapbox-gl-js/issues/5772.\n            type() {\n                return validateSpec({\n                    key: `${key}.type`,\n                    value: layer.type,\n                    valueSpec: styleSpec.layer.type,\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    object: layer,\n                    objectKey: 'type'\n                });\n            },\n            filter(options) {\n                return validateFilter(extend({layerType: type}, options));\n            },\n            layout(options) {\n                return validateObject({\n                    layer,\n                    key: options.key,\n                    value: options.value,\n                    valueSpec: {},\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    objectElementValidators: {\n                        '*'(options) {\n                            return validateLayoutProperty(extend({layerType: type}, options));\n                        }\n                    }\n                });\n            },\n            paint(options) {\n                return validateObject({\n                    layer,\n                    key: options.key,\n                    value: options.value,\n                    valueSpec: {},\n                    style: options.style,\n                    styleSpec: options.styleSpec,\n                    objectElementValidators: {\n                        '*'(options) {\n                            return validatePaintProperty(extend({layerType: type}, options));\n                        }\n                    }\n                });\n            }\n        }\n    }));\n\n    return errors;\n}\n", "// @flow\n\nimport getType from '../util/get_type.js';\nimport ValidationError from '../error/validation_error.js';\n\nimport type {ValidationOptions} from './validate.js';\n\nexport default function validateString(options: $Shape<ValidationOptions>): Array<ValidationError> {\n    const value = options.value;\n    const key = options.key;\n    const type = getType(value);\n\n    if (type !== 'string') {\n        return [new ValidationError(key, value, `string expected, ${type} found`)];\n    }\n\n    return [];\n}\n", "// @flow\n\nimport ValidationError from '../error/validation_error.js';\nimport {unbundle} from '../util/unbundle_jsonlint.js';\nimport validateObject from './validate_object.js';\nimport validateEnum from './validate_enum.js';\nimport validateExpression from './validate_expression.js';\nimport validateString from './validate_string.js';\nimport getType from '../util/get_type.js';\n\nimport type {ValidationOptions} from './validate.js';\n\nconst objectElementValidators = {\n    promoteId: validatePromoteId\n};\n\nexport default function validateSource(options: ValidationOptions): Array<ValidationError> {\n    const value = options.value;\n    const key = options.key;\n    const styleSpec = options.styleSpec;\n    const style = options.style;\n\n    if (!value.type) {\n        return [new ValidationError(key, value, '\"type\" is required')];\n    }\n\n    const type = unbundle(value.type);\n    let errors;\n\n    switch (type) {\n    case 'vector':\n    case 'raster':\n    case 'raster-dem':\n        errors = validateObject({\n            key,\n            value,\n            valueSpec: styleSpec[`source_${type.replace('-', '_')}`],\n            style: options.style,\n            styleSpec,\n            objectElementValidators\n        });\n        return errors;\n\n    case 'geojson':\n        errors = validateObject({\n            key,\n            value,\n            valueSpec: styleSpec.source_geojson,\n            style,\n            styleSpec,\n            objectElementValidators\n        });\n        if (value.cluster) {\n            for (const prop in value.clusterProperties) {\n                const [operator, mapExpr] = value.clusterProperties[prop];\n                const reduceExpr = typeof operator === 'string' ? [operator, ['accumulated'], ['get', prop]] : operator;\n\n                errors.push(...validateExpression({\n                    key: `${key}.${prop}.map`,\n                    value: mapExpr,\n                    expressionContext: 'cluster-map'\n                }));\n                errors.push(...validateExpression({\n                    key: `${key}.${prop}.reduce`,\n                    value: reduceExpr,\n                    expressionContext: 'cluster-reduce'\n                }));\n            }\n        }\n        return errors;\n\n    case 'video':\n        return validateObject({\n            key,\n            value,\n            valueSpec: styleSpec.source_video,\n            style,\n            styleSpec\n        });\n\n    case 'image':\n        return validateObject({\n            key,\n            value,\n            valueSpec: styleSpec.source_image,\n            style,\n            styleSpec\n        });\n\n    case 'canvas':\n        return [new ValidationError(key, null, `Please use runtime APIs to add canvas sources, rather than including them in stylesheets.`, 'source.canvas')];\n\n    default:\n        return validateEnum({\n            key: `${key}.type`,\n            value: value.type,\n            valueSpec: {values: getSourceTypeValues(styleSpec)},\n            style,\n            styleSpec\n        });\n    }\n}\n\nfunction getSourceTypeValues(styleSpec) {\n    return styleSpec.source.reduce((memo, source) => {\n        const sourceType = styleSpec[source];\n        if (sourceType.type.type === 'enum') {\n            memo = memo.concat(Object.keys(sourceType.type.values));\n        }\n        return memo;\n    }, []);\n}\n\nfunction validatePromoteId({key, value}) {\n    if (getType(value) === 'string') {\n        return validateString({key, value});\n    } else {\n        const errors = [];\n        for (const prop in value) {\n            errors.push(...validateString({key: `${key}.${prop}`, value: value[prop]}));\n        }\n        return errors;\n    }\n}\n", "// @flow\n\nimport ValidationError from '../error/validation_error.js';\nimport getType from '../util/get_type.js';\nimport validate from './validate.js';\n\nimport type {ValidationOptions} from './validate.js';\n\nexport default function validateLight(options: ValidationOptions): Array<ValidationError> {\n    const light = options.value;\n    const styleSpec = options.styleSpec;\n    const lightSpec = styleSpec.light;\n    const style = options.style;\n\n    let errors = [];\n\n    const rootType = getType(light);\n    if (light === undefined) {\n        return errors;\n    } else if (rootType !== 'object') {\n        errors = errors.concat([new ValidationError('light', light, `object expected, ${rootType} found`)]);\n        return errors;\n    }\n\n    for (const key in light) {\n        const transitionMatch = key.match(/^(.*)-transition$/);\n\n        if (transitionMatch && lightSpec[transitionMatch[1]] && lightSpec[transitionMatch[1]].transition) {\n            errors = errors.concat(validate({\n                key,\n                value: light[key],\n                valueSpec: styleSpec.transition,\n                style,\n                styleSpec\n            }));\n        } else if (lightSpec[key]) {\n            errors = errors.concat(validate({\n                key,\n                value: light[key],\n                valueSpec: lightSpec[key],\n                style,\n                styleSpec\n            }));\n        } else {\n            errors = errors.concat([new ValidationError(key, light[key], `unknown property \"${key}\"`)]);\n        }\n    }\n\n    return errors;\n}\n", "// @flow\n\nimport ValidationError from '../error/validation_error.js';\nimport validate from './validate.js';\nimport getType from '../util/get_type.js';\nimport {unbundle} from '../util/unbundle_jsonlint.js';\n\nimport type {ValidationOptions} from './validate.js';\n\nexport default function validateTerrain(options: ValidationOptions): Array<ValidationError> {\n    const terrain = options.value;\n    const key = options.key;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const terrainSpec = styleSpec.terrain;\n    let errors = [];\n\n    const rootType = getType(terrain);\n    if (terrain === undefined) {\n        return errors;\n    } else if (rootType !== 'object') {\n        errors = errors.concat([new ValidationError('terrain', terrain, `object expected, ${rootType} found`)]);\n        return errors;\n    }\n\n    for (const key in terrain) {\n        const transitionMatch = key.match(/^(.*)-transition$/);\n\n        if (transitionMatch && terrainSpec[transitionMatch[1]] && terrainSpec[transitionMatch[1]].transition) {\n            errors = errors.concat(validate({\n                key,\n                value: terrain[key],\n                valueSpec: styleSpec.transition,\n                style,\n                styleSpec\n            }));\n        } else if (terrainSpec[key]) {\n            errors = errors.concat(validate({\n                key,\n                value: terrain[key],\n                valueSpec: terrainSpec[key],\n                style,\n                styleSpec\n            }));\n        } else {\n            errors = errors.concat([new ValidationError(key, terrain[key], `unknown property \"${key}\"`)]);\n        }\n    }\n\n    if (!terrain.source) {\n        errors.push(new ValidationError(key, terrain, `terrain is missing required property \"source\"`));\n    } else {\n        const source = style.sources && style.sources[terrain.source];\n        const sourceType = source && unbundle(source.type);\n        if (!source) {\n            errors.push(new ValidationError(key, terrain.source, `source \"${terrain.source}\" not found`));\n        } else if (sourceType !== 'raster-dem') {\n            errors.push(new ValidationError(key, terrain.source, `terrain cannot be used with a source of type ${String(sourceType)}, it only be used with a \"raster-dem\" source type`));\n        }\n    }\n\n    return errors;\n}\n", "// @flow\n\nimport ValidationError from '../error/validation_error.js';\nimport validate from './validate.js';\nimport getType from '../util/get_type.js';\n\nimport type {ValidationOptions} from './validate.js';\n\nexport default function validateFog(options: ValidationOptions): Array<ValidationError> {\n    const fog = options.value;\n    const style = options.style;\n    const styleSpec = options.styleSpec;\n    const fogSpec = styleSpec.fog;\n    let errors = [];\n\n    const rootType = getType(fog);\n    if (fog === undefined) {\n        return errors;\n    } else if (rootType !== 'object') {\n        errors = errors.concat([new ValidationError('fog', fog, `object expected, ${rootType} found`)]);\n        return errors;\n    }\n\n    for (const key in fog) {\n        const transitionMatch = key.match(/^(.*)-transition$/);\n\n        if (transitionMatch && fogSpec[transitionMatch[1]] && fogSpec[transitionMatch[1]].transition) {\n            errors = errors.concat(validate({\n                key,\n                value: fog[key],\n                valueSpec: styleSpec.transition,\n                style,\n                styleSpec\n            }));\n        } else if (fogSpec[key]) {\n            errors = errors.concat(validate({\n                key,\n                value: fog[key],\n                valueSpec: fogSpec[key],\n                style,\n                styleSpec\n            }));\n        } else {\n            errors = errors.concat([new ValidationError(key, fog[key], `unknown property \"${key}\"`)]);\n        }\n    }\n\n    return errors;\n}\n", "// @flow\n\nimport validateExpression from './validate_expression.js';\nimport validateString from './validate_string.js';\n\nimport type {ValidationOptions} from './validate.js';\nimport type ValidationError from '../error/validation_error.js';\n\nexport default function validateFormatted(options: ValidationOptions): Array<ValidationError> {\n    if (validateString(options).length === 0) {\n        return [];\n    }\n\n    return validateExpression(options);\n}\n", "// @flow\n\nimport validateExpression from './validate_expression.js';\nimport validateString from './validate_string.js';\n\nimport type {ValidationOptions} from './validate.js';\nimport type ValidationError from '../error/validation_error.js';\n\nexport default function validateImage(options: ValidationOptions): Array<ValidationError> {\n    if (validateString(options).length === 0) {\n        return [];\n    }\n\n    return validateExpression(options);\n}\n", "// @flow\n\nimport ValidationError from '../error/validation_error.js';\nimport getType from '../util/get_type.js';\nimport validate from './validate.js';\n\nimport type {ValidationOptions} from './validate.js';\n\nexport default function validateProjection(options: ValidationOptions): Array<ValidationError> {\n    const projection = options.value;\n    const styleSpec = options.styleSpec;\n    const projectionSpec = styleSpec.projection;\n    const style = options.style;\n\n    let errors = [];\n\n    const rootType = getType(projection);\n\n    if (rootType === 'object') {\n        for (const key in projection) {\n            errors = errors.concat(validate({\n                key,\n                value: projection[key],\n                valueSpec: projectionSpec[key],\n                style,\n                styleSpec\n            }));\n        }\n    } else if (rootType !== 'string') {\n        errors = errors.concat([new ValidationError('projection', projection, `object or string expected, ${rootType} found`)]);\n    }\n\n    return errors;\n}\n", "// @flow\n\nimport extend from '../util/extend.js';\nimport {unbundle, deepUnbundle} from '../util/unbundle_jsonlint.js';\nimport {isExpression} from '../expression/index.js';\nimport {isFunction} from '../function/index.js';\n\nimport validateFunction from './validate_function.js';\nimport validateExpression from './validate_expression.js';\nimport validateObject from './validate_object.js';\nimport validateArray from './validate_array.js';\nimport validateBoolean from './validate_boolean.js';\nimport validateNumber from './validate_number.js';\nimport validateColor from './validate_color.js';\nimport validateEnum from './validate_enum.js';\nimport validateFilter from './validate_filter.js';\nimport validateLayer from './validate_layer.js';\nimport validateSource from './validate_source.js';\nimport validateLight from './validate_light.js';\nimport validateTerrain from './validate_terrain.js';\nimport validateFog from './validate_fog.js';\nimport validateString from './validate_string.js';\nimport validateFormatted from './validate_formatted.js';\nimport validateImage from './validate_image.js';\nimport validateProjection from './validate_projection.js';\n\nimport type {StyleReference} from '../reference/latest.js';\nimport type {StyleSpecification} from '../types.js';\nimport type ValidationError from '../error/validation_error.js';\n\nconst VALIDATORS = {\n    '*'() {\n        return [];\n    },\n    'array': validateArray,\n    'boolean': validateBoolean,\n    'number': validateNumber,\n    'color': validateColor,\n    'enum': validateEnum,\n    'filter': validateFilter,\n    'function': validateFunction,\n    'layer': validateLayer,\n    'object': validateObject,\n    'source': validateSource,\n    'light': validateLight,\n    'terrain': validateTerrain,\n    'fog': validateFog,\n    'string': validateString,\n    'formatted': validateFormatted,\n    'resolvedImage': validateImage,\n    'projection': validateProjection\n};\n\n// Main recursive validation function. Tracks:\n//\n// - key: string representing location of validation in style tree. Used only\n//   for more informative error reporting.\n// - value: current value from style being evaluated. May be anything from a\n//   high level object that needs to be descended into deeper or a simple\n//   scalar value.\n// - valueSpec: current spec being evaluated. Tracks value.\n// - styleSpec: current full spec being evaluated.\nexport type ValidationOptions = {\n    key: string;\n    value: Object;\n    valueSpec: Object;\n    style: $Shape<StyleSpecification>;\n    styleSpec: StyleReference;\n}\n\nexport default function validate(options: ValidationOptions): Array<ValidationError> {\n    const value = options.value;\n    const valueSpec = options.valueSpec;\n    const styleSpec = options.styleSpec;\n\n    if (valueSpec.expression && isFunction(unbundle(value))) {\n        return validateFunction(options);\n\n    } else if (valueSpec.expression && isExpression(deepUnbundle(value))) {\n        return validateExpression(options);\n\n    } else if (valueSpec.type && VALIDATORS[valueSpec.type]) {\n        return VALIDATORS[valueSpec.type](options);\n\n    } else {\n        const valid = validateObject(extend({}, options, {\n            valueSpec: valueSpec.type ? styleSpec[valueSpec.type] : valueSpec\n        }));\n        return valid;\n    }\n}\n", "// @flow\n\nimport ValidationError from '../error/validation_error.js';\nimport validateString from './validate_string.js';\n\nimport type {ValidationOptions} from './validate.js';\n\nexport default function(options: ValidationOptions): Array<ValidationError> {\n    const value = options.value;\n    const key = options.key;\n\n    const errors = validateString(options);\n    if (errors.length) return errors;\n\n    if (value.indexOf('{fontstack}') === -1) {\n        errors.push(new ValidationError(key, value, '\"glyphs\" url must include a \"{fontstack}\" token'));\n    }\n\n    if (value.indexOf('{range}') === -1) {\n        errors.push(new ValidationError(key, value, '\"glyphs\" url must include a \"{range}\" token'));\n    }\n\n    return errors;\n}\n", "// @flow\nimport validate from './validate/validate.js';\nimport latestStyleSpec from './reference/latest.js';\nimport validateGlyphsURL from './validate/validate_glyphs_url.js';\n\nimport _validateSource from './validate/validate_source.js';\nimport _validateLight from './validate/validate_light.js';\nimport _validateTerrain from './validate/validate_terrain.js';\nimport _validateFog from './validate/validate_fog.js';\nimport _validateLayer from './validate/validate_layer.js';\nimport _validateFilter from './validate/validate_filter.js';\nimport _validatePaintProperty from './validate/validate_paint_property.js';\nimport _validateLayoutProperty from './validate/validate_layout_property.js';\n\nimport type {StyleSpecification} from './types.js';\n\nexport type ValidationError = {\n    message: string;\n    identifier?: ?string;\n    line?: ?number;\n};\nexport type ValidationErrors = $ReadOnlyArray<ValidationError>;\nexport type Validator = (Object) => ValidationErrors;\n\n/**\n * Validate a Mapbox GL style against the style specification. This entrypoint,\n * `mapbox-gl-style-spec/lib/validate_style.min`, is designed to produce as\n * small a browserify bundle as possible by omitting unnecessary functionality\n * and legacy style specifications.\n *\n * @private\n * @param {Object} style The style to be validated.\n * @param {Object} [styleSpec] The style specification to validate against.\n *     If omitted, the latest style spec is used.\n * @returns {Array<ValidationError>}\n * @example\n *   var validate = require('mapbox-gl-style-spec/lib/validate_style.min');\n *   var errors = validate(style);\n */\nexport function validateStyle(style: StyleSpecification, styleSpec: Object = latestStyleSpec): ValidationErrors {\n\n    const errors = validate({\n        key: '',\n        value: style,\n        valueSpec: styleSpec.$root,\n        styleSpec,\n        style,\n        objectElementValidators: {\n            glyphs: validateGlyphsURL,\n            '*': () => []\n        }\n    });\n    return sortErrors(errors);\n}\n\nexport const validateSource: Validator = opts => sortErrors(_validateSource(opts));\nexport const validateLight: Validator = opts => sortErrors(_validateLight(opts));\nexport const validateTerrain: Validator = opts => sortErrors(_validateTerrain(opts));\nexport const validateFog: Validator = opts => sortErrors(_validateFog(opts));\nexport const validateLayer: Validator = opts => sortErrors(_validateLayer(opts));\nexport const validateFilter: Validator = opts => sortErrors(_validateFilter(opts));\nexport const validatePaintProperty: Validator = opts => sortErrors(_validatePaintProperty(opts));\nexport const validateLayoutProperty: Validator = opts => sortErrors(_validateLayoutProperty(opts));\n\nfunction sortErrors(errors) {\n    return errors.slice().sort((a, b) => a.line && b.line ? a.line - b.line : 0);\n}\n", "/* parser generated by jison 0.4.15 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,12],$V1=[1,13],$V2=[1,9],$V3=[1,10],$V4=[1,11],$V5=[1,14],$V6=[1,15],$V7=[14,18,22,24],$V8=[18,22],$V9=[22,24];\nvar parser = {trace: function trace() { },\nyy: {},\nsymbols_: {\"error\":2,\"JSONString\":3,\"STRING\":4,\"JSONNumber\":5,\"NUMBER\":6,\"JSONNullLiteral\":7,\"NULL\":8,\"JSONBooleanLiteral\":9,\"TRUE\":10,\"FALSE\":11,\"JSONText\":12,\"JSONValue\":13,\"EOF\":14,\"JSONObject\":15,\"JSONArray\":16,\"{\":17,\"}\":18,\"JSONMemberList\":19,\"JSONMember\":20,\":\":21,\",\":22,\"[\":23,\"]\":24,\"JSONElementList\":25,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",4:\"STRING\",6:\"NUMBER\",8:\"NULL\",10:\"TRUE\",11:\"FALSE\",14:\"EOF\",17:\"{\",18:\"}\",21:\":\",22:\",\",23:\"[\",24:\"]\"},\nproductions_: [0,[3,1],[5,1],[7,1],[9,1],[9,1],[12,2],[13,1],[13,1],[13,1],[13,1],[13,1],[13,1],[15,2],[15,3],[20,3],[19,1],[19,3],[16,2],[16,3],[25,1],[25,3]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n // replace escaped characters with actual character\n          this.$ = new String(yytext.replace(/\\\\(\\\\|\")/g, \"$\"+\"1\")\n                     .replace(/\\\\n/g,'\\n')\n                     .replace(/\\\\r/g,'\\r')\n                     .replace(/\\\\t/g,'\\t')\n                     .replace(/\\\\v/g,'\\v')\n                     .replace(/\\\\f/g,'\\f')\n                     .replace(/\\\\b/g,'\\b'));\n          this.$.__line__ =  this._$.first_line;\n        \nbreak;\ncase 2:\n\n            this.$ = new Number(yytext);\n            this.$.__line__ =  this._$.first_line;\n        \nbreak;\ncase 3:\n\n            this.$ = null;\n        \nbreak;\ncase 4:\n\n            this.$ = new Boolean(true);\n            this.$.__line__ = this._$.first_line;\n        \nbreak;\ncase 5:\n\n            this.$ = new Boolean(false);\n            this.$.__line__ = this._$.first_line;\n        \nbreak;\ncase 6:\nreturn this.$ = $$[$0-1];\nbreak;\ncase 13:\nthis.$ = {}; Object.defineProperty(this.$, '__line__', {\n            value: this._$.first_line,\n            enumerable: false\n        })\nbreak;\ncase 14: case 19:\nthis.$ = $$[$0-1]; Object.defineProperty(this.$, '__line__', {\n            value: this._$.first_line,\n            enumerable: false\n        })\nbreak;\ncase 15:\nthis.$ = [$$[$0-2], $$[$0]];\nbreak;\ncase 16:\nthis.$ = {}; this.$[$$[$0][0]] = $$[$0][1];\nbreak;\ncase 17:\nthis.$ = $$[$0-2]; $$[$0-2][$$[$0][0]] = $$[$0][1];\nbreak;\ncase 18:\nthis.$ = []; Object.defineProperty(this.$, '__line__', {\n            value: this._$.first_line,\n            enumerable: false\n        })\nbreak;\ncase 20:\nthis.$ = [$$[$0]];\nbreak;\ncase 21:\nthis.$ = $$[$0-2]; $$[$0-2].push($$[$0]);\nbreak;\n}\n},\ntable: [{3:5,4:$V0,5:6,6:$V1,7:3,8:$V2,9:4,10:$V3,11:$V4,12:1,13:2,15:7,16:8,17:$V5,23:$V6},{1:[3]},{14:[1,16]},o($V7,[2,7]),o($V7,[2,8]),o($V7,[2,9]),o($V7,[2,10]),o($V7,[2,11]),o($V7,[2,12]),o($V7,[2,3]),o($V7,[2,4]),o($V7,[2,5]),o([14,18,21,22,24],[2,1]),o($V7,[2,2]),{3:20,4:$V0,18:[1,17],19:18,20:19},{3:5,4:$V0,5:6,6:$V1,7:3,8:$V2,9:4,10:$V3,11:$V4,13:23,15:7,16:8,17:$V5,23:$V6,24:[1,21],25:22},{1:[2,6]},o($V7,[2,13]),{18:[1,24],22:[1,25]},o($V8,[2,16]),{21:[1,26]},o($V7,[2,18]),{22:[1,28],24:[1,27]},o($V9,[2,20]),o($V7,[2,14]),{3:20,4:$V0,20:29},{3:5,4:$V0,5:6,6:$V1,7:3,8:$V2,9:4,10:$V3,11:$V4,13:30,15:7,16:8,17:$V5,23:$V6},o($V7,[2,19]),{3:5,4:$V0,5:6,6:$V1,7:3,8:$V2,9:4,10:$V3,11:$V4,13:31,15:7,16:8,17:$V5,23:$V6},o($V8,[2,17]),o($V8,[2,15]),o($V9,[2,21])],\ndefaultActions: {16:[2,6]},\nparseError: function parseError(str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        throw new Error(str);\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    _token_stack:\n        function lex() {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        }\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function (match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex() {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin(condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState(condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/* skip whitespace */\nbreak;\ncase 1:return 6\nbreak;\ncase 2:yy_.yytext = yy_.yytext.substr(1,yy_.yyleng-2); return 4\nbreak;\ncase 3:return 17\nbreak;\ncase 4:return 18\nbreak;\ncase 5:return 23\nbreak;\ncase 6:return 24\nbreak;\ncase 7:return 22\nbreak;\ncase 8:return 21\nbreak;\ncase 9:return 10\nbreak;\ncase 10:return 11\nbreak;\ncase 11:return 8\nbreak;\ncase 12:return 14\nbreak;\ncase 13:return 'INVALID'\nbreak;\n}\n},\nrules: [/^(?:\\s+)/,/^(?:(-?([0-9]|[1-9][0-9]+))(\\.[0-9]+)?([eE][-+]?[0-9]+)?\\b)/,/^(?:\"(?:\\\\[\\\\\"bfnrt/]|\\\\u[a-fA-F0-9]{4}|[^\\\\\\0-\\x09\\x0a-\\x1f\"])*\")/,/^(?:\\{)/,/^(?:\\})/,/^(?:\\[)/,/^(?:\\])/,/^(?:,)/,/^(?::)/,/^(?:true\\b)/,/^(?:false\\b)/,/^(?:null\\b)/,/^(?:$)/,/^(?:.)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = parser;\nexports.Parser = parser.Parser;\nexports.parse = function () { return parser.parse.apply(parser, arguments); };\n}\n", "import ParsingError from './error/parsing_error.js';\nimport jsonlint from '@mapbox/jsonlint-lines-primitives';\n\nexport default function readStyle(style) {\n    if (style instanceof String || typeof style === 'string' || style instanceof Buffer) {\n        try {\n            return jsonlint.parse(style.toString());\n        } catch (e) {\n            throw new ParsingError(e);\n        }\n    }\n\n    return style;\n}\n", "// @flow\nimport {validateStyle as validateStyleMin} from './validate_style.min.js';\nimport {v8} from './style-spec.js';\nimport readStyle from './read_style.js';\n\nimport type {ValidationErrors} from './validate_style.min.js';\nimport type {StyleSpecification} from './types.js';\n\n/**\n * Validate a Mapbox GL style against the style specification.\n *\n * @private\n * @alias validate\n * @param {Object|String|Buffer} style The style to be validated. If a `String`\n *     or `Buffer` is provided, the returned errors will contain line numbers.\n * @param {Object} [styleSpec] The style specification to validate against.\n *     If omitted, the spec version is inferred from the stylesheet.\n * @returns {Array<ValidationError|ParsingError>}\n * @example\n *   var validate = require('mapbox-gl-style-spec').validate;\n *   var style = fs.readFileSync('./style.json', 'utf8');\n *   var errors = validate(style);\n */\n\nexport default function validateStyle(style: StyleSpecification | string | Buffer, styleSpec: Object = v8): ValidationErrors {\n    let s = style;\n\n    try {\n        s = readStyle(s);\n    } catch (e) {\n        return [e];\n    }\n\n    return validateStyleMin(s, styleSpec);\n}\n\nexport {\n    validateSource as source,\n    validateLight as light,\n    validateLayer as layer,\n    validateFilter as filter,\n    validatePaintProperty as paintProperty,\n    validateLayoutProperty as layoutProperty\n} from './validate_style.min.js';\n", "// @flow\n\nimport {validateStyle} from './validate_style.min.js';\nimport {v8} from './style-spec.js';\nimport readStyle from './read_style.js';\nimport ValidationError from './error/validation_error.js';\nimport getType from './util/get_type.js';\n\nimport type {ValidationErrors} from './validate_style.min.js';\n\nconst SUPPORTED_SPEC_VERSION = 8;\nconst MAX_SOURCES_IN_STYLE = 15;\n\nfunction isValid(value: ?string, regex: RegExp): boolean {\n    if (!value || getType(value) !== 'string') return true;\n    return !!value.match(regex);\n}\n\nfunction getSourceCount(source: Object): number {\n    if (source.url) {\n        return source.url.split(',').length;\n    } else {\n        return 0;\n    }\n}\n\nfunction getAllowedKeyErrors(obj: Object, keys: Array<*>, path: ?string): Array<ValidationError> {\n    const allowed = new Set(keys);\n    const errors = [];\n    Object.keys(obj).forEach(k => {\n        if (!allowed.has(k)) {\n            const prop = path ? `${path}.${k}` : null;\n            errors.push(new ValidationError(prop, obj[k], `Unsupported property \"${k}\"`));\n        }\n    });\n    return errors;\n}\n\nconst acceptedSourceTypes = new Set([\"vector\", \"raster\", \"raster-dem\"]);\nfunction getSourceErrors(source: Object, i: number): Array<ValidationError> {\n    const errors = [];\n\n    /*\n     * Inlined sources are not supported by the Mapbox Styles API, so only\n     * \"type\", \"url\", and \"tileSize\" properties are valid\n     */\n    const sourceKeys = ['type', 'url', 'tileSize'];\n    errors.push(...getAllowedKeyErrors(source, sourceKeys, 'source'));\n\n    /*\n     * \"type\" is required and must be one of \"vector\", \"raster\", \"raster-dem\"\n     */\n    if (!acceptedSourceTypes.has(String(source.type))) {\n        errors.push(new ValidationError(`sources[${i}].type`, source.type, `Expected one of [${Array.from(acceptedSourceTypes).join(\", \")}]`));\n    }\n\n    /*\n     * \"source\" is required. Valid examples:\n     * mapbox://mapbox.abcd1234\n     * mapbox://penny.abcd1234\n     * mapbox://mapbox.abcd1234,penny.abcd1234\n     */\n    const sourceUrlPattern = /^mapbox:\\/\\/([^/]*)$/;\n    if (!source.url || !isValid(source.url, sourceUrlPattern)) {\n        errors.push(new ValidationError(`sources[${i}].url`, source.url, 'Expected a valid Mapbox tileset url'));\n    }\n\n    return errors;\n}\n\nfunction getSourcesErrors(sources: Object): Array<ValidationError> {\n    const errors = [];\n    let count = 0;\n\n    Object.keys(sources).forEach((s: string, i: number) => {\n        const sourceErrors = getSourceErrors(sources[s], i);\n\n        // If source has errors, skip counting\n        if (!sourceErrors.length) {\n            count = count + getSourceCount(sources[s]);\n        }\n\n        errors.push(...sourceErrors);\n    });\n\n    if (count > MAX_SOURCES_IN_STYLE) {\n        errors.push(new ValidationError('sources', null, `Styles must contain ${MAX_SOURCES_IN_STYLE} or fewer sources`));\n    }\n\n    return errors;\n}\n\nfunction getRootErrors(style: Object, specKeys: Array<any>): Array<ValidationError> {\n    const errors = [];\n\n    /*\n     * The following keys are optional but fully managed by the Mapbox Styles\n     * API. Values on stylesheet on POST or PATCH will be ignored: \"owner\",\n     * \"id\", \"cacheControl\", \"draft\", \"created\", \"modified\", \"protected\"\n     *\n     * The following keys are optional. The Mapbox Styles API respects value on\n     * stylesheet on PATCH, but ignores the value on POST: \"visibility\"\n     */\n    const optionalRootProperties = [\n        'owner',\n        'id',\n        'cacheControl',\n        'draft',\n        'created',\n        'modified',\n        'visibility',\n        'protected'\n    ];\n\n    const allowedKeyErrors = getAllowedKeyErrors(style, [...specKeys, ...optionalRootProperties]);\n    errors.push(...allowedKeyErrors);\n\n    if (style.version > SUPPORTED_SPEC_VERSION || style.version < SUPPORTED_SPEC_VERSION) {\n        errors.push(new ValidationError('version', style.version, `Style version must be ${SUPPORTED_SPEC_VERSION}`));\n    }\n\n    /*\n     * \"glyphs\" is optional. If present, valid examples:\n     * mapbox://fonts/penny/{fontstack}/{range}.pbf\n     * mapbox://fonts/mapbox/{fontstack}/{range}.pbf\n     */\n    const glyphUrlPattern = /^mapbox:\\/\\/fonts\\/([^/]*)\\/{fontstack}\\/{range}.pbf$/;\n    if (!isValid(style.glyphs, glyphUrlPattern)) {\n        errors.push(new ValidationError('glyphs', style.glyphs, 'Styles must reference glyphs hosted by Mapbox'));\n    }\n\n    /*\n     * \"sprite\" is optional. If present, valid examples:\n     * mapbox://sprites/penny/abcd1234\n     * mapbox://sprites/mapbox/abcd1234/draft\n     * mapbox://sprites/cyrus/abcd1234/abcd1234\n     */\n    const spriteUrlPattern = /^mapbox:\\/\\/sprites\\/([^/]*)\\/([^/]*)\\/?([^/]*)?$/;\n    if (!isValid(style.sprite, spriteUrlPattern)) {\n        errors.push(new ValidationError('sprite', style.sprite, 'Styles must reference sprites hosted by Mapbox'));\n    }\n\n    /*\n     * \"visibility\" is optional. If present, valid examples:\n     * \"private\"\n     * \"public\"\n     */\n    const visibilityPattern = /^(public|private)$/;\n    if (!isValid(style.visibility, visibilityPattern)) {\n        errors.push(new ValidationError('visibility', style.visibility, 'Style visibility must be public or private'));\n    }\n\n    if (style.protected !== undefined && getType(style.protected) !== 'boolean') {\n        errors.push(new ValidationError('protected', style.protected, 'Style protection must be true or false'));\n    }\n\n    return errors;\n}\n\n/**\n * Validate a Mapbox GL style against the style specification and check for\n * compatibility with the Mapbox Styles API.\n *\n * @param {Object} style The style to be validated.\n * @returns {Array<ValidationError>}\n * @example\n *   var validateMapboxApiSupported = require('mapbox-gl-style-spec/lib/validate_style_mapbox_api_supported.js');\n *   var errors = validateMapboxApiSupported(style);\n */\nexport default function validateMapboxApiSupported(style: Object, styleSpec: Object = v8): ValidationErrors {\n    let s = style;\n    try {\n        s = readStyle(s);\n    } catch (e) {\n        return [e];\n    }\n\n    let errors = validateStyle(s, styleSpec)\n        .concat(getRootErrors(s, Object.keys(v8.$root)));\n\n    if (s.sources) {\n        errors = errors.concat(getSourcesErrors(s.sources));\n    }\n\n    return errors;\n}\n\n", "// @flow\n\ntype ExpressionType = 'data-driven' | 'color-ramp' | 'data-constant' | 'constant';\ntype ExpressionParameters = Array<'zoom' | 'feature' | 'feature-state' | 'heatmap-density' | 'line-progress' | 'sky-radial-progress' | 'pitch' | 'distance-from-center'>;\n\ntype ExpressionSpecification = {\n    interpolated: boolean,\n    parameters: ExpressionParameters\n}\n\nexport type StylePropertySpecification = {\n    type: 'number',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    transition: boolean,\n    default?: number\n} | {\n    type: 'string',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    transition: boolean,\n    default?: string,\n    tokens?: boolean\n} | {\n    type: 'boolean',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    transition: boolean,\n    default?: boolean\n} | {\n    type: 'enum',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    values: {[_: string]: {}},\n    transition: boolean,\n    default?: string\n} | {\n    type: 'color',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    transition: boolean,\n    default?: string,\n    overridable: boolean\n} | {\n    type: 'array',\n    value: 'number',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    length?: number,\n    transition: boolean,\n    default?: Array<number>\n} | {\n    type: 'array',\n    value: 'string',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    length?: number,\n    transition: boolean,\n    default?: Array<string>\n} | {\n    type: 'resolvedImage',\n    'property-type': ExpressionType,\n    expression?: ExpressionSpecification,\n    transition: boolean,\n    default?: string\n};\n\nimport v8 from './reference/v8.json';\nimport latest from './reference/latest.js';\nimport format from './format.js';\nimport migrate from './migrate.js';\nimport composite from './composite.js';\nimport derefLayers from './deref.js';\nimport diff from './diff.js';\nimport ValidationError from './error/validation_error.js';\nimport ParsingError from './error/parsing_error.js';\nimport {StyleExpression, isExpression, createExpression, createPropertyExpression, normalizePropertyExpression, ZoomConstantExpression, ZoomDependentExpression, StylePropertyFunction} from './expression/index.js';\nimport featureFilter, {isExpressionFilter} from './feature_filter/index.js';\n\nimport convertFilter from './feature_filter/convert.js';\nimport Color from './util/color.js';\nimport {createFunction, isFunction} from './function/index.js';\nimport convertFunction from './function/convert.js';\nimport {eachSource, eachLayer, eachProperty} from './visit.js';\n\nimport validate from './validate_style.js';\nimport validateMapboxApiSupported from './validate_mapbox_api_supported.js';\n\nconst expression = {\n    StyleExpression,\n    isExpression,\n    isExpressionFilter,\n    createExpression,\n    createPropertyExpression,\n    normalizePropertyExpression,\n    ZoomConstantExpression,\n    ZoomDependentExpression,\n    StylePropertyFunction\n};\n\nconst styleFunction = {\n    convertFunction,\n    createFunction,\n    isFunction\n};\n\nconst visit = {eachSource, eachLayer, eachProperty};\n\nexport {\n    v8,\n    latest,\n    format,\n    migrate,\n    composite,\n    derefLayers,\n    diff,\n    ValidationError,\n    ParsingError,\n    expression,\n    featureFilter,\n    convertFilter,\n    Color,\n    styleFunction as function,\n    validate,\n    validateMapboxApiSupported,\n    visit\n};\n"],
  "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",
  "names": ["stringOrChar", "stringify", "passedObj", "options", "indent", "JSON", "undefined", "slice", "maxLength", "Infinity", "replacer", "_stringify", "obj", "currentIndent", "reserved", "toJSON", "string", "length", "prettified", "replace", "match", "stringLiteral", "parse", "nextIndent", "items", "index", "start", "end", "Array", "isArray", "push", "keys", "Object", "key", "keyPart", "value", "join", "sortKeysBy", "reference", "result", "format", "style", "space", "$root", "layers", "map", "layer", "stringifyPretty", "root", "freeExports", "exports", "nodeType", "freeModule", "module", "freeGlobal", "global", "window", "self", "punycode", "maxInt", "base", "tMin", "tMax", "skew", "damp", "initialBias", "initialN", "delimiter", "regexPunycode", "regexNonASCII", "regexSeparators", "errors", "baseMinusTMin", "floor", "Math", "stringFromCharCode", "String", "fromCharCode", "error", "type", "RangeError", "array", "fn", "mapDomain", "parts", "split", "labels", "encoded", "ucs2decode", "output", "counter", "extra", "charCodeAt", "ucs2encode", "basicToDigit", "codePoint", "digitToBasic", "digit", "flag", "adapt", "delta", "numPoints", "firstTime", "k", "decode", "input", "inputLength", "out", "i", "n", "bias", "basic", "j", "oldi", "w", "t", "baseMinusT", "lastIndexOf", "splice", "encode", "handledCPCount", "basicLength", "m", "q", "currentValue", "handledCPCountPlusOne", "qMinusT", "toUnicode", "test", "toLowerCase", "toASCII", "hasOwnProperty", "this", "isString", "arg", "isObject", "isNull", "isNullOrUndefined", "prop", "prototype", "call", "qs", "sep", "eq", "regexp", "maxKeys", "len", "x", "idx", "indexOf", "kstr", "vstr", "v", "substr", "decodeURIComponent", "stringifyPrimitive", "isFinite", "name", "ks", "encodeURIComponent", "require", "querystring", "util", "urlParse", "urlResolve", "urlResolveObject", "urlFormat", "Url", "protocol", "slashes", "auth", "host", "port", "hostname", "hash", "search", "query", "pathname", "path", "href", "protocolPattern", "portPattern", "simplePathPattern", "delims", "unwise", "concat", "autoEscape", "nonHostChars", "hostEndingChars", "hostnameMaxLen", "hostnamePartPattern", "hostnamePartStart", "unsafeProtocol", "hostlessProtocol", "slashedProtocol", "url", "parseQueryString", "slashesDenoteHost", "u", "TypeError", "queryIndex", "splitter", "uSplit", "slashRegex", "rest", "trim", "simplePath", "exec", "proto", "lowerProto", "hostEnd", "hec", "atSign", "parseHost", "ipv6Hostname", "hostparts", "l", "part", "newpart", "validParts", "notHost", "bit", "unshift", "p", "h", "ae", "esc", "escape", "qm", "s", "charAt", "source", "relative", "resolve", "resolveObject", "rel", "tkeys", "tk", "tkey", "rkeys", "rk", "rkey", "relPath", "shift", "isSourceAbs", "isRelAbs", "mustEndAbs", "removeAllDots", "srcPath", "psychotic", "pop", "authInHost", "last", "hasTrailingSlash", "up", "isAbsolute", "getPropertyReference", "propertyName", "Reference", "layout", "paint", "eachSource", "callback", "sources", "eachLayer", "eachProperty", "inner", "propertyType", "properties", "forEach", "id", "set", "eachLayout", "eachPaint", "resolveConstant", "constants", "isFunction", "stops", "renameProperty", "from", "to", "version", "coordinates", "coord", "reverse", "property", "stop", "migrateFontstackURL", "inputParsed", "URL", "inputPathnameParts", "assert", "decodeURI", "predicate", "Error", "glyphs", "migrateFontStack", "font", "splitAndTrim", "firstSymbolLayer", "symbolLayers", "inputs", "ParsingError", "constructor", "message", "Scope", "parent", "bindings", "expression", "get", "has", "NullType", "kind", "NumberType", "StringType", "BooleanType", "ColorType", "ObjectType", "ValueType", "ErrorType", "CollatorType", "FormattedType", "ResolvedImageType", "itemType", "N", "toString", "valueMemberTypes", "checkSubtype", "expected", "memberType", "isValidType", "provided", "allowedTypes", "some", "isValidNativeType", "kCSSColorTable", "clamp_css_byte", "round", "clamp_css_float", "f", "parse_css_int", "str", "parseFloat", "parseInt", "parse_css_float", "css_hue_to_rgb", "m1", "m2", "parseCSSColor", "css_str", "iv", "op", "ep", "fname", "params", "alpha", "e", "Color", "r", "g", "b", "a", "rgba", "toArray", "toArray01", "toArray01PremultipliedAlpha", "black", "white", "transparent", "red", "blue", "Collator", "caseSensitive", "diacriticSensitive", "locale", "sensitivity", "collator", "Intl", "usage", "compare", "lhs", "rhs", "resolvedLocale", "resolvedOptions", "FormattedSection", "text", "image", "scale", "fontStack", "textColor", "normalize", "Formatted", "sections", "fromString", "unformatted", "isEmpty", "section", "factory", "serialize", "serialized", "ResolvedImage", "available", "validateRGBA", "isValue", "mixed", "item", "typeOf", "Literal", "args", "context", "expectedType", "evaluate", "eachChild", "outputDefined", "RuntimeError", "types", "number", "boolean", "object", "Assertion", "parsed", "ctx", "every", "FormatExpression", "firstArg", "nextTokenMayBeObject", "lastExpression", "content", "evaluateSection", "evaluatedContent", "ImageExpression", "evaluatedImageName", "availableImages", "Coercion", "Boolean", "c", "parseColor", "num", "Number", "isNaN", "valueToString", "child", "geometryTypes", "EvaluationContext", "globals", "feature", "featureState", "formattedSection", "_parseColorCache", "canonical", "featureTileCoord", "featureDistanceData", "geometryType", "geometry", "canonicalID", "distanceFromCenter", "center", "y", "dX", "dY", "bX", "bearing", "bY", "dist", "cached", "CompoundExpression", "_evaluate", "definition", "definitions", "availableOverloads", "overloads", "filter", "signature", "signatureContext", "ParsingContext", "registry", "scope", "parsedArgs", "argParseFailed", "signatures", "stringifySignature", "actualTypes", "register", "CollatorExpression", "EXTENT", "updateBBox", "bbox", "min", "max", "mercatorXfromLng", "lng", "mercatorYfromLat", "lat", "PI", "log", "tan", "boxWithinBox", "bbox1", "bbox2", "getTileCoordinates", "tilesAtZoom", "pow", "z", "onBoundary", "p1", "p2", "x1", "y1", "x2", "y2", "rayIntersect", "pointWithinPolygon", "point", "rings", "inside", "ring", "len2", "pointWithinPolygons", "polygons", "perp", "v1", "v2", "twoSided", "q1", "q2", "x3", "y3", "det1", "det2", "lineIntersectLine", "d", "vectorP", "vectorQ", "lineIntersectPolygon", "polygon", "lineStringWithinPolygon", "line", "lineStringWithinPolygons", "getTilePolygon", "getTilePolygons", "updatePoint", "polyBBox", "worldSize", "halfWorldSize", "resetBBox", "getTilePoints", "pointBBox", "shifts", "tilePoints", "points", "getTileLines", "lineBBox", "tileLines", "tileLine", "pointsWithinPolygons", "polygonGeometry", "tilePolygon", "tilePolygons", "linesWithinPolygons", "Within", "geojson", "geometries", "features", "isFeatureConstant", "isStateConstant", "isGlobalPropertyConstant", "Var", "boundExpression", "expr", "_parse", "annotate", "typeAnnotation", "Expr", "actual", "isConstant", "ec", "isTypeAnnotation", "childrenConstant", "findStopLessThanOrEqualTo", "lastIndex", "lowerIndex", "upperIndex", "currentIndex", "nextValue", "Step", "outputs", "label", "outputType", "labelKey", "valueKey", "stopCount", "UnitBezier", "p1x", "p1y", "p2x", "p2y", "cx", "bx", "ax", "cy", "by", "ay", "sampleCurveX", "sampleCurveY", "sampleCurveDerivativeX", "solveCurveX", "epsilon", "abs", "d2", "t0", "t1", "solve", "color", "Xn", "Yn", "Zn", "t2", "t3", "deg2rad", "rad2deg", "xyz2lab", "lab2xyz", "xyz2rgb", "rgb2xyz", "rgbToLab", "rgbColor", "labToRgb", "labColor", "interpolateLab", "interpolateNumber", "rgbToHcl", "atan2", "sqrt", "hclToRgb", "hclColor", "cos", "sin", "interpolateHue", "interpolateHcl", "lab", "forward", "interpolate", "hcl", "Interpolate", "operator", "interpolation", "interpolationFactor", "lower", "upper", "exponentialInterpolation", "controlPoints", "ub", "outputLower", "outputUpper", "lowerValue", "upperValue", "difference", "progress", "Coalesce", "needsAnnotation", "argCount", "firstImage", "Let", "binding", "At", "In", "needle", "haystack", "IndexOf", "fromIndex", "Match", "inputType", "cases", "otherwise", "labelContext", "MAX_SAFE_INTEGER", "sortedLabels", "sort", "groupedByOutput", "outputLookup", "outputIndex", "coerceLabel", "Case", "branches", "_", "Slice", "beginIndex", "endIndex", "isComparableType", "neq", "lt", "gt", "lteq", "gteq", "eqCollate", "neqCollate", "ltCollate", "gtCollate", "lteqCollate", "gteqCollate", "makeComparison", "compareBasic", "compareWithCollator", "isOrderComparison", "Comparison", "hasUntypedArgument", "rt", "Equals", "NotEquals", "LessThan", "GreaterThan", "LessThanOrEqual", "GreaterThanOrEqual", "NumberFormat", "currency", "unit", "minFractionDigits", "maxFractionDigits", "minimumFractionDigits", "maximumFractionDigits", "Length", "expressions", "binarySearch", "varargs", "typeToString", "zoom", "pitch", "heatmapDensity", "lineProgress", "skyRadialProgress", "accumulated", "LN2", "E", "LN10", "asin", "acos", "atan", "ceil", "isSupportedScript", "toUpperCase", "success", "supportsPropertyExpression", "spec", "supportsZoomExpression", "parameters", "supportsInterpolation", "interpolated", "getType", "val", "identityFunction", "createFunction", "propertySpec", "isColor", "zoomAndFeatureDependent", "featureDependent", "zoomDependent", "extend", "default", "colorSpace", "colorSpaces", "innerFun", "hashedStops", "categoricalKeyType", "evaluateExponentialFunction", "evaluateIntervalFunction", "evaluateCategoricalFunction", "create", "evaluateIdentityFunction", "featureFunctions", "zoomStops", "featureFunctionStops", "interpolationType", "bind", "coalesce", "keyType", "evaluated", "interp", "colorspace", "evaluatedLower", "apply", "evaluatedUpper", "values", "StyleExpression", "_warningHistory", "_evaluator", "_defaultValue", "getDefaultValue", "_enumValues", "evaluateWithoutErrorHandling", "console", "warn", "isExpression", "createExpression", "parser", "getExpectedType", "ZoomConstantExpression", "_styleExpression", "isStateDependent", "ZoomDependentExpression", "createPropertyExpression", "isZoomConstant", "zoomCurve", "findZoomCurve", "StylePropertyFunction", "specification", "_parameters", "_specification", "deserialize", "normalizePropertyExpression", "err", "constant", "childResult", "enum", "formatted", "resolvedImage", "convertLiteral", "convertFunction", "convertIdentityFunction", "tokens", "convertTokenString", "convertZoomAndPropertyFunction", "convertZoomFunction", "convertPropertyFunction", "getInterpolateOperator", "featureFunctionParameters", "functionType", "getFunctionType", "appendStopPair", "fixupDegenerateStepCurve", "getFallback", "defaultValue", "isStep", "curve", "re", "pos", "literal", "unbundle", "valueOf", "deepUnbundle", "unbundledValue", "isExpressionFilter", "createFilter", "layerType", "needGeometry", "needFeature", "convertFilter", "filterExp", "staticFilter", "extractStaticFilter", "filterSpec", "latest", "compiledStaticFilter", "filterFunc", "globalProperties", "dynamicFilterFunc", "compiledDynamicFilter", "geometryNeeded", "dynamicFilter", "isDynamicFilter", "unionDynamicBranches", "collapseDynamicBooleanExpressions", "collapsed", "collapsedExpression", "subExpression", "isBranchingDynamically", "isRootExpressionDynamic", "dynamicConditionExpressions", "Set", "param", "converted", "convertComparisonOp", "convertNegation", "convertDisjunctionOp", "convertInOp", "convertHasOp", "filters", "_convertFilter", "expectedTypes", "children", "typechecks", "runtimeTypeChecks", "conditions", "negate", "uniformTypes", "uniqueValues", "migrated", "migrateToV8", "migrateToExpressions", "styleIDs", "sourceIDs", "compositedSourceLayers", "compositeID", "deref", "refProperties", "derefLayers", "ref", "deepEqual", "operations", "setStyle", "addLayer", "removeLayer", "setPaintProperty", "setLayoutProperty", "setFilter", "addSource", "removeSource", "setGeoJSONSourceData", "setLayerZoomRange", "setLayerProperty", "setCenter", "setZoom", "setBearing", "setPitch", "setSprite", "setGlyphs", "setTransition", "setLight", "setTerrain", "setFog", "setProjection", "sourceId", "after", "commands", "command", "sourcesRemoved", "updateSource", "canUpdateGeoJSON", "before", "isEqual", "diffSources", "data", "diffLayerPropertyChanges", "layerId", "klass", "pluckId", "indexById", "group", "diffLayers", "beforeOrder", "afterOrder", "beforeIndex", "reduce", "afterIndex", "tracker", "clean", "beforeLayer", "afterLayer", "insertBeforeLayerId", "minzoom", "maxzoom", "diffStyles", "sprite", "transition", "light", "fog", "projection", "removeOrAddSourceCommands", "beforeLayers", "beforeTerrain", "terrain", "ValidationError", "identifier", "__line__", "validateObject", "elementSpecs", "valueSpec", "elementValidators", "objectElementValidators", "styleSpec", "objectKey", "elementSpecKey", "elementSpec", "validateElement", "validateSpec", "required", "validateArray", "arraySpec", "validateArrayElement", "arrayElementValidator", "validate", "arrayElementSpec", "minimum", "maximum", "function", "$version", "arrayIndex", "validateNumber", "specMin", "specMax", "validateFunction", "functionValueSpec", "stopKeyType", "stopDomainValues", "previousStopDomainValue", "previousStopDomainZoom", "isZoomFunction", "isPropertyFunction", "isZoomAndPropertyFunction", "validateFunctionStops", "validateFunctionDefault", "validateFunctionStop", "nextStopDomainZoom", "validateStopDomainValue", "reportValue", "validateExpression", "expressionContext", "expressionObj", "propertyKey", "disallowedFilterParameters", "disallowedParameters", "delete", "size", "validateBoolean", "validateColor", "validateEnum", "validateFilter", "validateNonExpressionFilter", "filter_operator", "geometry_type", "validateProperty", "layerSpec", "transitionMatch", "tokenMatch", "validatePaintProperty", "validateLayoutProperty", "validateLayer", "otherLayer", "sourceType", "lineMetrics", "validateString", "promoteId", "validatePromoteId", "validateSource", "source_geojson", "cluster", "clusterProperties", "mapExpr", "reduceExpr", "source_video", "source_image", "getSourceTypeValues", "memo", "validateLight", "lightSpec", "rootType", "validateTerrain", "terrainSpec", "validateFog", "fogSpec", "validateFormatted", "validateImage", "validateProjection", "projectionSpec", "VALIDATORS", "valid", "validateStyle", "latestStyleSpec", "validateGlyphsURL", "sortErrors", "o", "$V0", "$V1", "$V2", "$V3", "$V4", "$V5", "$V6", "$V7", "$V8", "$V9", "trace", "yy", "symbols_", "terminals_", "productions_", "performAction", "anonymous", "yytext", "yyleng", "yylineno", "yystate", "$$", "_$", "$0", "$", "first_line", "defineProperty", "enumerable", "table", "defaultActions", "parseError", "recoverable", "stack", "vstack", "lstack", "TERROR", "EOF", "arguments", "lexer", "sharedState", "setInput", "yylloc", "yyloc", "ranges", "getPrototypeOf", "lex", "token", "symbol", "state", "action", "yyval", "newState", "errStr", "showPosition", "loc", "last_line", "first_column", "last_column", "range", "_input", "_more", "_backtrack", "done", "matched", "conditionStack", "offset", "ch", "lines", "unput", "oldLines", "more", "reject", "backtrack_lexer", "less", "pastInput", "past", "upcomingInput", "next", "pre", "test_match", "indexed_rule", "backup", "matches", "tempMatch", "rules", "_currentRules", "flex", "begin", "condition", "popState", "topState", "pushState", "stateStackSize", "yy_", "$avoiding_name_collisions", "YY_START", "Parser", "readStyle", "Buffer", "jsonlint", "v8", "validateStyleMin", "SUPPORTED_SPEC_VERSION", "MAX_SOURCES_IN_STYLE", "isValid", "regex", "getSourceCount", "getAllowedKeyErrors", "allowed", "acceptedSourceTypes", "getSourceErrors", "sourceKeys", "sourceUrlPattern", "getSourcesErrors", "count", "sourceErrors", "getRootErrors", "specKeys", "optionalRootProperties", "allowedKeyErrors", "glyphUrlPattern", "spriteUrlPattern", "visibilityPattern", "visibility", "protected", "validateMapboxApiSupported", "styleFunction", "visit"]
}
